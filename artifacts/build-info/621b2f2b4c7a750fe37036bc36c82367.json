{"id":"621b2f2b4c7a750fe37036bc36c82367","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822ProxiableUpgradeable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967Upgradeable {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeaconUpgradeable {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeaconUpgradeable.sol\";\nimport \"../../interfaces/IERC1967Upgradeable.sol\";\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/StorageSlotUpgradeable.sol\";\nimport {Initializable} from \"../utils/Initializable.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    function __ERC1967Upgrade_init() internal onlyInitializing {\n    }\n\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(AddressUpgradeable.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../ERC1967/ERC1967UpgradeUpgradeable.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20PermitUpgradeable {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\nimport \"../extensions/IERC20PermitUpgradeable.sol\";\nimport \"../../../utils/AddressUpgradeable.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20Upgradeable {\n    using AddressUpgradeable for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20Upgradeable token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20Upgradeable token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20PermitUpgradeable token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20Upgradeable token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && AddressUpgradeable.isContract(address(token));\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlotUpgradeable {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/interfaces/IEscrow.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2;\n\ninterface IEscrow {\n    enum EscrowStatuses {\n        Launched,\n        Pending,\n        Partial,\n        Paid,\n        Complete,\n        Cancelled\n    }\n\n    function status() external view returns (EscrowStatuses);\n\n    function addTrustedHandlers(address[] memory _handlers) external;\n\n    function setup(\n        address _reputationOracle,\n        address _recordingOracle,\n        address _exchangeOracle,\n        uint8 _reputationOracleFeePercentage,\n        uint8 _recordingOracleFeePercentage,\n        uint8 _exchangeOracleFeePercentage,\n        string memory _url,\n        string memory _hash\n    ) external;\n\n    function abort() external;\n\n    function cancel() external returns (bool);\n\n    function complete() external;\n\n    function storeResults(string memory _url, string memory _hash) external;\n\n    function bulkPayOut(\n        address[] memory _recipients,\n        uint256[] memory _amounts,\n        string memory _url,\n        string memory _hash,\n        uint256 _txId\n    ) external;\n}\n"},"contracts/interfaces/IRewardPool.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2;\n\ninterface IRewardPool {\n    /**\n     * @dev Keep track of slashers how much they slashed per allocations\n     */\n    struct Reward {\n        address escrowAddress;\n        address slasher;\n        uint256 tokens; // Tokens allocated to a escrowAddress\n    }\n\n    function addReward(\n        address _escrowAddress,\n        address _staker,\n        address _slasher,\n        uint256 _tokens\n    ) external;\n\n    function getRewards(\n        address _escrowAddress\n    ) external view returns (Reward[] memory);\n\n    function distributeReward(address _escrowAddress) external;\n\n    function withdraw(address to) external;\n}\n"},"contracts/interfaces/IStaking.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2;\n\nimport '../libs/Stakes.sol';\n\ninterface IStaking {\n    /**\n     * @dev Possible states an allocation can be\n     * States:\n     * - Null = Staker == address(0)\n     * - Pending = not Null && tokens > 0 && escrowAddress status == Pending\n     * - Active = Pending && escrowAddress status == Launched\n     * - Closed = Active && closedAt != 0\n     * - Completed = Closed && closedAt && escrowAddress status == Complete\n     */\n    enum AllocationState {\n        Null,\n        Pending,\n        Active,\n        Closed,\n        Completed\n    }\n\n    /**\n     * @dev Possible sort fields\n     * Fields:\n     * - None = Do not sort\n     * - Stake = Sort by stake amount\n     */\n    enum SortField {\n        None,\n        Stake\n    }\n\n    /**\n     * @dev Allocate THCX tokens for the purpose of serving queries of a subgraph deployment\n     * An allocation is created in the allocate() function and consumed in claim()\n     */\n    struct Allocation {\n        address escrowAddress;\n        address staker;\n        uint256 tokens; // Tokens allocated to a escrowAddress\n        uint256 createdAt; // Time when allocation was created\n        uint256 closedAt; // Time when allocation was closed\n    }\n\n    function rewardPool() external view returns (address);\n\n    function setMinimumStake(uint256 _minimumStake) external;\n\n    function setLockPeriod(uint32 _lockPeriod) external;\n\n    function setRewardPool(address _rewardPool) external;\n\n    function isAllocation(address _escrowAddress) external view returns (bool);\n\n    function hasStake(address _indexer) external view returns (bool);\n\n    function hasAvailableStake(address _indexer) external view returns (bool);\n\n    function getAllocation(\n        address _escrowAddress\n    ) external view returns (Allocation memory);\n\n    function getAllocationState(\n        address _escrowAddress\n    ) external view returns (AllocationState);\n\n    function getStakedTokens(address _staker) external view returns (uint256);\n\n    function getStaker(\n        address _staker\n    ) external view returns (Stakes.Staker memory);\n\n    function stake(uint256 _tokens) external;\n\n    function unstake(uint256 _tokens) external;\n\n    function withdraw() external;\n\n    function slash(\n        address _slasher,\n        address _staker,\n        address _escrowAddress,\n        uint256 _tokens\n    ) external;\n\n    function allocate(address escrowAddress, uint256 _tokens) external;\n\n    function closeAllocation(address _escrowAddress) external;\n\n    function getListOfStakers()\n        external\n        view\n        returns (address[] memory, Stakes.Staker[] memory);\n}\n"},"contracts/interfaces/THXCTokenInterface.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2;\n\ninterface THXCTokenInterface {\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(\n        address indexed _owner,\n        address indexed _spender,\n        uint256 _value\n    );\n\n    /// @param _owner The address from which the balance will be retrieved\n    /// @return balance The balance\n    function balanceOf(address _owner) external view returns (uint256 balance);\n\n    /// @notice send `_value` token to `_to` from `msg.sender`\n    /// @param _to The address of the recipient\n    /// @param _value The amount of token to be transferred\n    /// @return success Whether the transfer was successful or not\n    function transfer(\n        address _to,\n        uint256 _value\n    ) external returns (bool success);\n\n    /// @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\n    /// @param _from The address of the sender\n    /// @param _to The address of the recipient\n    /// @param _value The amount of token to be transferred\n    /// @return success Whether the transfer was successful or not\n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _value\n    ) external returns (bool success);\n\n    function transferBulk(\n        address[] calldata _tos,\n        uint256[] calldata _values,\n        uint256 _txId\n    ) external returns (uint256 _bulkCount);\n\n    /// @notice `msg.sender` approves `_spender` to spend `_value` tokens\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @param _value The amount of tokens to be approved for transfer\n    /// @return success Whether the approval was successful or not\n    function approve(\n        address _spender,\n        uint256 _value\n    ) external returns (bool success);\n\n    /// @param _owner The address of the account owning tokens\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @return remaining Amount of remaining tokens allowed to spent\n    function allowance(\n        address _owner,\n        address _spender\n    ) external view returns (uint256 remaining);\n}\n"},"contracts/libs/Stakes.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2;\n\nimport '../utils/SafeMath.sol';\nimport '../utils/Math.sol';\n\n/**\n * @title Structures, methods and data are available to manage the staker state.\n */\nlibrary Stakes {\n    using SafeMath for uint256;\n    using Stakes for Stakes.Staker;\n\n    struct Staker {\n        uint256 tokensStaked; // Tokens staked by the Staker\n        uint256 tokensAllocated; // Tokens allocated for jobs\n        uint256 tokensLocked; // Tokens locked for withdrawal\n        uint256 tokensLockedUntil; // Tokens locked until time\n    }\n\n    /**\n     * @dev Deposit tokens to the staker stake.\n     * @param stake Staker struct\n     * @param _tokens Amount of tokens to deposit\n     */\n    function deposit(Stakes.Staker storage stake, uint256 _tokens) internal {\n        stake.tokensStaked = stake.tokensStaked.add(_tokens);\n    }\n\n    /**\n     * @dev Release tokens from the staker stake.\n     * @param stake Staker struct\n     * @param _tokens Amount of tokens to release\n     */\n    function release(Stakes.Staker storage stake, uint256 _tokens) internal {\n        stake.tokensStaked = stake.tokensStaked.sub(_tokens);\n    }\n\n    /**\n     * @dev Add tokens from the main stack to tokensAllocated.\n     * @param stake Staker struct\n     * @param _tokens Amount of tokens to allocate\n     */\n    function allocate(Stakes.Staker storage stake, uint256 _tokens) internal {\n        stake.tokensAllocated = stake.tokensAllocated.add(_tokens);\n    }\n\n    /**\n     * @dev Unallocate tokens from a escrowAddress back to the main stack.\n     * @param stake Staker struct\n     * @param _tokens Amount of tokens to unallocate\n     */\n    function unallocate(Stakes.Staker storage stake, uint256 _tokens) internal {\n        stake.tokensAllocated = stake.tokensAllocated.sub(_tokens);\n    }\n\n    /**\n     * @dev Lock tokens until a lock period pass.\n     * @param stake Staker struct\n     * @param _tokens Amount of tokens to unstake\n     * @param _period Period in blocks that need to pass before withdrawal\n     */\n    function lockTokens(\n        Stakes.Staker storage stake,\n        uint256 _tokens,\n        uint256 _period\n    ) internal {\n        uint256 lockingPeriod = _period;\n\n        if (stake.tokensLocked > 0) {\n            lockingPeriod = Math.weightedAverage(\n                Math.diffOrZero(stake.tokensLockedUntil, block.number), // Remaining lock period\n                stake.tokensLocked,\n                _period,\n                _tokens\n            );\n        }\n\n        stake.tokensLocked = stake.tokensLocked.add(_tokens);\n        stake.tokensLockedUntil = block.number.add(lockingPeriod);\n    }\n\n    /**\n     * @dev Unlock tokens.\n     * @param stake Staker struct\n     * @param _tokens Amount of tokens to unkock\n     */\n    function unlockTokens(\n        Stakes.Staker storage stake,\n        uint256 _tokens\n    ) internal {\n        stake.tokensLocked = stake.tokensLocked.sub(_tokens);\n        if (stake.tokensLocked == 0) {\n            stake.tokensLockedUntil = 0;\n        }\n    }\n\n    /**\n     * @dev Return all tokens available for withdrawal.\n     * @param stake Staker struct\n     * @return Amount of tokens available for withdrawal\n     */\n    function withdrawTokens(\n        Stakes.Staker storage stake\n    ) internal returns (uint256) {\n        uint256 tokensToWithdraw = stake.tokensWithdrawable();\n\n        if (tokensToWithdraw > 0) {\n            stake.unlockTokens(tokensToWithdraw);\n            stake.release(tokensToWithdraw);\n        }\n\n        return tokensToWithdraw;\n    }\n\n    /**\n     * @dev Return all tokens available in stake.\n     * @param stake Staker struct\n     * @return Token amount\n     */\n    function tokensAvailable(\n        Stakes.Staker memory stake\n    ) internal pure returns (uint256) {\n        return stake.tokensStaked.sub(stake.tokensUsed());\n    }\n\n    /**\n     * @dev Return all tokens used in allocations and locked for withdrawal.\n     * @param stake Staker struct\n     * @return Token amount\n     */\n    function tokensUsed(\n        Stakes.Staker memory stake\n    ) internal pure returns (uint256) {\n        return stake.tokensAllocated.add(stake.tokensLocked);\n    }\n\n    /**\n     * @dev Return the amount of tokens staked which are not locked.\n     * @param stake Staker struct\n     * @return Token amount\n     */\n    function tokensSecureStake(\n        Stakes.Staker memory stake\n    ) internal pure returns (uint256) {\n        return stake.tokensStaked.sub(stake.tokensLocked);\n    }\n\n    /**\n     * @dev Tokens available for withdrawal after lock period.\n     * @param stake Staker struct\n     * @return Token amount\n     */\n    function tokensWithdrawable(\n        Stakes.Staker memory stake\n    ) internal view returns (uint256) {\n        if (\n            stake.tokensLockedUntil == 0 ||\n            block.number < stake.tokensLockedUntil\n        ) {\n            return 0;\n        }\n        return stake.tokensLocked;\n    }\n}\n"},"contracts/Staking.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2;\n\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol';\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol';\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\n\nimport './interfaces/THXCTokenInterface.sol';\nimport './interfaces/IEscrow.sol';\nimport './interfaces/IRewardPool.sol';\nimport './interfaces/IStaking.sol';\nimport './libs/Stakes.sol';\nimport './utils/Math.sol';\n\n/**\n * @title Staking contract\n * @dev The Staking contract allows Operator, Exchange Oracle, Recording Oracle and Reputation Oracle to stake to Escrow.\n */\ncontract Staking is IStaking, OwnableUpgradeable, UUPSUpgradeable {\n    using SafeMath for uint256;\n    using Stakes for Stakes.Staker;\n\n    // Token address\n    address public token;\n\n    // Reward pool address\n    address public override rewardPool;\n\n    // Minimum amount of tokens an staker needs to stake\n    uint256 public minimumStake;\n\n    // Time in blocks to unstake\n    uint32 public lockPeriod;\n\n    // Staker stakes: staker => Stake\n    mapping(address => Stakes.Staker) public stakes;\n\n    // List of stakers\n    address[] public stakers;\n\n    // Allocations : escrowAddress => Allocation\n    mapping(address => IStaking.Allocation) public allocations;\n\n    /**\n     * @dev Emitted when `staker` stake `tokens` amount.\n     */\n    event StakeDeposited(address indexed staker, uint256 tokens);\n\n    /**\n     * @dev Emitted when `staker` unstaked and locked `tokens` amount `until` block.\n     */\n    event StakeLocked(address indexed staker, uint256 tokens, uint256 until);\n\n    /**\n     * @dev Emitted when `staker` withdraws `tokens` staked.\n     */\n    event StakeWithdrawn(address indexed staker, uint256 tokens);\n\n    /**\n     * @dev Emitted when `staker` was slashed for a total of `tokens` amount.\n     */\n    event StakeSlashed(\n        address indexed staker,\n        uint256 tokens,\n        address indexed escrowAddress,\n        address slasher\n    );\n\n    /**\n     * @dev Emitted when `staker` allocated `tokens` amount to `escrowAddress`.\n     */\n    event StakeAllocated(\n        address indexed staker,\n        uint256 tokens,\n        address indexed escrowAddress,\n        uint256 createdAt\n    );\n\n    /**\n     * @dev Emitted when `staker` close an allocation `escrowAddress`.\n     */\n    event AllocationClosed(\n        address indexed staker,\n        uint256 tokens,\n        address indexed escrowAddress,\n        uint256 closedAt\n    );\n\n    /**\n     * @dev Emitted when `owner` set new value for `minimumStake`.\n     */\n    event SetMinumumStake(uint256 indexed minimumStake);\n\n    /**\n     * @dev Emitted when `owner` set new value for `lockPeriod`.\n     */\n    event SetLockPeriod(uint32 indexed lockPeriod);\n\n    /**\n     * @dev Emitted when `owner` set new value for `rewardPool`.\n     */\n    event SetRewardPool(address indexed rewardPool);\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(\n        address _token,\n        uint256 _minimumStake,\n        uint32 _lockPeriod\n    ) external payable virtual initializer {\n        __Ownable_init_unchained();\n\n        __Staking_init_unchained(_token, _minimumStake, _lockPeriod);\n    }\n\n    function __Staking_init_unchained(\n        address _token,\n        uint256 _minimumStake,\n        uint32 _lockPeriod\n    ) internal onlyInitializing {\n        token = _token;\n        _setMinimumStake(_minimumStake);\n        _setLockPeriod(_lockPeriod);\n    }\n\n    /**\n     * @dev Set the minimum stake amount.\n     * @param _minimumStake Minimum stake\n     */\n    function setMinimumStake(\n        uint256 _minimumStake\n    ) external override onlyOwner {\n        _setMinimumStake(_minimumStake);\n    }\n\n    /**\n     * @dev Set the minimum stake amount.\n     * @param _minimumStake Minimum stake\n     */\n    function _setMinimumStake(uint256 _minimumStake) private {\n        require(_minimumStake > 0, 'Must be a positive number');\n        minimumStake = _minimumStake;\n        emit SetMinumumStake(minimumStake);\n    }\n\n    /**\n     * @dev Set the lock period for unstaking.\n     * @param _lockPeriod Period in blocks to wait for token withdrawals after unstaking\n     */\n    function setLockPeriod(uint32 _lockPeriod) external override onlyOwner {\n        _setLockPeriod(_lockPeriod);\n    }\n\n    /**\n     * @dev Set the lock period for unstaking.\n     * @param _lockPeriod Period in blocks to wait for token withdrawals after unstaking\n     */\n    function _setLockPeriod(uint32 _lockPeriod) private {\n        require(_lockPeriod > 0, 'Must be a positive number');\n        lockPeriod = _lockPeriod;\n        emit SetLockPeriod(lockPeriod);\n    }\n\n    /**\n     * @dev Set the destionations of the rewards.\n     * @param _rewardPool Reward pool address\n     */\n    function setRewardPool(address _rewardPool) external override onlyOwner {\n        _setRewardPool(_rewardPool);\n    }\n\n    /**\n     * @dev Set the destionations of the rewards.\n     * @param _rewardPool Reward pool address\n     */\n    function _setRewardPool(address _rewardPool) private {\n        require(_rewardPool != address(0), 'Must be a valid address');\n        rewardPool = _rewardPool;\n        emit SetRewardPool(_rewardPool);\n    }\n\n    /**\n     * @dev Return if escrowAddress is use for allocation.\n     * @param _escrowAddress Address used as signer by the staker for an allocation\n     * @return True if _escrowAddress already used\n     */\n    function isAllocation(\n        address _escrowAddress\n    ) external view override returns (bool) {\n        return _getAllocationState(_escrowAddress) != AllocationState.Null;\n    }\n\n    /**\n     * @dev Getter that returns if an staker has any stake.\n     * @param _staker Address of the staker\n     * @return True if staker has staked tokens\n     */\n    function hasStake(address _staker) external view override returns (bool) {\n        return stakes[_staker].tokensStaked > 0;\n    }\n\n    /**\n     * @dev Getter that returns if an staker has any available stake.\n     * @param _staker Address of the staker\n     * @return True if staker has available tokens staked\n     */\n    function hasAvailableStake(\n        address _staker\n    ) external view override returns (bool) {\n        return stakes[_staker].tokensAvailable() > 0;\n    }\n\n    /**\n     * @dev Return the allocation by escrow address.\n     * @param _escrowAddress Address used as allocation identifier\n     * @return Allocation data\n     */\n    function getAllocation(\n        address _escrowAddress\n    ) external view override returns (Allocation memory) {\n        return _getAllocation(_escrowAddress);\n    }\n\n    /**\n     * @dev Return the allocation by job ID.\n     * @param _escrowAddress Address used as allocation identifier\n     * @return Allocation data\n     */\n    function _getAllocation(\n        address _escrowAddress\n    ) private view returns (Allocation memory) {\n        return allocations[_escrowAddress];\n    }\n\n    /**\n     * @dev Return the current state of an allocation.\n     * @param _escrowAddress Address used as the allocation identifier\n     * @return AllocationState\n     */\n    function getAllocationState(\n        address _escrowAddress\n    ) external view override returns (AllocationState) {\n        return _getAllocationState(_escrowAddress);\n    }\n\n    /**\n     * @dev Return the current state of an allocation, partially depends on job status\n     * @param _escrowAddress Job identifier (Escrow address)\n     * @return AllocationState\n     */\n    function _getAllocationState(\n        address _escrowAddress\n    ) private view returns (AllocationState) {\n        Allocation storage allocation = allocations[_escrowAddress];\n\n        if (allocation.staker == address(0)) {\n            return AllocationState.Null;\n        }\n\n        IEscrow escrow = IEscrow(_escrowAddress);\n        IEscrow.EscrowStatuses escrowStatus = escrow.status();\n\n        if (\n            allocation.createdAt != 0 &&\n            allocation.tokens > 0 &&\n            escrowStatus == IEscrow.EscrowStatuses.Pending\n        ) {\n            return AllocationState.Pending;\n        }\n\n        if (\n            allocation.closedAt == 0 &&\n            escrowStatus == IEscrow.EscrowStatuses.Launched\n        ) {\n            return AllocationState.Active;\n        }\n\n        if (\n            allocation.closedAt == 0 &&\n            (escrowStatus == IEscrow.EscrowStatuses.Complete ||\n                escrowStatus == IEscrow.EscrowStatuses.Cancelled)\n        ) {\n            return AllocationState.Completed;\n        }\n\n        return AllocationState.Closed;\n    }\n\n    /**\n     * @dev Get the total amount of tokens staked by the staker.\n     * @param _staker Address of the staker\n     * @return Amount of tokens staked by the staker\n     */\n    function getStakedTokens(\n        address _staker\n    ) external view override returns (uint256) {\n        return stakes[_staker].tokensStaked;\n    }\n\n    /**\n     * @dev Get staker data by the staker address.\n     * @param _staker Address of the staker\n     * @return Staker's data\n     */\n    function getStaker(\n        address _staker\n    ) external view override returns (Stakes.Staker memory) {\n        return stakes[_staker];\n    }\n\n    /**\n     * @dev Get list of stakers\n     * @return List of staker's addresses, and stake data\n     */\n    function getListOfStakers()\n        external\n        view\n        override\n        returns (address[] memory, Stakes.Staker[] memory)\n    {\n        address[] memory _stakerAddresses = stakers;\n        uint256 _stakersCount = _stakerAddresses.length;\n\n        if (_stakersCount == 0) {\n            return (new address[](0), new Stakes.Staker[](0));\n        }\n\n        Stakes.Staker[] memory _stakers = new Stakes.Staker[](_stakersCount);\n\n        for (uint256 _i = 0; _i < _stakersCount; _i++) {\n            _stakers[_i] = stakes[_stakerAddresses[_i]];\n        }\n\n        return (_stakerAddresses, _stakers);\n    }\n\n    /**\n     * @dev Deposit tokens on the staker stake.\n     * @param _tokens Amount of tokens to stake\n     */\n    function stake(uint256 _tokens) external override {\n        require(_tokens > 0, 'Must be a positive number');\n\n        Stakes.Staker memory staker = stakes[msg.sender];\n        require(\n            staker.tokensSecureStake().add(_tokens) >= minimumStake,\n            'Total stake is below the minimum threshold'\n        );\n\n        if (staker.tokensStaked == 0) {\n            staker = Stakes.Staker(0, 0, 0, 0);\n            stakes[msg.sender] = staker;\n            stakers.push(msg.sender);\n        }\n\n        _safeTransferFrom(msg.sender, address(this), _tokens);\n\n        stakes[msg.sender].deposit(_tokens);\n\n        emit StakeDeposited(msg.sender, _tokens);\n    }\n\n    /**\n     * @dev Unstake tokens from the staker stake, lock them until lock period expires.\n     * @param _tokens Amount of tokens to unstake\n     */\n    function unstake(uint256 _tokens) external override {\n        Stakes.Staker storage staker = stakes[msg.sender];\n\n        require(_tokens > 0, 'Must be a positive number');\n        require(\n            staker.tokensAvailable() >= _tokens,\n            'Insufficient amount to unstake'\n        );\n\n        uint256 newStake = staker.tokensSecureStake().sub(_tokens);\n        require(\n            newStake == 0 || newStake >= minimumStake,\n            'Total stake is below the minimum threshold'\n        );\n\n        uint256 tokensToWithdraw = staker.tokensWithdrawable();\n        if (tokensToWithdraw > 0) {\n            _withdraw(msg.sender);\n        }\n\n        staker.lockTokens(_tokens, lockPeriod);\n\n        emit StakeLocked(\n            msg.sender,\n            staker.tokensLocked,\n            staker.tokensLockedUntil\n        );\n    }\n\n    /**\n     * @dev Withdraw staker tokens based on the locking period.\n     */\n    function withdraw() external override {\n        _withdraw(msg.sender);\n    }\n\n    /**\n     * @dev Withdraw staker tokens once the lock period has passed.\n     * @param _staker Address of staker to withdraw funds from\n     */\n    function _withdraw(address _staker) private {\n        uint256 tokensToWithdraw = stakes[_staker].withdrawTokens();\n        require(\n            tokensToWithdraw > 0,\n            'Stake has no available tokens for withdrawal'\n        );\n\n        _safeTransfer(_staker, tokensToWithdraw);\n\n        emit StakeWithdrawn(_staker, tokensToWithdraw);\n    }\n\n    /**\n     * @dev Slash the staker stake allocated to the escrow.\n     * @param _staker Address of staker to slash\n     * @param _escrowAddress Escrow address\n     * @param _tokens Amount of tokens to slash from the indexer stake\n     */\n    function slash(\n        address _slasher,\n        address _staker,\n        address _escrowAddress,\n        uint256 _tokens\n    ) external override onlyOwner {\n        require(_escrowAddress != address(0), 'Must be a valid address');\n\n        Stakes.Staker storage staker = stakes[_staker];\n\n        Allocation storage allocation = allocations[_escrowAddress];\n\n        require(_tokens > 0, 'Must be a positive number');\n\n        require(\n            _tokens <= allocation.tokens,\n            'Slash tokens exceed allocated ones'\n        );\n\n        staker.unallocate(_tokens);\n        allocation.tokens = allocation.tokens.sub(_tokens);\n\n        staker.release(_tokens);\n\n        _safeTransfer(rewardPool, _tokens);\n\n        // Keep record on Reward Pool\n        IRewardPool(rewardPool).addReward(\n            _escrowAddress,\n            _staker,\n            _slasher,\n            _tokens\n        );\n\n        emit StakeSlashed(_staker, _tokens, _escrowAddress, _slasher);\n    }\n\n    /**\n     * @dev Allocate available tokens to an escrow.\n     * @param _escrowAddress The allocationID will work to identify collected funds related to this allocation\n     * @param _tokens Amount of tokens to allocate\n     */\n    function allocate(\n        address _escrowAddress,\n        uint256 _tokens\n    ) external override {\n        _allocate(msg.sender, _escrowAddress, _tokens);\n    }\n\n    /**\n     * @dev Allocate available tokens to an escrow.\n     * @param _staker Staker address to allocate funds from.\n     * @param _escrowAddress The escrow address which collected funds related to this allocation\n     * @param _tokens Amount of tokens to allocate\n     */\n    function _allocate(\n        address _staker,\n        address _escrowAddress,\n        uint256 _tokens\n    ) private {\n        require(_escrowAddress != address(0), 'Must be a valid address');\n        require(\n            stakes[msg.sender].tokensAvailable() >= _tokens,\n            'Insufficient amount of tokens in the stake'\n        );\n        require(_tokens > 0, 'Must be a positive number');\n        require(\n            _getAllocationState(_escrowAddress) == AllocationState.Null,\n            'Allocation already exists'\n        );\n\n        Allocation memory allocation = Allocation(\n            _escrowAddress, // Escrow address\n            _staker, // Staker address\n            _tokens, // Tokens allocated\n            block.number, // createdAt\n            0 // closedAt\n        );\n\n        allocations[_escrowAddress] = allocation;\n        stakes[_staker].allocate(allocation.tokens);\n\n        emit StakeAllocated(\n            _staker,\n            allocation.tokens,\n            _escrowAddress,\n            allocation.createdAt\n        );\n    }\n\n    /**\n     * @dev Close an allocation and free the staked tokens.\n     * @param _escrowAddress The allocation identifier\n     */\n    function closeAllocation(address _escrowAddress) external override {\n        require(_escrowAddress != address(0), 'Must be a valid address');\n\n        _closeAllocation(_escrowAddress);\n    }\n\n    /**\n     * @dev Close an allocation and free the staked tokens.\n     * @param _escrowAddress The allocation identifier\n     */\n    function _closeAllocation(address _escrowAddress) private {\n        Allocation storage allocation = allocations[_escrowAddress];\n        require(\n            allocation.staker == msg.sender,\n            'Only the allocator can close the allocation'\n        );\n\n        AllocationState allocationState = _getAllocationState(_escrowAddress);\n        require(\n            allocationState == AllocationState.Completed,\n            'Allocation has no completed state'\n        );\n\n        allocation.closedAt = block.number;\n        uint256 diffInBlocks = Math.diffOrZero(\n            allocation.closedAt,\n            allocation.createdAt\n        );\n        require(diffInBlocks > 0, 'Allocation cannot be closed so early');\n\n        uint256 _tokens = allocation.tokens;\n\n        stakes[allocation.staker].unallocate(_tokens);\n        allocation.tokens = 0;\n\n        emit AllocationClosed(\n            allocation.staker,\n            _tokens,\n            _escrowAddress,\n            allocation.closedAt\n        );\n    }\n\n    function _safeTransfer(address to, uint256 value) internal {\n        SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable(token), to, value);\n    }\n\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        SafeERC20Upgradeable.safeTransferFrom(\n            IERC20Upgradeable(token),\n            from,\n            to,\n            value\n        );\n    }\n\n    // solhint-disable-next-line no-empty-blocks\n    function _authorizeUpgrade(address) internal override onlyOwner {}\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[43] private __gap;\n}\n"},"contracts/utils/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2;\n\nimport './SafeMath.sol';\n\n/**\n * @title Math Library\n * @notice A collection of functions to perform math operations\n */\nlibrary Math {\n    using SafeMath for uint256;\n\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Calculates the weighted average of two values pondering each of these\n     * values based on configured weights. The contribution of each value N is\n     * weightN/(weightA + weightB).\n     * @param valueA The amount for value A\n     * @param weightA The weight to use for value A\n     * @param valueB The amount for value B\n     * @param weightB The weight to use for value B\n     */\n    function weightedAverage(\n        uint256 valueA,\n        uint256 weightA,\n        uint256 valueB,\n        uint256 weightB\n    ) internal pure returns (uint256) {\n        return\n            valueA.mul(weightA).add(valueB.mul(weightB)).div(\n                weightA.add(weightB)\n            );\n    }\n\n    /**\n     * @dev Returns the difference between two numbers or zero if negative.\n     */\n    function diffOrZero(uint256 x, uint256 y) internal pure returns (uint256) {\n        return (x > y) ? x.sub(y) : 0;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(\n        uint256 value,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return\n                result +\n                (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(\n        uint256 value,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return\n                result +\n                (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"contracts/utils/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, 'SafeMath: addition overflow');\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, 'SafeMath: subtraction overflow');\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, 'SafeMath: multiplication overflow');\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, 'SafeMath: division by zero');\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, 'SafeMath: modulo by zero');\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":1000000},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1675],"Initializable":[667],"OwnableUpgradeable":[132]},"id":133,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":133,"sourceUnit":1676,"src":"127:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":133,"sourceUnit":668,"src":"169:63:0","symbolAliases":[{"foreign":{"id":3,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"src":"177:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":6,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":667,"src":"769:13:0"},"id":7,"nodeType":"InheritanceSpecifier","src":"769:13:0"},{"baseName":{"id":8,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1675,"src":"784:18:0"},"id":9,"nodeType":"InheritanceSpecifier","src":"784:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"234:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":132,"linearizedBaseContracts":[132,1675,667],"name":"OwnableUpgradeable","nameLocation":"747:18:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":11,"mutability":"mutable","name":"_owner","nameLocation":"825:6:0","nodeType":"VariableDeclaration","scope":132,"src":"809:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"809:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":17,"name":"OwnershipTransferred","nameLocation":"844:20:0","nodeType":"EventDefinition","parameters":{"id":16,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"881:13:0","nodeType":"VariableDeclaration","scope":17,"src":"865:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"865:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"912:8:0","nodeType":"VariableDeclaration","scope":17,"src":"896:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14,"name":"address","nodeType":"ElementaryTypeName","src":"896:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"864:57:0"},"src":"838:84:0"},{"body":{"id":26,"nodeType":"Block","src":"1076:43:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":23,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"1086:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":24,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1086:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":25,"nodeType":"ExpressionStatement","src":"1086:26:0"}]},"documentation":{"id":18,"nodeType":"StructuredDocumentation","src":"928:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":27,"implemented":true,"kind":"function","modifiers":[{"id":21,"kind":"modifierInvocation","modifierName":{"id":20,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":612,"src":"1059:16:0"},"nodeType":"ModifierInvocation","src":"1059:16:0"}],"name":"__Ownable_init","nameLocation":"1033:14:0","nodeType":"FunctionDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[],"src":"1047:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"1076:0:0"},"scope":132,"src":"1024:95:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":37,"nodeType":"Block","src":"1187:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":33,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"1216:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1216:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":32,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"1197:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1197:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":36,"nodeType":"ExpressionStatement","src":"1197:32:0"}]},"id":38,"implemented":true,"kind":"function","modifiers":[{"id":30,"kind":"modifierInvocation","modifierName":{"id":29,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":612,"src":"1170:16:0"},"nodeType":"ModifierInvocation","src":"1170:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1134:24:0","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[],"src":"1158:2:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[],"src":"1187:0:0"},"scope":132,"src":"1125:111:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":45,"nodeType":"Block","src":"1345:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":41,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"1355:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":42,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1355:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43,"nodeType":"ExpressionStatement","src":"1355:13:0"},{"id":44,"nodeType":"PlaceholderStatement","src":"1378:1:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"1242:77:0","text":" @dev Throws if called by any account other than the owner."},"id":46,"name":"onlyOwner","nameLocation":"1333:9:0","nodeType":"ModifierDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[],"src":"1342:2:0"},"src":"1324:62:0","virtual":false,"visibility":"internal"},{"body":{"id":54,"nodeType":"Block","src":"1517:30:0","statements":[{"expression":{"id":52,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"1534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":51,"id":53,"nodeType":"Return","src":"1527:13:0"}]},"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"1392:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":55,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1471:5:0","nodeType":"FunctionDefinition","parameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1476:2:0"},"returnParameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":55,"src":"1508:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":49,"name":"address","nodeType":"ElementaryTypeName","src":"1508:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1507:9:0"},"scope":132,"src":"1462:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":68,"nodeType":"Block","src":"1665:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":64,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":60,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"1683:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":61,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1683:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":62,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"1694:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1694:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1683:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1708:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":59,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1675:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1675:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":67,"nodeType":"ExpressionStatement","src":"1675:68:0"}]},"documentation":{"id":56,"nodeType":"StructuredDocumentation","src":"1553:62:0","text":" @dev Throws if the sender is not the owner."},"id":69,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1629:11:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[],"src":"1640:2:0"},"returnParameters":{"id":58,"nodeType":"ParameterList","parameters":[],"src":"1665:0:0"},"scope":132,"src":"1620:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":82,"nodeType":"Block","src":"2139:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":78,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2176:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":77,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2168:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":76,"name":"address","nodeType":"ElementaryTypeName","src":"2168:7:0","typeDescriptions":{}}},"id":79,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2168:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":75,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"2149:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2149:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":81,"nodeType":"ExpressionStatement","src":"2149:30:0"}]},"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"1756:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":83,"implemented":true,"kind":"function","modifiers":[{"id":73,"kind":"modifierInvocation","modifierName":{"id":72,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":46,"src":"2129:9:0"},"nodeType":"ModifierInvocation","src":"2129:9:0"}],"name":"renounceOwnership","nameLocation":"2094:17:0","nodeType":"FunctionDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[],"src":"2111:2:0"},"returnParameters":{"id":74,"nodeType":"ParameterList","parameters":[],"src":"2139:0:0"},"scope":132,"src":"2085:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":105,"nodeType":"Block","src":"2405:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":97,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":92,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"2423:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2443:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":94,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2435:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2435:7:0","typeDescriptions":{}}},"id":96,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2435:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2423:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":98,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2447:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":91,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2415:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2415:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":100,"nodeType":"ExpressionStatement","src":"2415:73:0"},{"expression":{"arguments":[{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"2517:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"2498:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2498:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":104,"nodeType":"ExpressionStatement","src":"2498:28:0"}]},"documentation":{"id":84,"nodeType":"StructuredDocumentation","src":"2192:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":106,"implemented":true,"kind":"function","modifiers":[{"id":89,"kind":"modifierInvocation","modifierName":{"id":88,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":46,"src":"2395:9:0"},"nodeType":"ModifierInvocation","src":"2395:9:0"}],"name":"transferOwnership","nameLocation":"2344:17:0","nodeType":"FunctionDefinition","parameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"newOwner","nameLocation":"2370:8:0","nodeType":"VariableDeclaration","scope":106,"src":"2362:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"2362:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2361:18:0"},"returnParameters":{"id":90,"nodeType":"ParameterList","parameters":[],"src":"2405:0:0"},"scope":132,"src":"2335:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2750:124:0","statements":[{"assignments":[113],"declarations":[{"constant":false,"id":113,"mutability":"mutable","name":"oldOwner","nameLocation":"2768:8:0","nodeType":"VariableDeclaration","scope":125,"src":"2760:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":112,"name":"address","nodeType":"ElementaryTypeName","src":"2760:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":115,"initialValue":{"id":114,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"2779:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2760:25:0"},{"expression":{"id":118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":116,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"2795:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":117,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"2804:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2795:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":119,"nodeType":"ExpressionStatement","src":"2795:17:0"},{"eventCall":{"arguments":[{"id":121,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"2848:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"2858:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":120,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"2827:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2827:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"EmitStatement","src":"2822:45:0"}]},"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"2539:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":126,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2696:18:0","nodeType":"FunctionDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"newOwner","nameLocation":"2723:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2715:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"2715:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2714:18:0"},"returnParameters":{"id":111,"nodeType":"ParameterList","parameters":[],"src":"2750:0:0"},"scope":132,"src":"2687:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2880:254:0","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":131,"mutability":"mutable","name":"__gap","nameLocation":"3159:5:0","nodeType":"VariableDeclaration","scope":132,"src":"3139:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"3139:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":130,"length":{"hexValue":"3439","id":129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:2:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3139:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":133,"src":"729:2438:0","usedErrors":[]}],"src":"102:3066:0"},"id":0},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol","exportedSymbols":{"IERC1967Upgradeable":[153]},"id":154,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":134,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":135,"nodeType":"StructuredDocumentation","src":"132:133:1","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"},"fullyImplemented":true,"id":153,"linearizedBaseContracts":[153],"name":"IERC1967Upgradeable","nameLocation":"276:19:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":136,"nodeType":"StructuredDocumentation","src":"302:68:1","text":" @dev Emitted when the implementation is upgraded."},"id":140,"name":"Upgraded","nameLocation":"381:8:1","nodeType":"EventDefinition","parameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"406:14:1","nodeType":"VariableDeclaration","scope":140,"src":"390:30:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":137,"name":"address","nodeType":"ElementaryTypeName","src":"390:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"389:32:1"},"src":"375:47:1"},{"anonymous":false,"documentation":{"id":141,"nodeType":"StructuredDocumentation","src":"428:67:1","text":" @dev Emitted when the admin account has changed."},"id":147,"name":"AdminChanged","nameLocation":"506:12:1","nodeType":"EventDefinition","parameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":143,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"527:13:1","nodeType":"VariableDeclaration","scope":147,"src":"519:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":142,"name":"address","nodeType":"ElementaryTypeName","src":"519:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":145,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"550:8:1","nodeType":"VariableDeclaration","scope":147,"src":"542:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":144,"name":"address","nodeType":"ElementaryTypeName","src":"542:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"518:41:1"},"src":"500:60:1"},{"anonymous":false,"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"566:59:1","text":" @dev Emitted when the beacon is changed."},"id":152,"name":"BeaconUpgraded","nameLocation":"636:14:1","nodeType":"EventDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"667:6:1","nodeType":"VariableDeclaration","scope":152,"src":"651:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":149,"name":"address","nodeType":"ElementaryTypeName","src":"651:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"650:24:1"},"src":"630:45:1"}],"scope":154,"src":"266:411:1","usedErrors":[]}],"src":"107:571:1"},"id":1},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","exportedSymbols":{"IERC1822ProxiableUpgradeable":[163]},"id":164,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":155,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822ProxiableUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"138:203:2","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":163,"linearizedBaseContracts":[163],"name":"IERC1822ProxiableUpgradeable","nameLocation":"352:28:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":157,"nodeType":"StructuredDocumentation","src":"387:438:2","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":162,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"839:13:2","nodeType":"FunctionDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[],"src":"852:2:2"},"returnParameters":{"id":161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":162,"src":"878:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:9:2"},"scope":163,"src":"830:57:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":164,"src":"342:547:2","usedErrors":[]}],"src":"113:777:2"},"id":2},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1624],"ERC1967UpgradeUpgradeable":[488],"IBeaconUpgradeable":[498],"IERC1822ProxiableUpgradeable":[163],"IERC1967Upgradeable":[153],"Initializable":[667],"StorageSlotUpgradeable":[1785]},"id":489,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":165,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"116:23:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","file":"../beacon/IBeaconUpgradeable.sol","id":166,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":489,"sourceUnit":499,"src":"141:42:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol","file":"../../interfaces/IERC1967Upgradeable.sol","id":167,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":489,"sourceUnit":154,"src":"184:50:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":168,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":489,"sourceUnit":164,"src":"235:56:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":169,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":489,"sourceUnit":1625,"src":"292:44:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","file":"../../utils/StorageSlotUpgradeable.sol","id":170,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":489,"sourceUnit":1786,"src":"337:48:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../utils/Initializable.sol","id":172,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":489,"sourceUnit":668,"src":"386:57:3","symbolAliases":[{"foreign":{"id":171,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"src":"394:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":174,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":667,"src":"677:13:3"},"id":175,"nodeType":"InheritanceSpecifier","src":"677:13:3"},{"baseName":{"id":176,"name":"IERC1967Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":153,"src":"692:19:3"},"id":177,"nodeType":"InheritanceSpecifier","src":"692:19:3"}],"canonicalName":"ERC1967UpgradeUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":173,"nodeType":"StructuredDocumentation","src":"445:184:3","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"},"fullyImplemented":true,"id":488,"linearizedBaseContracts":[488,153,667],"name":"ERC1967UpgradeUpgradeable","nameLocation":"648:25:3","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":180,"mutability":"constant","name":"_ROLLBACK_SLOT","nameLocation":"822:14:3","nodeType":"VariableDeclaration","scope":488,"src":"797:108:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"797:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433","id":179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"839:66:3","typeDescriptions":{"typeIdentifier":"t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1","typeString":"int_const 3304...(69 digits omitted)...9347"},"value":"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"},"visibility":"private"},{"constant":true,"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"912:214:3","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."},"id":184,"mutability":"constant","name":"_IMPLEMENTATION_SLOT","nameLocation":"1157:20:3","nodeType":"VariableDeclaration","scope":488,"src":"1131:115:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":182,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1131:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1180:66:3","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"body":{"id":189,"nodeType":"Block","src":"1312:7:3","statements":[]},"id":190,"implemented":true,"kind":"function","modifiers":[{"id":187,"kind":"modifierInvocation","modifierName":{"id":186,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":612,"src":"1295:16:3"},"nodeType":"ModifierInvocation","src":"1295:16:3"}],"name":"__ERC1967Upgrade_init","nameLocation":"1262:21:3","nodeType":"FunctionDefinition","parameters":{"id":185,"nodeType":"ParameterList","parameters":[],"src":"1283:2:3"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[],"src":"1312:0:3"},"scope":488,"src":"1253:66:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":195,"nodeType":"Block","src":"1394:7:3","statements":[]},"id":196,"implemented":true,"kind":"function","modifiers":[{"id":193,"kind":"modifierInvocation","modifierName":{"id":192,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":612,"src":"1377:16:3"},"nodeType":"ModifierInvocation","src":"1377:16:3"}],"name":"__ERC1967Upgrade_init_unchained","nameLocation":"1334:31:3","nodeType":"FunctionDefinition","parameters":{"id":191,"nodeType":"ParameterList","parameters":[],"src":"1365:2:3"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"1394:0:3"},"scope":488,"src":"1325:76:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":208,"nodeType":"Block","src":"1540:89:3","statements":[{"expression":{"expression":{"arguments":[{"id":204,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"1595:20:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":202,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"1557:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1785_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1707,"src":"1557:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1681_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1557:59:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1681_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1680,"src":"1557:65:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":201,"id":207,"nodeType":"Return","src":"1550:72:3"}]},"documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"1406:67:3","text":" @dev Returns the current implementation address."},"id":209,"implemented":true,"kind":"function","modifiers":[],"name":"_getImplementation","nameLocation":"1487:18:3","nodeType":"FunctionDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[],"src":"1505:2:3"},"returnParameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":209,"src":"1531:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":199,"name":"address","nodeType":"ElementaryTypeName","src":"1531:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1530:9:3"},"scope":488,"src":"1478:151:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":232,"nodeType":"Block","src":"1783:218:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":218,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"1831:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":216,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"1801:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1624_$","typeString":"type(library AddressUpgradeable)"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1312,"src":"1801:29:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1801:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1851:47:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""},"value":"ERC1967: new implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""}],"id":215,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1793:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1793:106:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":222,"nodeType":"ExpressionStatement","src":"1793:106:3"},{"expression":{"id":230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":226,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"1947:20:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":223,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"1909:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1785_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1707,"src":"1909:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1681_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1909:59:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1681_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":228,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1680,"src":"1909:65:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":229,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"1977:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1909:85:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":231,"nodeType":"ExpressionStatement","src":"1909:85:3"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"1635:80:3","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":233,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1729:18:3","nodeType":"FunctionDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"newImplementation","nameLocation":"1756:17:3","nodeType":"VariableDeclaration","scope":233,"src":"1748:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"1748:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1747:27:3"},"returnParameters":{"id":214,"nodeType":"ParameterList","parameters":[],"src":"1783:0:3"},"scope":488,"src":"1720:281:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":247,"nodeType":"Block","src":"2163:96:3","statements":[{"expression":{"arguments":[{"id":240,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"2192:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":239,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"2173:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2173:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":242,"nodeType":"ExpressionStatement","src":"2173:37:3"},{"eventCall":{"arguments":[{"id":244,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"2234:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":243,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2225:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2225:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":246,"nodeType":"EmitStatement","src":"2220:32:3"}]},"documentation":{"id":234,"nodeType":"StructuredDocumentation","src":"2007:95:3","text":" @dev Perform implementation upgrade\n Emits an {Upgraded} event."},"id":248,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeTo","nameLocation":"2116:10:3","nodeType":"FunctionDefinition","parameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"newImplementation","nameLocation":"2135:17:3","nodeType":"VariableDeclaration","scope":248,"src":"2127:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":235,"name":"address","nodeType":"ElementaryTypeName","src":"2127:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2126:27:3"},"returnParameters":{"id":238,"nodeType":"ParameterList","parameters":[],"src":"2163:0:3"},"scope":488,"src":"2107:152:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":277,"nodeType":"Block","src":"2491:178:3","statements":[{"expression":{"arguments":[{"id":259,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"2512:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":258,"name":"_upgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"2501:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":261,"nodeType":"ExpressionStatement","src":"2501:29:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":262,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"2544:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2544:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2558:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2544:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":266,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"2563:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2544:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":276,"nodeType":"IfStatement","src":"2540:123:3","trueBody":{"id":275,"nodeType":"Block","src":"2574:89:3","statements":[{"expression":{"arguments":[{"id":271,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"2628:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":272,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"2647:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":268,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"2588:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1624_$","typeString":"type(library AddressUpgradeable)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1511,"src":"2588:39:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2588:64:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":274,"nodeType":"ExpressionStatement","src":"2588:64:3"}]}}]},"documentation":{"id":249,"nodeType":"StructuredDocumentation","src":"2265:123:3","text":" @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."},"id":278,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCall","nameLocation":"2402:17:3","nodeType":"FunctionDefinition","parameters":{"id":256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":251,"mutability":"mutable","name":"newImplementation","nameLocation":"2428:17:3","nodeType":"VariableDeclaration","scope":278,"src":"2420:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":250,"name":"address","nodeType":"ElementaryTypeName","src":"2420:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":253,"mutability":"mutable","name":"data","nameLocation":"2460:4:3","nodeType":"VariableDeclaration","scope":278,"src":"2447:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":252,"name":"bytes","nodeType":"ElementaryTypeName","src":"2447:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":255,"mutability":"mutable","name":"forceCall","nameLocation":"2471:9:3","nodeType":"VariableDeclaration","scope":278,"src":"2466:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":254,"name":"bool","nodeType":"ElementaryTypeName","src":"2466:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2419:62:3"},"returnParameters":{"id":257,"nodeType":"ParameterList","parameters":[],"src":"2491:0:3"},"scope":488,"src":"2393:276:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":330,"nodeType":"Block","src":"2943:842:3","statements":[{"condition":{"expression":{"arguments":[{"id":290,"name":"_ROLLBACK_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"3295:14:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":288,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"3257:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1785_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getBooleanSlot","nodeType":"MemberAccess","referencedDeclaration":1718,"src":"3257:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$1684_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.BooleanSlot storage pointer)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3257:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1684_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot storage pointer"}},"id":292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1683,"src":"3257:59:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":328,"nodeType":"Block","src":"3386:393:3","statements":[{"clauses":[{"block":{"id":313,"nodeType":"Block","src":"3491:115:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":307,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"3517:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":308,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"3525:20:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3517:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944","id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3547:43:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""},"value":"ERC1967Upgrade: unsupported proxiableUUID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""}],"id":306,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3509:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3509:82:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":312,"nodeType":"ExpressionStatement","src":"3509:82:3"}]},"errorName":"","id":314,"nodeType":"TryCatchClause","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"slot","nameLocation":"3485:4:3","nodeType":"VariableDeclaration","scope":314,"src":"3477:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3477:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3476:14:3"},"src":"3468:138:3"},{"block":{"id":319,"nodeType":"Block","src":"3613:89:3","statements":[{"expression":{"arguments":[{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053","id":316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3638:48:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""},"value":"ERC1967Upgrade: new implementation is not UUPS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""}],"id":315,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3631:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3631:56:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":318,"nodeType":"ExpressionStatement","src":"3631:56:3"}]},"errorName":"","id":320,"nodeType":"TryCatchClause","src":"3607:95:3"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":299,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3433:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":298,"name":"IERC1822ProxiableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":163,"src":"3404:28:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822ProxiableUpgradeable_$163_$","typeString":"type(contract IERC1822ProxiableUpgradeable)"}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3404:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822ProxiableUpgradeable_$163","typeString":"contract IERC1822ProxiableUpgradeable"}},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":162,"src":"3404:61:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3404:63:3","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":321,"nodeType":"TryStatement","src":"3400:302:3"},{"expression":{"arguments":[{"id":323,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3733:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":324,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"3752:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":325,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"3758:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":322,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"3715:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3715:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":327,"nodeType":"ExpressionStatement","src":"3715:53:3"}]},"id":329,"nodeType":"IfStatement","src":"3253:526:3","trueBody":{"id":297,"nodeType":"Block","src":"3318:62:3","statements":[{"expression":{"arguments":[{"id":294,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3351:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":293,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"3332:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3332:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":296,"nodeType":"ExpressionStatement","src":"3332:37:3"}]}}]},"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"2675:161:3","text":" @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."},"id":331,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"2850:21:3","nodeType":"FunctionDefinition","parameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"newImplementation","nameLocation":"2880:17:3","nodeType":"VariableDeclaration","scope":331,"src":"2872:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"2872:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"data","nameLocation":"2912:4:3","nodeType":"VariableDeclaration","scope":331,"src":"2899:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":282,"name":"bytes","nodeType":"ElementaryTypeName","src":"2899:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":285,"mutability":"mutable","name":"forceCall","nameLocation":"2923:9:3","nodeType":"VariableDeclaration","scope":331,"src":"2918:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":284,"name":"bool","nodeType":"ElementaryTypeName","src":"2918:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2871:62:3"},"returnParameters":{"id":287,"nodeType":"ParameterList","parameters":[],"src":"2943:0:3"},"scope":488,"src":"2841:944:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":332,"nodeType":"StructuredDocumentation","src":"3791:189:3","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."},"id":335,"mutability":"constant","name":"_ADMIN_SLOT","nameLocation":"4011:11:3","nodeType":"VariableDeclaration","scope":488,"src":"3985:106:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":333,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3985:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4025:66:3","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":347,"nodeType":"Block","src":"4206:80:3","statements":[{"expression":{"expression":{"arguments":[{"id":343,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"4261:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":341,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"4223:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1785_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1707,"src":"4223:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1681_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4223:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1681_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":345,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1680,"src":"4223:56:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":340,"id":346,"nodeType":"Return","src":"4216:63:3"}]},"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"4098:50:3","text":" @dev Returns the current admin."},"id":348,"implemented":true,"kind":"function","modifiers":[],"name":"_getAdmin","nameLocation":"4162:9:3","nodeType":"FunctionDefinition","parameters":{"id":337,"nodeType":"ParameterList","parameters":[],"src":"4171:2:3"},"returnParameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":348,"src":"4197:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"4197:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4196:9:3"},"scope":488,"src":"4153:133:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":373,"nodeType":"Block","src":"4413:167:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":355,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"4431:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4451:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4443:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"4443:7:3","typeDescriptions":{}}},"id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4443:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4431:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373","id":361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4455:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""},"value":"ERC1967: new admin is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""}],"id":354,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4423:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4423:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":363,"nodeType":"ExpressionStatement","src":"4423:73:3"},{"expression":{"id":371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":367,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"4544:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":364,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"4506:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1785_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1707,"src":"4506:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1681_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4506:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1681_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":369,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1680,"src":"4506:56:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":370,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"4565:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4506:67:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":372,"nodeType":"ExpressionStatement","src":"4506:67:3"}]},"documentation":{"id":349,"nodeType":"StructuredDocumentation","src":"4292:71:3","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":374,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4377:9:3","nodeType":"FunctionDefinition","parameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"newAdmin","nameLocation":"4395:8:3","nodeType":"VariableDeclaration","scope":374,"src":"4387:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":350,"name":"address","nodeType":"ElementaryTypeName","src":"4387:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4386:18:3"},"returnParameters":{"id":353,"nodeType":"ParameterList","parameters":[],"src":"4413:0:3"},"scope":488,"src":"4368:212:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":390,"nodeType":"Block","src":"4740:86:3","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":381,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"4768:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4768:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":383,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"4781:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":380,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"4755:12:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4755:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":385,"nodeType":"EmitStatement","src":"4750:40:3"},{"expression":{"arguments":[{"id":387,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"4810:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":386,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"4800:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4800:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":389,"nodeType":"ExpressionStatement","src":"4800:19:3"}]},"documentation":{"id":375,"nodeType":"StructuredDocumentation","src":"4586:100:3","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":391,"implemented":true,"kind":"function","modifiers":[],"name":"_changeAdmin","nameLocation":"4700:12:3","nodeType":"FunctionDefinition","parameters":{"id":378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":377,"mutability":"mutable","name":"newAdmin","nameLocation":"4721:8:3","nodeType":"VariableDeclaration","scope":391,"src":"4713:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":376,"name":"address","nodeType":"ElementaryTypeName","src":"4713:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4712:18:3"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[],"src":"4740:0:3"},"scope":488,"src":"4691:135:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"4832:232:3","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"id":395,"mutability":"constant","name":"_BEACON_SLOT","nameLocation":"5095:12:3","nodeType":"VariableDeclaration","scope":488,"src":"5069:107:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5069:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5110:66:3","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":407,"nodeType":"Block","src":"5293:81:3","statements":[{"expression":{"expression":{"arguments":[{"id":403,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"5348:12:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":401,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"5310:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1785_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1707,"src":"5310:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1681_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5310:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1681_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1680,"src":"5310:57:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":400,"id":406,"nodeType":"Return","src":"5303:64:3"}]},"documentation":{"id":396,"nodeType":"StructuredDocumentation","src":"5183:51:3","text":" @dev Returns the current beacon."},"id":408,"implemented":true,"kind":"function","modifiers":[],"name":"_getBeacon","nameLocation":"5248:10:3","nodeType":"FunctionDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[],"src":"5258:2:3"},"returnParameters":{"id":400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":408,"src":"5284:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"5284:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5283:9:3"},"scope":488,"src":"5239:135:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":443,"nodeType":"Block","src":"5503:368:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":417,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"5551:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":415,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"5521:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1624_$","typeString":"type(library AddressUpgradeable)"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1312,"src":"5521:29:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5521:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374","id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5563:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""},"value":"ERC1967: new beacon is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""}],"id":414,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5513:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5513:90:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":421,"nodeType":"ExpressionStatement","src":"5513:90:3"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":426,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"5683:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":425,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"5664:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$498_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5664:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$498","typeString":"contract IBeaconUpgradeable"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":497,"src":"5664:44:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5664:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":423,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"5634:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1624_$","typeString":"type(library AddressUpgradeable)"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1312,"src":"5634:29:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5634:77:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5725:50:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""},"value":"ERC1967: beacon implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""}],"id":422,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5613:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5613:172:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":433,"nodeType":"ExpressionStatement","src":"5613:172:3"},{"expression":{"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":437,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"5833:12:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":434,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"5795:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1785_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1707,"src":"5795:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1681_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5795:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1681_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":439,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1680,"src":"5795:57:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":440,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"5855:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5795:69:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":442,"nodeType":"ExpressionStatement","src":"5795:69:3"}]},"documentation":{"id":409,"nodeType":"StructuredDocumentation","src":"5380:71:3","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":444,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5465:10:3","nodeType":"FunctionDefinition","parameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":411,"mutability":"mutable","name":"newBeacon","nameLocation":"5484:9:3","nodeType":"VariableDeclaration","scope":444,"src":"5476:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"5476:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5475:19:3"},"returnParameters":{"id":413,"nodeType":"ParameterList","parameters":[],"src":"5503:0:3"},"scope":488,"src":"5456:415:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":481,"nodeType":"Block","src":"6270:239:3","statements":[{"expression":{"arguments":[{"id":455,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6291:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":454,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"6280:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6280:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":457,"nodeType":"ExpressionStatement","src":"6280:21:3"},{"eventCall":{"arguments":[{"id":459,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6331:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":458,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"6316:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6316:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":461,"nodeType":"EmitStatement","src":"6311:30:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":462,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"6355:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6355:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6355:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":466,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"6374:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6355:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":480,"nodeType":"IfStatement","src":"6351:152:3","trueBody":{"id":479,"nodeType":"Block","src":"6385:118:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":472,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6458:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":471,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"6439:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$498_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6439:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$498","typeString":"contract IBeaconUpgradeable"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":497,"src":"6439:44:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6439:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":476,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"6487:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":468,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"6399:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1624_$","typeString":"type(library AddressUpgradeable)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1511,"src":"6399:39:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6399:93:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":478,"nodeType":"ExpressionStatement","src":"6399:93:3"}]}}]},"documentation":{"id":445,"nodeType":"StructuredDocumentation","src":"5877:292:3","text":" @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."},"id":482,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeBeaconToAndCall","nameLocation":"6183:23:3","nodeType":"FunctionDefinition","parameters":{"id":452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"mutability":"mutable","name":"newBeacon","nameLocation":"6215:9:3","nodeType":"VariableDeclaration","scope":482,"src":"6207:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":446,"name":"address","nodeType":"ElementaryTypeName","src":"6207:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"data","nameLocation":"6239:4:3","nodeType":"VariableDeclaration","scope":482,"src":"6226:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":448,"name":"bytes","nodeType":"ElementaryTypeName","src":"6226:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":451,"mutability":"mutable","name":"forceCall","nameLocation":"6250:9:3","nodeType":"VariableDeclaration","scope":482,"src":"6245:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":450,"name":"bool","nodeType":"ElementaryTypeName","src":"6245:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6206:54:3"},"returnParameters":{"id":453,"nodeType":"ParameterList","parameters":[],"src":"6270:0:3"},"scope":488,"src":"6174:335:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"6515:254:3","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":487,"mutability":"mutable","name":"__gap","nameLocation":"6794:5:3","nodeType":"VariableDeclaration","scope":488,"src":"6774:25:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":484,"name":"uint256","nodeType":"ElementaryTypeName","src":"6774:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":486,"length":{"hexValue":"3530","id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6782:2:3","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"6774:11:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":489,"src":"630:6172:3","usedErrors":[]}],"src":"116:6687:3"},"id":3},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","exportedSymbols":{"IBeaconUpgradeable":[498]},"id":499,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":490,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"93:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeaconUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"118:79:4","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":498,"linearizedBaseContracts":[498],"name":"IBeaconUpgradeable","nameLocation":"208:18:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"233:162:4","text":" @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."},"functionSelector":"5c60da1b","id":497,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"409:14:4","nodeType":"FunctionDefinition","parameters":{"id":493,"nodeType":"ParameterList","parameters":[],"src":"423:2:4"},"returnParameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":497,"src":"449:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"449:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"448:9:4"},"scope":498,"src":"400:58:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":499,"src":"198:262:4","usedErrors":[]}],"src":"93:368:4"},"id":4},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[1624],"Initializable":[667]},"id":668,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":500,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":501,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":668,"sourceUnit":1625,"src":"138:44:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":502,"nodeType":"StructuredDocumentation","src":"184:2209:5","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":667,"linearizedBaseContracts":[667],"name":"Initializable","nameLocation":"2412:13:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":503,"nodeType":"StructuredDocumentation","src":"2432:109:5","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":505,"mutability":"mutable","name":"_initialized","nameLocation":"2560:12:5","nodeType":"VariableDeclaration","scope":667,"src":"2546:26:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":504,"name":"uint8","nodeType":"ElementaryTypeName","src":"2546:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"2579:91:5","text":" @dev Indicates that the contract is in the process of being initialized."},"id":508,"mutability":"mutable","name":"_initializing","nameLocation":"2688:13:5","nodeType":"VariableDeclaration","scope":667,"src":"2675:26:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":507,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"2708:90:5","text":" @dev Triggered when the contract has been initialized or reinitialized."},"id":513,"name":"Initialized","nameLocation":"2809:11:5","nodeType":"EventDefinition","parameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2827:7:5","nodeType":"VariableDeclaration","scope":513,"src":"2821:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":510,"name":"uint8","nodeType":"ElementaryTypeName","src":"2821:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2820:15:5"},"src":"2803:33:5"},{"body":{"id":568,"nodeType":"Block","src":"3269:483:5","statements":[{"assignments":[517],"declarations":[{"constant":false,"id":517,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3284:14:5","nodeType":"VariableDeclaration","scope":568,"src":"3279:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":516,"name":"bool","nodeType":"ElementaryTypeName","src":"3279:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":520,"initialValue":{"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3301:14:5","subExpression":{"id":518,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3302:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3279:36:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":522,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"3347:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":523,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"3365:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3365:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3347:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":527,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3346:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3387:45:5","subExpression":{"arguments":[{"arguments":[{"id":532,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3426:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$667","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$667","typeString":"contract Initializable"}],"id":531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":530,"name":"address","nodeType":"ElementaryTypeName","src":"3418:7:5","typeDescriptions":{}}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3418:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":528,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"3388:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1624_$","typeString":"type(library AddressUpgradeable)"}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1312,"src":"3388:29:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3388:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":536,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"3436:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3452:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3436:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3387:66:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3386:68:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3346:108:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3468:48:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":521,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3325:201:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":544,"nodeType":"ExpressionStatement","src":"3325:201:5"},{"expression":{"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":545,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"3536:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3551:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3536:16:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":548,"nodeType":"ExpressionStatement","src":"3536:16:5"},{"condition":{"id":549,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"3566:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":555,"nodeType":"IfStatement","src":"3562:65:5","trueBody":{"id":554,"nodeType":"Block","src":"3582:45:5","statements":[{"expression":{"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":550,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3596:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3612:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3596:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":553,"nodeType":"ExpressionStatement","src":"3596:20:5"}]}},{"id":556,"nodeType":"PlaceholderStatement","src":"3636:1:5"},{"condition":{"id":557,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"3651:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":567,"nodeType":"IfStatement","src":"3647:99:5","trueBody":{"id":566,"nodeType":"Block","src":"3667:79:5","statements":[{"expression":{"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":558,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3681:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3697:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3681:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":561,"nodeType":"ExpressionStatement","src":"3681:21:5"},{"eventCall":{"arguments":[{"hexValue":"31","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3733:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":562,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"3721:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3721:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":565,"nodeType":"EmitStatement","src":"3716:19:5"}]}}]},"documentation":{"id":514,"nodeType":"StructuredDocumentation","src":"2842:399:5","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":569,"name":"initializer","nameLocation":"3255:11:5","nodeType":"ModifierDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[],"src":"3266:2:5"},"src":"3246:506:5","virtual":false,"visibility":"internal"},{"body":{"id":601,"nodeType":"Block","src":"4863:255:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4881:14:5","subExpression":{"id":575,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"4882:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":577,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"4899:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":578,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"4914:7:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4899:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4881:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4923:48:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":574,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4873:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4873:99:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":583,"nodeType":"ExpressionStatement","src":"4873:99:5"},{"expression":{"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":584,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"4982:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":585,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"4997:7:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4982:22:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":587,"nodeType":"ExpressionStatement","src":"4982:22:5"},{"expression":{"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":588,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"5014:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5030:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5014:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":591,"nodeType":"ExpressionStatement","src":"5014:20:5"},{"id":592,"nodeType":"PlaceholderStatement","src":"5044:1:5"},{"expression":{"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":593,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"5055:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5071:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5055:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":596,"nodeType":"ExpressionStatement","src":"5055:21:5"},{"eventCall":{"arguments":[{"id":598,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"5103:7:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":597,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"5091:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5091:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":600,"nodeType":"EmitStatement","src":"5086:25:5"}]},"documentation":{"id":570,"nodeType":"StructuredDocumentation","src":"3758:1062:5","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":602,"name":"reinitializer","nameLocation":"4834:13:5","nodeType":"ModifierDefinition","parameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":572,"mutability":"mutable","name":"version","nameLocation":"4854:7:5","nodeType":"VariableDeclaration","scope":602,"src":"4848:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":571,"name":"uint8","nodeType":"ElementaryTypeName","src":"4848:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4847:15:5"},"src":"4825:293:5","virtual":false,"visibility":"internal"},{"body":{"id":611,"nodeType":"Block","src":"5356:97:5","statements":[{"expression":{"arguments":[{"id":606,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"5374:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5389:45:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":605,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5366:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5366:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":609,"nodeType":"ExpressionStatement","src":"5366:69:5"},{"id":610,"nodeType":"PlaceholderStatement","src":"5445:1:5"}]},"documentation":{"id":603,"nodeType":"StructuredDocumentation","src":"5124:199:5","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":612,"name":"onlyInitializing","nameLocation":"5337:16:5","nodeType":"ModifierDefinition","parameters":{"id":604,"nodeType":"ParameterList","parameters":[],"src":"5353:2:5"},"src":"5328:125:5","virtual":false,"visibility":"internal"},{"body":{"id":647,"nodeType":"Block","src":"5988:231:5","statements":[{"expression":{"arguments":[{"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6006:14:5","subExpression":{"id":617,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"6007:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6022:41:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":616,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5998:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5998:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":621,"nodeType":"ExpressionStatement","src":"5998:66:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":622,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"6078:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6099:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":624,"name":"uint8","nodeType":"ElementaryTypeName","src":"6099:5:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":623,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6094:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6094:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6094:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6078:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":646,"nodeType":"IfStatement","src":"6074:139:5","trueBody":{"id":645,"nodeType":"Block","src":"6111:102:5","statements":[{"expression":{"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":629,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"6125:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6145:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":631,"name":"uint8","nodeType":"ElementaryTypeName","src":"6145:5:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":630,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6140:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6140:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6140:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6125:30:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":636,"nodeType":"ExpressionStatement","src":"6125:30:5"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6191:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":639,"name":"uint8","nodeType":"ElementaryTypeName","src":"6191:5:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":638,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6186:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6186:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6186:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":637,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"6174:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6174:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":644,"nodeType":"EmitStatement","src":"6169:33:5"}]}}]},"documentation":{"id":613,"nodeType":"StructuredDocumentation","src":"5459:475:5","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":648,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5948:20:5","nodeType":"FunctionDefinition","parameters":{"id":614,"nodeType":"ParameterList","parameters":[],"src":"5968:2:5"},"returnParameters":{"id":615,"nodeType":"ParameterList","parameters":[],"src":"5988:0:5"},"scope":667,"src":"5939:280:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":656,"nodeType":"Block","src":"6393:36:5","statements":[{"expression":{"id":654,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"6410:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":653,"id":655,"nodeType":"Return","src":"6403:19:5"}]},"documentation":{"id":649,"nodeType":"StructuredDocumentation","src":"6225:99:5","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":657,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6338:22:5","nodeType":"FunctionDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[],"src":"6360:2:5"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":657,"src":"6386:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":651,"name":"uint8","nodeType":"ElementaryTypeName","src":"6386:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6385:7:5"},"scope":667,"src":"6329:100:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":665,"nodeType":"Block","src":"6601:37:5","statements":[{"expression":{"id":663,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"6618:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":662,"id":664,"nodeType":"Return","src":"6611:20:5"}]},"documentation":{"id":658,"nodeType":"StructuredDocumentation","src":"6435:105:5","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":666,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6554:15:5","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[],"src":"6569:2:5"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":666,"src":"6595:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":660,"name":"bool","nodeType":"ElementaryTypeName","src":"6595:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6594:6:5"},"scope":667,"src":"6545:93:5","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":668,"src":"2394:4246:5","usedErrors":[]}],"src":"113:6528:5"},"id":5},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1624],"ERC1967UpgradeUpgradeable":[488],"IBeaconUpgradeable":[498],"IERC1822ProxiableUpgradeable":[163],"IERC1967Upgradeable":[153],"Initializable":[667],"StorageSlotUpgradeable":[1785],"UUPSUpgradeable":[804]},"id":805,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":669,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:6"},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":670,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":805,"sourceUnit":164,"src":"140:56:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","file":"../ERC1967/ERC1967UpgradeUpgradeable.sol","id":671,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":805,"sourceUnit":489,"src":"197:50:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":673,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":805,"sourceUnit":668,"src":"248:50:6","symbolAliases":[{"foreign":{"id":672,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"src":"256:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":675,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":667,"src":"986:13:6"},"id":676,"nodeType":"InheritanceSpecifier","src":"986:13:6"},{"baseName":{"id":677,"name":"IERC1822ProxiableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":163,"src":"1001:28:6"},"id":678,"nodeType":"InheritanceSpecifier","src":"1001:28:6"},{"baseName":{"id":679,"name":"ERC1967UpgradeUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":488,"src":"1031:25:6"},"id":680,"nodeType":"InheritanceSpecifier","src":"1031:25:6"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":674,"nodeType":"StructuredDocumentation","src":"300:648:6","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"},"fullyImplemented":false,"id":804,"linearizedBaseContracts":[804,488,153,163,667],"name":"UUPSUpgradeable","nameLocation":"967:15:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":681,"nodeType":"StructuredDocumentation","src":"1063:87:6","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"id":687,"mutability":"immutable","name":"__self","nameLocation":"1181:6:6","nodeType":"VariableDeclaration","scope":804,"src":"1155:48:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":682,"name":"address","nodeType":"ElementaryTypeName","src":"1155:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":685,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1198:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$804","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$804","typeString":"contract UUPSUpgradeable"}],"id":684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1190:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":683,"name":"address","nodeType":"ElementaryTypeName","src":"1190:7:6","typeDescriptions":{}}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1190:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":709,"nodeType":"Block","src":"1729:205:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":693,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1755:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$804","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$804","typeString":"contract UUPSUpgradeable"}],"id":692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1747:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"1747:7:6","typeDescriptions":{}}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1747:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":695,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"1764:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1747:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1772:46:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""},"value":"Function must be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""}],"id":690,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1739:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1739:80:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":699,"nodeType":"ExpressionStatement","src":"1739:80:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":701,"name":"_getImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"1837:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1837:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":703,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"1861:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1837:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879","id":705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1869:46:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""},"value":"Function must be called through active proxy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""}],"id":700,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1829:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1829:87:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":707,"nodeType":"ExpressionStatement","src":"1829:87:6"},{"id":708,"nodeType":"PlaceholderStatement","src":"1926:1:6"}]},"documentation":{"id":688,"nodeType":"StructuredDocumentation","src":"1210:493:6","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":710,"name":"onlyProxy","nameLocation":"1717:9:6","nodeType":"ModifierDefinition","parameters":{"id":689,"nodeType":"ParameterList","parameters":[],"src":"1726:2:6"},"src":"1708:226:6","virtual":false,"visibility":"internal"},{"body":{"id":724,"nodeType":"Block","src":"2164:120:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":716,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2190:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$804","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$804","typeString":"contract UUPSUpgradeable"}],"id":715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2182:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":714,"name":"address","nodeType":"ElementaryTypeName","src":"2182:7:6","typeDescriptions":{}}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2182:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":718,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"2199:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2182:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2207:58:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""},"value":"UUPSUpgradeable: must not be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""}],"id":713,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2174:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2174:92:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":722,"nodeType":"ExpressionStatement","src":"2174:92:6"},{"id":723,"nodeType":"PlaceholderStatement","src":"2276:1:6"}]},"documentation":{"id":711,"nodeType":"StructuredDocumentation","src":"1940:195:6","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":725,"name":"notDelegated","nameLocation":"2149:12:6","nodeType":"ModifierDefinition","parameters":{"id":712,"nodeType":"ParameterList","parameters":[],"src":"2161:2:6"},"src":"2140:144:6","virtual":false,"visibility":"internal"},{"body":{"id":730,"nodeType":"Block","src":"2350:7:6","statements":[]},"id":731,"implemented":true,"kind":"function","modifiers":[{"id":728,"kind":"modifierInvocation","modifierName":{"id":727,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":612,"src":"2333:16:6"},"nodeType":"ModifierInvocation","src":"2333:16:6"}],"name":"__UUPSUpgradeable_init","nameLocation":"2299:22:6","nodeType":"FunctionDefinition","parameters":{"id":726,"nodeType":"ParameterList","parameters":[],"src":"2321:2:6"},"returnParameters":{"id":729,"nodeType":"ParameterList","parameters":[],"src":"2350:0:6"},"scope":804,"src":"2290:67:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":736,"nodeType":"Block","src":"2433:7:6","statements":[]},"id":737,"implemented":true,"kind":"function","modifiers":[{"id":734,"kind":"modifierInvocation","modifierName":{"id":733,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":612,"src":"2416:16:6"},"nodeType":"ModifierInvocation","src":"2416:16:6"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"2372:32:6","nodeType":"FunctionDefinition","parameters":{"id":732,"nodeType":"ParameterList","parameters":[],"src":"2404:2:6"},"returnParameters":{"id":735,"nodeType":"ParameterList","parameters":[],"src":"2433:0:6"},"scope":804,"src":"2363:77:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[162],"body":{"id":748,"nodeType":"Block","src":"3114:44:6","statements":[{"expression":{"id":746,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"3131:20:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":745,"id":747,"nodeType":"Return","src":"3124:27:6"}]},"documentation":{"id":738,"nodeType":"StructuredDocumentation","src":"2445:577:6","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":749,"implemented":true,"kind":"function","modifiers":[{"id":742,"kind":"modifierInvocation","modifierName":{"id":741,"name":"notDelegated","nodeType":"IdentifierPath","referencedDeclaration":725,"src":"3083:12:6"},"nodeType":"ModifierInvocation","src":"3083:12:6"}],"name":"proxiableUUID","nameLocation":"3036:13:6","nodeType":"FunctionDefinition","overrides":{"id":740,"nodeType":"OverrideSpecifier","overrides":[],"src":"3074:8:6"},"parameters":{"id":739,"nodeType":"ParameterList","parameters":[],"src":"3049:2:6"},"returnParameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":749,"src":"3105:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":743,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3105:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3104:9:6"},"scope":804,"src":"3027:131:6","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":770,"nodeType":"Block","src":"3479:124:6","statements":[{"expression":{"arguments":[{"id":758,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"3507:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":757,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"3489:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3489:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":760,"nodeType":"ExpressionStatement","src":"3489:36:6"},{"expression":{"arguments":[{"id":762,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"3557:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3586:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3576:9:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":763,"name":"bytes","nodeType":"ElementaryTypeName","src":"3580:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3576:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3590:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":761,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"3535:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3535:61:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":769,"nodeType":"ExpressionStatement","src":"3535:61:6"}]},"documentation":{"id":750,"nodeType":"StructuredDocumentation","src":"3164:239:6","text":" @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"3659cfe6","id":771,"implemented":true,"kind":"function","modifiers":[{"id":755,"kind":"modifierInvocation","modifierName":{"id":754,"name":"onlyProxy","nodeType":"IdentifierPath","referencedDeclaration":710,"src":"3469:9:6"},"nodeType":"ModifierInvocation","src":"3469:9:6"}],"name":"upgradeTo","nameLocation":"3417:9:6","nodeType":"FunctionDefinition","parameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"newImplementation","nameLocation":"3435:17:6","nodeType":"VariableDeclaration","scope":771,"src":"3427:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":751,"name":"address","nodeType":"ElementaryTypeName","src":"3427:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3426:27:6"},"returnParameters":{"id":756,"nodeType":"ParameterList","parameters":[],"src":"3479:0:6"},"scope":804,"src":"3408:195:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":791,"nodeType":"Block","src":"4027:115:6","statements":[{"expression":{"arguments":[{"id":782,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"4055:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":781,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"4037:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4037:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":784,"nodeType":"ExpressionStatement","src":"4037:36:6"},{"expression":{"arguments":[{"id":786,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"4105:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":787,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"4124:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"74727565","id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4130:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":785,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"4083:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4083:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":790,"nodeType":"ExpressionStatement","src":"4083:52:6"}]},"documentation":{"id":772,"nodeType":"StructuredDocumentation","src":"3609:308:6","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":792,"implemented":true,"kind":"function","modifiers":[{"id":779,"kind":"modifierInvocation","modifierName":{"id":778,"name":"onlyProxy","nodeType":"IdentifierPath","referencedDeclaration":710,"src":"4017:9:6"},"nodeType":"ModifierInvocation","src":"4017:9:6"}],"name":"upgradeToAndCall","nameLocation":"3931:16:6","nodeType":"FunctionDefinition","parameters":{"id":777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"newImplementation","nameLocation":"3956:17:6","nodeType":"VariableDeclaration","scope":792,"src":"3948:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":773,"name":"address","nodeType":"ElementaryTypeName","src":"3948:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":776,"mutability":"mutable","name":"data","nameLocation":"3988:4:6","nodeType":"VariableDeclaration","scope":792,"src":"3975:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":775,"name":"bytes","nodeType":"ElementaryTypeName","src":"3975:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3947:46:6"},"returnParameters":{"id":780,"nodeType":"ParameterList","parameters":[],"src":"4027:0:6"},"scope":804,"src":"3922:220:6","stateMutability":"payable","virtual":true,"visibility":"public"},{"documentation":{"id":793,"nodeType":"StructuredDocumentation","src":"4148:397:6","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"},"id":798,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"4559:17:6","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"mutability":"mutable","name":"newImplementation","nameLocation":"4585:17:6","nodeType":"VariableDeclaration","scope":798,"src":"4577:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"4577:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4576:27:6"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[],"src":"4620:0:6"},"scope":804,"src":"4550:71:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"4627:254:6","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":803,"mutability":"mutable","name":"__gap","nameLocation":"4906:5:6","nodeType":"VariableDeclaration","scope":804,"src":"4886:25:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":800,"name":"uint256","nodeType":"ElementaryTypeName","src":"4886:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":802,"length":{"hexValue":"3530","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4894:2:6","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"4886:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":805,"src":"949:3965:6","usedErrors":[]}],"src":"115:4800:6"},"id":6},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","exportedSymbols":{"IERC20Upgradeable":[882]},"id":883,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":806,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":807,"nodeType":"StructuredDocumentation","src":"131:70:7","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":882,"linearizedBaseContracts":[882],"name":"IERC20Upgradeable","nameLocation":"212:17:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":808,"nodeType":"StructuredDocumentation","src":"236:158:7","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":816,"name":"Transfer","nameLocation":"405:8:7","nodeType":"EventDefinition","parameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":810,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"430:4:7","nodeType":"VariableDeclaration","scope":816,"src":"414:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":812,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"452:2:7","nodeType":"VariableDeclaration","scope":816,"src":"436:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":811,"name":"address","nodeType":"ElementaryTypeName","src":"436:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":814,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"464:5:7","nodeType":"VariableDeclaration","scope":816,"src":"456:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"413:57:7"},"src":"399:72:7"},{"anonymous":false,"documentation":{"id":817,"nodeType":"StructuredDocumentation","src":"477:148:7","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":825,"name":"Approval","nameLocation":"636:8:7","nodeType":"EventDefinition","parameters":{"id":824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"661:5:7","nodeType":"VariableDeclaration","scope":825,"src":"645:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"645:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":821,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"684:7:7","nodeType":"VariableDeclaration","scope":825,"src":"668:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":820,"name":"address","nodeType":"ElementaryTypeName","src":"668:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":823,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"701:5:7","nodeType":"VariableDeclaration","scope":825,"src":"693:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":822,"name":"uint256","nodeType":"ElementaryTypeName","src":"693:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"644:63:7"},"src":"630:78:7"},{"documentation":{"id":826,"nodeType":"StructuredDocumentation","src":"714:66:7","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":831,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"794:11:7","nodeType":"FunctionDefinition","parameters":{"id":827,"nodeType":"ParameterList","parameters":[],"src":"805:2:7"},"returnParameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":831,"src":"831:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":828,"name":"uint256","nodeType":"ElementaryTypeName","src":"831:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"830:9:7"},"scope":882,"src":"785:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":832,"nodeType":"StructuredDocumentation","src":"846:72:7","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":839,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"932:9:7","nodeType":"FunctionDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"mutability":"mutable","name":"account","nameLocation":"950:7:7","nodeType":"VariableDeclaration","scope":839,"src":"942:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":833,"name":"address","nodeType":"ElementaryTypeName","src":"942:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"941:17:7"},"returnParameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":839,"src":"982:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"982:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"981:9:7"},"scope":882,"src":"923:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":840,"nodeType":"StructuredDocumentation","src":"997:202:7","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":849,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:7","nodeType":"FunctionDefinition","parameters":{"id":845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"to","nameLocation":"1230:2:7","nodeType":"VariableDeclaration","scope":849,"src":"1222:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":841,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":844,"mutability":"mutable","name":"amount","nameLocation":"1242:6:7","nodeType":"VariableDeclaration","scope":849,"src":"1234:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":843,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:28:7"},"returnParameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":849,"src":"1268:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":846,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:7"},"scope":882,"src":"1204:70:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"1280:264:7","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":859,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:7","nodeType":"FunctionDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"owner","nameLocation":"1576:5:7","nodeType":"VariableDeclaration","scope":859,"src":"1568:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":854,"mutability":"mutable","name":"spender","nameLocation":"1591:7:7","nodeType":"VariableDeclaration","scope":859,"src":"1583:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:7"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":859,"src":"1623:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:7"},"scope":882,"src":"1549:83:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":860,"nodeType":"StructuredDocumentation","src":"1638:642:7","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":869,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2294:7:7","nodeType":"FunctionDefinition","parameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"spender","nameLocation":"2310:7:7","nodeType":"VariableDeclaration","scope":869,"src":"2302:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"2302:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":864,"mutability":"mutable","name":"amount","nameLocation":"2327:6:7","nodeType":"VariableDeclaration","scope":869,"src":"2319:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:33:7"},"returnParameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":869,"src":"2353:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":866,"name":"bool","nodeType":"ElementaryTypeName","src":"2353:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2352:6:7"},"scope":882,"src":"2285:74:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":870,"nodeType":"StructuredDocumentation","src":"2365:287:7","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":881,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2666:12:7","nodeType":"FunctionDefinition","parameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":872,"mutability":"mutable","name":"from","nameLocation":"2687:4:7","nodeType":"VariableDeclaration","scope":881,"src":"2679:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"to","nameLocation":"2701:2:7","nodeType":"VariableDeclaration","scope":881,"src":"2693:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"2693:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":876,"mutability":"mutable","name":"amount","nameLocation":"2713:6:7","nodeType":"VariableDeclaration","scope":881,"src":"2705:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":875,"name":"uint256","nodeType":"ElementaryTypeName","src":"2705:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2678:42:7"},"returnParameters":{"id":880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":881,"src":"2739:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":878,"name":"bool","nodeType":"ElementaryTypeName","src":"2739:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2738:6:7"},"scope":882,"src":"2657:88:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":883,"src":"202:2545:7","usedErrors":[]}],"src":"106:2642:7"},"id":7},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol","exportedSymbols":{"IERC20PermitUpgradeable":[918]},"id":919,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":884,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20PermitUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"148:1963:8","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":918,"linearizedBaseContracts":[918],"name":"IERC20PermitUpgradeable","nameLocation":"2122:23:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":886,"nodeType":"StructuredDocumentation","src":"2152:850:8","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":903,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3016:6:8","nodeType":"FunctionDefinition","parameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"owner","nameLocation":"3040:5:8","nodeType":"VariableDeclaration","scope":903,"src":"3032:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"3032:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":890,"mutability":"mutable","name":"spender","nameLocation":"3063:7:8","nodeType":"VariableDeclaration","scope":903,"src":"3055:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"3055:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":892,"mutability":"mutable","name":"value","nameLocation":"3088:5:8","nodeType":"VariableDeclaration","scope":903,"src":"3080:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":891,"name":"uint256","nodeType":"ElementaryTypeName","src":"3080:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"deadline","nameLocation":"3111:8:8","nodeType":"VariableDeclaration","scope":903,"src":"3103:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":893,"name":"uint256","nodeType":"ElementaryTypeName","src":"3103:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"v","nameLocation":"3135:1:8","nodeType":"VariableDeclaration","scope":903,"src":"3129:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":895,"name":"uint8","nodeType":"ElementaryTypeName","src":"3129:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":898,"mutability":"mutable","name":"r","nameLocation":"3154:1:8","nodeType":"VariableDeclaration","scope":903,"src":"3146:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":897,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3146:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":900,"mutability":"mutable","name":"s","nameLocation":"3173:1:8","nodeType":"VariableDeclaration","scope":903,"src":"3165:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":899,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3165:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3022:158:8"},"returnParameters":{"id":902,"nodeType":"ParameterList","parameters":[],"src":"3189:0:8"},"scope":918,"src":"3007:183:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":904,"nodeType":"StructuredDocumentation","src":"3196:294:8","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":911,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3504:6:8","nodeType":"FunctionDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"mutability":"mutable","name":"owner","nameLocation":"3519:5:8","nodeType":"VariableDeclaration","scope":911,"src":"3511:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":905,"name":"address","nodeType":"ElementaryTypeName","src":"3511:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3510:15:8"},"returnParameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":911,"src":"3549:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"3549:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3548:9:8"},"scope":918,"src":"3495:63:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"3564:128:8","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":917,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3759:16:8","nodeType":"FunctionDefinition","parameters":{"id":913,"nodeType":"ParameterList","parameters":[],"src":"3775:2:8"},"returnParameters":{"id":916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":917,"src":"3801:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":914,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3801:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3800:9:8"},"scope":918,"src":"3750:60:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":919,"src":"2112:1700:8","usedErrors":[]}],"src":"123:3690:8"},"id":8},"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1624],"IERC20PermitUpgradeable":[918],"IERC20Upgradeable":[882],"SafeERC20Upgradeable":[1294]},"id":1295,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":920,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:9"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"../IERC20Upgradeable.sol","id":921,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1295,"sourceUnit":883,"src":"140:34:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol","file":"../extensions/IERC20PermitUpgradeable.sol","id":922,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1295,"sourceUnit":919,"src":"175:51:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../../utils/AddressUpgradeable.sol","id":923,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1295,"sourceUnit":1625,"src":"227:47:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20Upgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":924,"nodeType":"StructuredDocumentation","src":"276:457:9","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1294,"linearizedBaseContracts":[1294],"name":"SafeERC20Upgradeable","nameLocation":"742:20:9","nodeType":"ContractDefinition","nodes":[{"id":927,"libraryName":{"id":925,"name":"AddressUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1624,"src":"775:18:9"},"nodeType":"UsingForDirective","src":"769:37:9","typeName":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"798:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":950,"nodeType":"Block","src":"1079:103:9","statements":[{"expression":{"arguments":[{"id":939,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"1109:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":942,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"1139:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":849,"src":"1139:14:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1139:23:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":945,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"1164:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"1168:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":940,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1116:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1116:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1116:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":938,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"1089:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$882_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1089:86:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":949,"nodeType":"ExpressionStatement","src":"1089:86:9"}]},"documentation":{"id":928,"nodeType":"StructuredDocumentation","src":"812:179:9","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":951,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1005:12:9","nodeType":"FunctionDefinition","parameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"token","nameLocation":"1036:5:9","nodeType":"VariableDeclaration","scope":951,"src":"1018:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"},"typeName":{"id":930,"nodeType":"UserDefinedTypeName","pathNode":{"id":929,"name":"IERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":882,"src":"1018:17:9"},"referencedDeclaration":882,"src":"1018:17:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":933,"mutability":"mutable","name":"to","nameLocation":"1051:2:9","nodeType":"VariableDeclaration","scope":951,"src":"1043:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":932,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":935,"mutability":"mutable","name":"value","nameLocation":"1063:5:9","nodeType":"VariableDeclaration","scope":951,"src":"1055:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":934,"name":"uint256","nodeType":"ElementaryTypeName","src":"1055:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:52:9"},"returnParameters":{"id":937,"nodeType":"ParameterList","parameters":[],"src":"1079:0:9"},"scope":1294,"src":"996:186:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":977,"nodeType":"Block","src":"1522:113:9","statements":[{"expression":{"arguments":[{"id":965,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"1552:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":968,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"1582:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":881,"src":"1582:18:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1582:27:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":971,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"1611:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":972,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"1617:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"1621:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":966,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1559:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1559:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1559:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":964,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"1532:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$882_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1532:96:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":976,"nodeType":"ExpressionStatement","src":"1532:96:9"}]},"documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"1188:228:9","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":978,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1430:16:9","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":955,"mutability":"mutable","name":"token","nameLocation":"1465:5:9","nodeType":"VariableDeclaration","scope":978,"src":"1447:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"},"typeName":{"id":954,"nodeType":"UserDefinedTypeName","pathNode":{"id":953,"name":"IERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":882,"src":"1447:17:9"},"referencedDeclaration":882,"src":"1447:17:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":957,"mutability":"mutable","name":"from","nameLocation":"1480:4:9","nodeType":"VariableDeclaration","scope":978,"src":"1472:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"1472:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"to","nameLocation":"1494:2:9","nodeType":"VariableDeclaration","scope":978,"src":"1486:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"1486:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"value","nameLocation":"1506:5:9","nodeType":"VariableDeclaration","scope":978,"src":"1498:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"1498:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1446:66:9"},"returnParameters":{"id":963,"nodeType":"ParameterList","parameters":[],"src":"1522:0:9"},"scope":1294,"src":"1421:214:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1021,"nodeType":"Block","src":"1982:497:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"2231:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2240:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2231:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":993,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2230:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":998,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2271:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$1294","typeString":"library SafeERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$1294","typeString":"library SafeERC20Upgradeable"}],"id":997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2263:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":996,"name":"address","nodeType":"ElementaryTypeName","src":"2263:7:9","typeDescriptions":{}}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2263:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1000,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"2278:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":994,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"2247:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":859,"src":"2247:15:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2247:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2290:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2247:44:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1004,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2246:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2230:62:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2306:56:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":989,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2209:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2209:163:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1008,"nodeType":"ExpressionStatement","src":"2209:163:9"},{"expression":{"arguments":[{"id":1010,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"2402:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":1013,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"2432:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":869,"src":"2432:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2432:22:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1016,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"2456:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"2465:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1011,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2409:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2409:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2409:62:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1009,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"2382:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$882_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2382:90:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1020,"nodeType":"ExpressionStatement","src":"2382:90:9"}]},"documentation":{"id":979,"nodeType":"StructuredDocumentation","src":"1641:249:9","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":1022,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1904:11:9","nodeType":"FunctionDefinition","parameters":{"id":987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"token","nameLocation":"1934:5:9","nodeType":"VariableDeclaration","scope":1022,"src":"1916:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"},"typeName":{"id":981,"nodeType":"UserDefinedTypeName","pathNode":{"id":980,"name":"IERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":882,"src":"1916:17:9"},"referencedDeclaration":882,"src":"1916:17:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"spender","nameLocation":"1949:7:9","nodeType":"VariableDeclaration","scope":1022,"src":"1941:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"1941:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"value","nameLocation":"1966:5:9","nodeType":"VariableDeclaration","scope":1022,"src":"1958:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":985,"name":"uint256","nodeType":"ElementaryTypeName","src":"1958:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1915:57:9"},"returnParameters":{"id":988,"nodeType":"ParameterList","parameters":[],"src":"1982:0:9"},"scope":1294,"src":"1895:584:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1058,"nodeType":"Block","src":"2767:194:9","statements":[{"assignments":[1034],"declarations":[{"constant":false,"id":1034,"mutability":"mutable","name":"oldAllowance","nameLocation":"2785:12:9","nodeType":"VariableDeclaration","scope":1058,"src":"2777:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1033,"name":"uint256","nodeType":"ElementaryTypeName","src":"2777:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1043,"initialValue":{"arguments":[{"arguments":[{"id":1039,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2824:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$1294","typeString":"library SafeERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$1294","typeString":"library SafeERC20Upgradeable"}],"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2816:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"2816:7:9","typeDescriptions":{}}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2816:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1041,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"2831:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1035,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"2800:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":859,"src":"2800:15:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2800:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2777:62:9"},{"expression":{"arguments":[{"id":1045,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"2869:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":1048,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"2899:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":869,"src":"2899:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2899:22:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1051,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"2923:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1052,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"2932:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"2947:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2932:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1046,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2876:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2876:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2876:77:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1044,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"2849:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$882_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2849:105:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1057,"nodeType":"ExpressionStatement","src":"2849:105:9"}]},"documentation":{"id":1023,"nodeType":"StructuredDocumentation","src":"2485:180:9","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1059,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2679:21:9","nodeType":"FunctionDefinition","parameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1026,"mutability":"mutable","name":"token","nameLocation":"2719:5:9","nodeType":"VariableDeclaration","scope":1059,"src":"2701:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"},"typeName":{"id":1025,"nodeType":"UserDefinedTypeName","pathNode":{"id":1024,"name":"IERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":882,"src":"2701:17:9"},"referencedDeclaration":882,"src":"2701:17:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":1028,"mutability":"mutable","name":"spender","nameLocation":"2734:7:9","nodeType":"VariableDeclaration","scope":1059,"src":"2726:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1027,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1030,"mutability":"mutable","name":"value","nameLocation":"2751:5:9","nodeType":"VariableDeclaration","scope":1059,"src":"2743:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1029,"name":"uint256","nodeType":"ElementaryTypeName","src":"2743:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2700:57:9"},"returnParameters":{"id":1032,"nodeType":"ParameterList","parameters":[],"src":"2767:0:9"},"scope":1294,"src":"2670:291:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1103,"nodeType":"Block","src":"3249:321:9","statements":[{"id":1102,"nodeType":"UncheckedBlock","src":"3259:305:9","statements":[{"assignments":[1071],"declarations":[{"constant":false,"id":1071,"mutability":"mutable","name":"oldAllowance","nameLocation":"3291:12:9","nodeType":"VariableDeclaration","scope":1102,"src":"3283:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1070,"name":"uint256","nodeType":"ElementaryTypeName","src":"3283:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1080,"initialValue":{"arguments":[{"arguments":[{"id":1076,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3330:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$1294","typeString":"library SafeERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$1294","typeString":"library SafeERC20Upgradeable"}],"id":1075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3322:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1074,"name":"address","nodeType":"ElementaryTypeName","src":"3322:7:9","typeDescriptions":{}}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3322:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1078,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"3337:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1072,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"3306:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":859,"src":"3306:15:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3306:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3283:62:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1082,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"3367:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"3383:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3367:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3390:43:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":1081,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3359:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3359:75:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1087,"nodeType":"ExpressionStatement","src":"3359:75:9"},{"expression":{"arguments":[{"id":1089,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"3468:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":1092,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"3498:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":869,"src":"3498:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"3498:22:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1095,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"3522:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1096,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"3531:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"3546:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3531:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1090,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3475:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3475:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3475:77:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1088,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"3448:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$882_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3448:105:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1101,"nodeType":"ExpressionStatement","src":"3448:105:9"}]}]},"documentation":{"id":1060,"nodeType":"StructuredDocumentation","src":"2967:180:9","text":" @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1104,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3161:21:9","nodeType":"FunctionDefinition","parameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"token","nameLocation":"3201:5:9","nodeType":"VariableDeclaration","scope":1104,"src":"3183:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"},"typeName":{"id":1062,"nodeType":"UserDefinedTypeName","pathNode":{"id":1061,"name":"IERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":882,"src":"3183:17:9"},"referencedDeclaration":882,"src":"3183:17:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":1065,"mutability":"mutable","name":"spender","nameLocation":"3216:7:9","nodeType":"VariableDeclaration","scope":1104,"src":"3208:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"3208:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"value","nameLocation":"3233:5:9","nodeType":"VariableDeclaration","scope":1104,"src":"3225:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"3225:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3182:57:9"},"returnParameters":{"id":1069,"nodeType":"ParameterList","parameters":[],"src":"3249:0:9"},"scope":1294,"src":"3152:418:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1150,"nodeType":"Block","src":"3977:333:9","statements":[{"assignments":[1116],"declarations":[{"constant":false,"id":1116,"mutability":"mutable","name":"approvalCall","nameLocation":"4000:12:9","nodeType":"VariableDeclaration","scope":1150,"src":"3987:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1115,"name":"bytes","nodeType":"ElementaryTypeName","src":"3987:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1125,"initialValue":{"arguments":[{"expression":{"expression":{"id":1119,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"4038:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":869,"src":"4038:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"4038:22:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1122,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"4062:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"4071:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1117,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4015:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4015:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4015:62:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3987:90:9"},{"condition":{"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4092:45:9","subExpression":{"arguments":[{"id":1127,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"4117:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},{"id":1128,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"4124:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1126,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"4093:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$882_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20Upgradeable,bytes memory) returns (bool)"}},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4093:44:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1149,"nodeType":"IfStatement","src":"4088:216:9","trueBody":{"id":1148,"nodeType":"Block","src":"4139:165:9","statements":[{"expression":{"arguments":[{"id":1132,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"4173:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":1135,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"4203:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":869,"src":"4203:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"4203:22:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1138,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"4227:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4236:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1133,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4180:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4180:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4180:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1131,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"4153:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$882_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4153:86:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1142,"nodeType":"ExpressionStatement","src":"4153:86:9"},{"expression":{"arguments":[{"id":1144,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"4273:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},{"id":1145,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"4280:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1143,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"4253:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$882_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4253:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1147,"nodeType":"ExpressionStatement","src":"4253:40:9"}]}}]},"documentation":{"id":1105,"nodeType":"StructuredDocumentation","src":"3576:308:9","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":1151,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3898:12:9","nodeType":"FunctionDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"token","nameLocation":"3929:5:9","nodeType":"VariableDeclaration","scope":1151,"src":"3911:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"},"typeName":{"id":1107,"nodeType":"UserDefinedTypeName","pathNode":{"id":1106,"name":"IERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":882,"src":"3911:17:9"},"referencedDeclaration":882,"src":"3911:17:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":1110,"mutability":"mutable","name":"spender","nameLocation":"3944:7:9","nodeType":"VariableDeclaration","scope":1151,"src":"3936:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1109,"name":"address","nodeType":"ElementaryTypeName","src":"3936:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1112,"mutability":"mutable","name":"value","nameLocation":"3961:5:9","nodeType":"VariableDeclaration","scope":1151,"src":"3953:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1111,"name":"uint256","nodeType":"ElementaryTypeName","src":"3953:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3910:57:9"},"returnParameters":{"id":1114,"nodeType":"ParameterList","parameters":[],"src":"3977:0:9"},"scope":1294,"src":"3889:421:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1207,"nodeType":"Block","src":"4688:257:9","statements":[{"assignments":[1173],"declarations":[{"constant":false,"id":1173,"mutability":"mutable","name":"nonceBefore","nameLocation":"4706:11:9","nodeType":"VariableDeclaration","scope":1207,"src":"4698:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1172,"name":"uint256","nodeType":"ElementaryTypeName","src":"4698:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1178,"initialValue":{"arguments":[{"id":1176,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"4733:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1174,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"4720:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20PermitUpgradeable_$918","typeString":"contract IERC20PermitUpgradeable"}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":911,"src":"4720:12:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4720:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4698:41:9"},{"expression":{"arguments":[{"id":1182,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"4762:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1183,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"4769:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"4778:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1185,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"4785:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1186,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"4795:1:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1187,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"4798:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1188,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"4801:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1179,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"4749:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20PermitUpgradeable_$918","typeString":"contract IERC20PermitUpgradeable"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":903,"src":"4749:12:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4749:54:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1190,"nodeType":"ExpressionStatement","src":"4749:54:9"},{"assignments":[1192],"declarations":[{"constant":false,"id":1192,"mutability":"mutable","name":"nonceAfter","nameLocation":"4821:10:9","nodeType":"VariableDeclaration","scope":1207,"src":"4813:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1191,"name":"uint256","nodeType":"ElementaryTypeName","src":"4813:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1197,"initialValue":{"arguments":[{"id":1195,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"4847:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1193,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"4834:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20PermitUpgradeable_$918","typeString":"contract IERC20PermitUpgradeable"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":911,"src":"4834:12:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4834:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4813:40:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1199,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"4871:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1200,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"4885:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4899:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4885:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4871:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":1204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4902:35:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":1198,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4863:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4863:75:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1206,"nodeType":"ExpressionStatement","src":"4863:75:9"}]},"documentation":{"id":1152,"nodeType":"StructuredDocumentation","src":"4316:141:9","text":" @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."},"id":1208,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"4471:10:9","nodeType":"FunctionDefinition","parameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1155,"mutability":"mutable","name":"token","nameLocation":"4515:5:9","nodeType":"VariableDeclaration","scope":1208,"src":"4491:29:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20PermitUpgradeable_$918","typeString":"contract IERC20PermitUpgradeable"},"typeName":{"id":1154,"nodeType":"UserDefinedTypeName","pathNode":{"id":1153,"name":"IERC20PermitUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":918,"src":"4491:23:9"},"referencedDeclaration":918,"src":"4491:23:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20PermitUpgradeable_$918","typeString":"contract IERC20PermitUpgradeable"}},"visibility":"internal"},{"constant":false,"id":1157,"mutability":"mutable","name":"owner","nameLocation":"4538:5:9","nodeType":"VariableDeclaration","scope":1208,"src":"4530:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"4530:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1159,"mutability":"mutable","name":"spender","nameLocation":"4561:7:9","nodeType":"VariableDeclaration","scope":1208,"src":"4553:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1158,"name":"address","nodeType":"ElementaryTypeName","src":"4553:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1161,"mutability":"mutable","name":"value","nameLocation":"4586:5:9","nodeType":"VariableDeclaration","scope":1208,"src":"4578:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1160,"name":"uint256","nodeType":"ElementaryTypeName","src":"4578:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1163,"mutability":"mutable","name":"deadline","nameLocation":"4609:8:9","nodeType":"VariableDeclaration","scope":1208,"src":"4601:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1162,"name":"uint256","nodeType":"ElementaryTypeName","src":"4601:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1165,"mutability":"mutable","name":"v","nameLocation":"4633:1:9","nodeType":"VariableDeclaration","scope":1208,"src":"4627:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1164,"name":"uint8","nodeType":"ElementaryTypeName","src":"4627:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"mutable","name":"r","nameLocation":"4652:1:9","nodeType":"VariableDeclaration","scope":1208,"src":"4644:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"s","nameLocation":"4671:1:9","nodeType":"VariableDeclaration","scope":1208,"src":"4663:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4663:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4481:197:9"},"returnParameters":{"id":1171,"nodeType":"ParameterList","parameters":[],"src":"4688:0:9"},"scope":1294,"src":"4462:483:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1244,"nodeType":"Block","src":"5409:572:9","statements":[{"assignments":[1218],"declarations":[{"constant":false,"id":1218,"mutability":"mutable","name":"returndata","nameLocation":"5771:10:9","nodeType":"VariableDeclaration","scope":1244,"src":"5758:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1217,"name":"bytes","nodeType":"ElementaryTypeName","src":"5758:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1227,"initialValue":{"arguments":[{"id":1224,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"5812:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5818:34:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":1221,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"5792:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}],"id":1220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5784:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1219,"name":"address","nodeType":"ElementaryTypeName","src":"5784:7:9","typeDescriptions":{}}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5784:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1384,"src":"5784:27:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5784:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5758:95:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1229,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"5871:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5871:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5892:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5871:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1235,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"5908:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5921:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1236,"name":"bool","nodeType":"ElementaryTypeName","src":"5921:4:9","typeDescriptions":{}}}],"id":1238,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5920:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1233,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5897:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"5897:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5897:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5871:56:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5929:44:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":1228,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5863:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5863:111:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1243,"nodeType":"ExpressionStatement","src":"5863:111:9"}]},"documentation":{"id":1209,"nodeType":"StructuredDocumentation","src":"4951:372:9","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1245,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"5337:19:9","nodeType":"FunctionDefinition","parameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1212,"mutability":"mutable","name":"token","nameLocation":"5375:5:9","nodeType":"VariableDeclaration","scope":1245,"src":"5357:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"},"typeName":{"id":1211,"nodeType":"UserDefinedTypeName","pathNode":{"id":1210,"name":"IERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":882,"src":"5357:17:9"},"referencedDeclaration":882,"src":"5357:17:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":1214,"mutability":"mutable","name":"data","nameLocation":"5395:4:9","nodeType":"VariableDeclaration","scope":1245,"src":"5382:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1213,"name":"bytes","nodeType":"ElementaryTypeName","src":"5382:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5356:44:9"},"returnParameters":{"id":1216,"nodeType":"ParameterList","parameters":[],"src":"5409:0:9"},"scope":1294,"src":"5328:653:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1292,"nodeType":"Block","src":"6582:516:9","statements":[{"assignments":[1257,1259],"declarations":[{"constant":false,"id":1257,"mutability":"mutable","name":"success","nameLocation":"6883:7:9","nodeType":"VariableDeclaration","scope":1292,"src":"6878:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1256,"name":"bool","nodeType":"ElementaryTypeName","src":"6878:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"returndata","nameLocation":"6905:10:9","nodeType":"VariableDeclaration","scope":1292,"src":"6892:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1258,"name":"bytes","nodeType":"ElementaryTypeName","src":"6892:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1267,"initialValue":{"arguments":[{"id":1265,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"6939:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1262,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"6927:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}],"id":1261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6919:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"6919:7:9","typeDescriptions":{}}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6919:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"6919:19:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6919:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6877:67:9"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1268,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"6973:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1269,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"6985:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6985:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7006:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6985:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1275,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"7022:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7035:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1276,"name":"bool","nodeType":"ElementaryTypeName","src":"7035:4:9","typeDescriptions":{}}}],"id":1278,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7034:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1273,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7011:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"7011:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7011:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6985:56:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1281,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6984:58:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6973:69:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"arguments":[{"id":1287,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"7084:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}],"id":1286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7076:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1285,"name":"address","nodeType":"ElementaryTypeName","src":"7076:7:9","typeDescriptions":{}}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7076:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1283,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"7046:18:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1624_$","typeString":"type(library AddressUpgradeable)"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1312,"src":"7046:29:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7046:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6973:118:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1255,"id":1291,"nodeType":"Return","src":"6954:137:9"}]},"documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"5987:490:9","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":1293,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"6491:23:9","nodeType":"FunctionDefinition","parameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1249,"mutability":"mutable","name":"token","nameLocation":"6533:5:9","nodeType":"VariableDeclaration","scope":1293,"src":"6515:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"},"typeName":{"id":1248,"nodeType":"UserDefinedTypeName","pathNode":{"id":1247,"name":"IERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":882,"src":"6515:17:9"},"referencedDeclaration":882,"src":"6515:17:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"data","nameLocation":"6553:4:9","nodeType":"VariableDeclaration","scope":1293,"src":"6540:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1250,"name":"bytes","nodeType":"ElementaryTypeName","src":"6540:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6514:44:9"},"returnParameters":{"id":1255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1293,"src":"6576:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1253,"name":"bool","nodeType":"ElementaryTypeName","src":"6576:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6575:6:9"},"scope":1294,"src":"6482:616:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1295,"src":"734:6366:9","usedErrors":[]}],"src":"115:6986:9"},"id":9},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1624]},"id":1625,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1296,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1297,"nodeType":"StructuredDocumentation","src":"126:67:10","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1624,"linearizedBaseContracts":[1624],"name":"AddressUpgradeable","nameLocation":"202:18:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1311,"nodeType":"Block","src":"1489:254:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1305,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"1713:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1713:12:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1713:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1304,"id":1310,"nodeType":"Return","src":"1706:30:10"}]},"documentation":{"id":1298,"nodeType":"StructuredDocumentation","src":"227:1191:10","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1312,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1432:10:10","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"account","nameLocation":"1451:7:10","nodeType":"VariableDeclaration","scope":1312,"src":"1443:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1299,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1442:17:10"},"returnParameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1312,"src":"1483:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1302,"name":"bool","nodeType":"ElementaryTypeName","src":"1483:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1482:6:10"},"scope":1624,"src":"1423:320:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1345,"nodeType":"Block","src":"2729:241:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1323,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2755:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1624","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1624","typeString":"library AddressUpgradeable"}],"id":1322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1321,"name":"address","nodeType":"ElementaryTypeName","src":"2747:7:10","typeDescriptions":{}}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2747:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2747:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1326,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"2772:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2747:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2780:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1320,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2739:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2739:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1330,"nodeType":"ExpressionStatement","src":"2739:73:10"},{"assignments":[1332,null],"declarations":[{"constant":false,"id":1332,"mutability":"mutable","name":"success","nameLocation":"2829:7:10","nodeType":"VariableDeclaration","scope":1345,"src":"2824:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1331,"name":"bool","nodeType":"ElementaryTypeName","src":"2824:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1339,"initialValue":{"arguments":[{"hexValue":"","id":1337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2872:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1333,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"2842:9:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2842:14:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1335,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"2864:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2842:29:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2842:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2823:52:10"},{"expression":{"arguments":[{"id":1341,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"2893:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2902:60:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1340,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2885:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2885:78:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1344,"nodeType":"ExpressionStatement","src":"2885:78:10"}]},"documentation":{"id":1313,"nodeType":"StructuredDocumentation","src":"1749:904:10","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1346,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2667:9:10","nodeType":"FunctionDefinition","parameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"recipient","nameLocation":"2693:9:10","nodeType":"VariableDeclaration","scope":1346,"src":"2677:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"2677:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1317,"mutability":"mutable","name":"amount","nameLocation":"2712:6:10","nodeType":"VariableDeclaration","scope":1346,"src":"2704:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:10"},"returnParameters":{"id":1319,"nodeType":"ParameterList","parameters":[],"src":"2729:0:10"},"scope":1624,"src":"2658:312:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1363,"nodeType":"Block","src":"3801:96:10","statements":[{"expression":{"arguments":[{"id":1357,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"3840:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1358,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"3848:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3857:32:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1356,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1404,1448],"referencedDeclaration":1448,"src":"3818:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3818:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1355,"id":1362,"nodeType":"Return","src":"3811:79:10"}]},"documentation":{"id":1347,"nodeType":"StructuredDocumentation","src":"2976:731:10","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1364,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3721:12:10","nodeType":"FunctionDefinition","parameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1349,"mutability":"mutable","name":"target","nameLocation":"3742:6:10","nodeType":"VariableDeclaration","scope":1364,"src":"3734:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1348,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1351,"mutability":"mutable","name":"data","nameLocation":"3763:4:10","nodeType":"VariableDeclaration","scope":1364,"src":"3750:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1350,"name":"bytes","nodeType":"ElementaryTypeName","src":"3750:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3733:35:10"},"returnParameters":{"id":1355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1364,"src":"3787:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1353,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:14:10"},"scope":1624,"src":"3712:185:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1383,"nodeType":"Block","src":"4266:76:10","statements":[{"expression":{"arguments":[{"id":1377,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"4305:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1378,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"4313:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4319:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1380,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"4322:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1376,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1404,1448],"referencedDeclaration":1448,"src":"4283:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4283:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1375,"id":1382,"nodeType":"Return","src":"4276:59:10"}]},"documentation":{"id":1365,"nodeType":"StructuredDocumentation","src":"3903:211:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1384,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4128:12:10","nodeType":"FunctionDefinition","parameters":{"id":1372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1367,"mutability":"mutable","name":"target","nameLocation":"4158:6:10","nodeType":"VariableDeclaration","scope":1384,"src":"4150:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1366,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1369,"mutability":"mutable","name":"data","nameLocation":"4187:4:10","nodeType":"VariableDeclaration","scope":1384,"src":"4174:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1368,"name":"bytes","nodeType":"ElementaryTypeName","src":"4174:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1371,"mutability":"mutable","name":"errorMessage","nameLocation":"4215:12:10","nodeType":"VariableDeclaration","scope":1384,"src":"4201:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1370,"name":"string","nodeType":"ElementaryTypeName","src":"4201:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4140:93:10"},"returnParameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1384,"src":"4252:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1373,"name":"bytes","nodeType":"ElementaryTypeName","src":"4252:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4251:14:10"},"scope":1624,"src":"4119:223:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1403,"nodeType":"Block","src":"4817:111:10","statements":[{"expression":{"arguments":[{"id":1397,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"4856:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1398,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"4864:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"4870:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:43:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1396,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1404,1448],"referencedDeclaration":1448,"src":"4834:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4834:87:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1395,"id":1402,"nodeType":"Return","src":"4827:94:10"}]},"documentation":{"id":1385,"nodeType":"StructuredDocumentation","src":"4348:351:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1404,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4713:21:10","nodeType":"FunctionDefinition","parameters":{"id":1392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"target","nameLocation":"4743:6:10","nodeType":"VariableDeclaration","scope":1404,"src":"4735:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1386,"name":"address","nodeType":"ElementaryTypeName","src":"4735:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1389,"mutability":"mutable","name":"data","nameLocation":"4764:4:10","nodeType":"VariableDeclaration","scope":1404,"src":"4751:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1388,"name":"bytes","nodeType":"ElementaryTypeName","src":"4751:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1391,"mutability":"mutable","name":"value","nameLocation":"4778:5:10","nodeType":"VariableDeclaration","scope":1404,"src":"4770:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1390,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4734:50:10"},"returnParameters":{"id":1395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1404,"src":"4803:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1393,"name":"bytes","nodeType":"ElementaryTypeName","src":"4803:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4802:14:10"},"scope":1624,"src":"4704:224:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1447,"nodeType":"Block","src":"5355:267:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1421,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5381:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1624","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1624","typeString":"library AddressUpgradeable"}],"id":1420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5373:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1419,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:10","typeDescriptions":{}}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5373:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5373:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"5398:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5405:40:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1418,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5365:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5365:81:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1428,"nodeType":"ExpressionStatement","src":"5365:81:10"},{"assignments":[1430,1432],"declarations":[{"constant":false,"id":1430,"mutability":"mutable","name":"success","nameLocation":"5462:7:10","nodeType":"VariableDeclaration","scope":1447,"src":"5457:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1429,"name":"bool","nodeType":"ElementaryTypeName","src":"5457:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1432,"mutability":"mutable","name":"returndata","nameLocation":"5484:10:10","nodeType":"VariableDeclaration","scope":1447,"src":"5471:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1431,"name":"bytes","nodeType":"ElementaryTypeName","src":"5471:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1439,"initialValue":{"arguments":[{"id":1437,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"5524:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1433,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"5498:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5498:11:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"5517:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5498:25:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5498:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5456:73:10"},{"expression":{"arguments":[{"id":1441,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"5573:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1442,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"5581:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1443,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"5590:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1444,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"5602:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1440,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"5546:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5546:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1417,"id":1446,"nodeType":"Return","src":"5539:76:10"}]},"documentation":{"id":1405,"nodeType":"StructuredDocumentation","src":"4934:237:10","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1448,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5185:21:10","nodeType":"FunctionDefinition","parameters":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"target","nameLocation":"5224:6:10","nodeType":"VariableDeclaration","scope":1448,"src":"5216:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1406,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1409,"mutability":"mutable","name":"data","nameLocation":"5253:4:10","nodeType":"VariableDeclaration","scope":1448,"src":"5240:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1408,"name":"bytes","nodeType":"ElementaryTypeName","src":"5240:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1411,"mutability":"mutable","name":"value","nameLocation":"5275:5:10","nodeType":"VariableDeclaration","scope":1448,"src":"5267:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1410,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1413,"mutability":"mutable","name":"errorMessage","nameLocation":"5304:12:10","nodeType":"VariableDeclaration","scope":1448,"src":"5290:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1412,"name":"string","nodeType":"ElementaryTypeName","src":"5290:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5206:116:10"},"returnParameters":{"id":1417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1448,"src":"5341:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1415,"name":"bytes","nodeType":"ElementaryTypeName","src":"5341:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5340:14:10"},"scope":1624,"src":"5176:446:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1464,"nodeType":"Block","src":"5899:97:10","statements":[{"expression":{"arguments":[{"id":1459,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"5935:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1460,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"5943:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5949:39:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1458,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1465,1494],"referencedDeclaration":1494,"src":"5916:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5916:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1457,"id":1463,"nodeType":"Return","src":"5909:80:10"}]},"documentation":{"id":1449,"nodeType":"StructuredDocumentation","src":"5628:166:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1465,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5808:18:10","nodeType":"FunctionDefinition","parameters":{"id":1454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1451,"mutability":"mutable","name":"target","nameLocation":"5835:6:10","nodeType":"VariableDeclaration","scope":1465,"src":"5827:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1450,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1453,"mutability":"mutable","name":"data","nameLocation":"5856:4:10","nodeType":"VariableDeclaration","scope":1465,"src":"5843:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1452,"name":"bytes","nodeType":"ElementaryTypeName","src":"5843:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5826:35:10"},"returnParameters":{"id":1457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1465,"src":"5885:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1455,"name":"bytes","nodeType":"ElementaryTypeName","src":"5885:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5884:14:10"},"scope":1624,"src":"5799:197:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1493,"nodeType":"Block","src":"6338:168:10","statements":[{"assignments":[1478,1480],"declarations":[{"constant":false,"id":1478,"mutability":"mutable","name":"success","nameLocation":"6354:7:10","nodeType":"VariableDeclaration","scope":1493,"src":"6349:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1477,"name":"bool","nodeType":"ElementaryTypeName","src":"6349:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1480,"mutability":"mutable","name":"returndata","nameLocation":"6376:10:10","nodeType":"VariableDeclaration","scope":1493,"src":"6363:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1479,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1485,"initialValue":{"arguments":[{"id":1483,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"6408:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1481,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"6390:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6390:17:10","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6390:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6348:65:10"},{"expression":{"arguments":[{"id":1487,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"6457:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1488,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"6465:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1489,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"6474:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1490,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"6486:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1486,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"6430:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6430:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1476,"id":1492,"nodeType":"Return","src":"6423:76:10"}]},"documentation":{"id":1466,"nodeType":"StructuredDocumentation","src":"6002:173:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1494,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6189:18:10","nodeType":"FunctionDefinition","parameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1468,"mutability":"mutable","name":"target","nameLocation":"6225:6:10","nodeType":"VariableDeclaration","scope":1494,"src":"6217:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1470,"mutability":"mutable","name":"data","nameLocation":"6254:4:10","nodeType":"VariableDeclaration","scope":1494,"src":"6241:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1469,"name":"bytes","nodeType":"ElementaryTypeName","src":"6241:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1472,"mutability":"mutable","name":"errorMessage","nameLocation":"6282:12:10","nodeType":"VariableDeclaration","scope":1494,"src":"6268:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1471,"name":"string","nodeType":"ElementaryTypeName","src":"6268:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6207:93:10"},"returnParameters":{"id":1476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1494,"src":"6324:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1474,"name":"bytes","nodeType":"ElementaryTypeName","src":"6324:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6323:14:10"},"scope":1624,"src":"6180:326:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1510,"nodeType":"Block","src":"6782:101:10","statements":[{"expression":{"arguments":[{"id":1505,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"6820:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1506,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"6828:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6834:41:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1504,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1511,1540],"referencedDeclaration":1540,"src":"6799:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6799:77:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1503,"id":1509,"nodeType":"Return","src":"6792:84:10"}]},"documentation":{"id":1495,"nodeType":"StructuredDocumentation","src":"6512:168:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1511,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6694:20:10","nodeType":"FunctionDefinition","parameters":{"id":1500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"target","nameLocation":"6723:6:10","nodeType":"VariableDeclaration","scope":1511,"src":"6715:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1496,"name":"address","nodeType":"ElementaryTypeName","src":"6715:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1499,"mutability":"mutable","name":"data","nameLocation":"6744:4:10","nodeType":"VariableDeclaration","scope":1511,"src":"6731:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1498,"name":"bytes","nodeType":"ElementaryTypeName","src":"6731:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6714:35:10"},"returnParameters":{"id":1503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1511,"src":"6768:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1501,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:10"},"scope":1624,"src":"6685:198:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1539,"nodeType":"Block","src":"7224:170:10","statements":[{"assignments":[1524,1526],"declarations":[{"constant":false,"id":1524,"mutability":"mutable","name":"success","nameLocation":"7240:7:10","nodeType":"VariableDeclaration","scope":1539,"src":"7235:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1523,"name":"bool","nodeType":"ElementaryTypeName","src":"7235:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1526,"mutability":"mutable","name":"returndata","nameLocation":"7262:10:10","nodeType":"VariableDeclaration","scope":1539,"src":"7249:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1525,"name":"bytes","nodeType":"ElementaryTypeName","src":"7249:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1531,"initialValue":{"arguments":[{"id":1529,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"7296:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1527,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"7276:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7276:19:10","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7276:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7234:67:10"},{"expression":{"arguments":[{"id":1533,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"7345:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1534,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"7353:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1535,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"7362:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1536,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"7374:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1532,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"7318:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7318:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1522,"id":1538,"nodeType":"Return","src":"7311:76:10"}]},"documentation":{"id":1512,"nodeType":"StructuredDocumentation","src":"6889:175:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1540,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7078:20:10","nodeType":"FunctionDefinition","parameters":{"id":1519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1514,"mutability":"mutable","name":"target","nameLocation":"7116:6:10","nodeType":"VariableDeclaration","scope":1540,"src":"7108:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1513,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1516,"mutability":"mutable","name":"data","nameLocation":"7145:4:10","nodeType":"VariableDeclaration","scope":1540,"src":"7132:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1515,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1518,"mutability":"mutable","name":"errorMessage","nameLocation":"7173:12:10","nodeType":"VariableDeclaration","scope":1540,"src":"7159:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1517,"name":"string","nodeType":"ElementaryTypeName","src":"7159:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7098:93:10"},"returnParameters":{"id":1522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1540,"src":"7210:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1520,"name":"bytes","nodeType":"ElementaryTypeName","src":"7210:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7209:14:10"},"scope":1624,"src":"7069:325:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1578,"nodeType":"Block","src":"7876:434:10","statements":[{"condition":{"id":1554,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"7890:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1576,"nodeType":"Block","src":"8246:58:10","statements":[{"expression":{"arguments":[{"id":1572,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"8268:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1573,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"8280:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1571,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"8260:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8260:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1575,"nodeType":"ExpressionStatement","src":"8260:33:10"}]},"id":1577,"nodeType":"IfStatement","src":"7886:418:10","trueBody":{"id":1570,"nodeType":"Block","src":"7899:341:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1555,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"7917:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7917:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7938:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7917:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1567,"nodeType":"IfStatement","src":"7913:286:10","trueBody":{"id":1566,"nodeType":"Block","src":"7941:258:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":1561,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"8143:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1560,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"8132:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8132:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8152:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1559,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8124:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8124:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1565,"nodeType":"ExpressionStatement","src":"8124:60:10"}]}},{"expression":{"id":1568,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"8219:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1553,"id":1569,"nodeType":"Return","src":"8212:17:10"}]}}]},"documentation":{"id":1541,"nodeType":"StructuredDocumentation","src":"7400:277:10","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1579,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7691:26:10","nodeType":"FunctionDefinition","parameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1543,"mutability":"mutable","name":"target","nameLocation":"7735:6:10","nodeType":"VariableDeclaration","scope":1579,"src":"7727:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1542,"name":"address","nodeType":"ElementaryTypeName","src":"7727:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1545,"mutability":"mutable","name":"success","nameLocation":"7756:7:10","nodeType":"VariableDeclaration","scope":1579,"src":"7751:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1544,"name":"bool","nodeType":"ElementaryTypeName","src":"7751:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1547,"mutability":"mutable","name":"returndata","nameLocation":"7786:10:10","nodeType":"VariableDeclaration","scope":1579,"src":"7773:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1546,"name":"bytes","nodeType":"ElementaryTypeName","src":"7773:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1549,"mutability":"mutable","name":"errorMessage","nameLocation":"7820:12:10","nodeType":"VariableDeclaration","scope":1579,"src":"7806:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1548,"name":"string","nodeType":"ElementaryTypeName","src":"7806:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7717:121:10"},"returnParameters":{"id":1553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1579,"src":"7862:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1551,"name":"bytes","nodeType":"ElementaryTypeName","src":"7862:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7861:14:10"},"scope":1624,"src":"7682:628:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1602,"nodeType":"Block","src":"8691:135:10","statements":[{"condition":{"id":1591,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"8705:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1600,"nodeType":"Block","src":"8762:58:10","statements":[{"expression":{"arguments":[{"id":1596,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"8784:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1597,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"8796:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1595,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"8776:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8776:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1599,"nodeType":"ExpressionStatement","src":"8776:33:10"}]},"id":1601,"nodeType":"IfStatement","src":"8701:119:10","trueBody":{"id":1594,"nodeType":"Block","src":"8714:42:10","statements":[{"expression":{"id":1592,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"8735:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1590,"id":1593,"nodeType":"Return","src":"8728:17:10"}]}}]},"documentation":{"id":1580,"nodeType":"StructuredDocumentation","src":"8316:210:10","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1603,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8540:16:10","nodeType":"FunctionDefinition","parameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"success","nameLocation":"8571:7:10","nodeType":"VariableDeclaration","scope":1603,"src":"8566:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1581,"name":"bool","nodeType":"ElementaryTypeName","src":"8566:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1584,"mutability":"mutable","name":"returndata","nameLocation":"8601:10:10","nodeType":"VariableDeclaration","scope":1603,"src":"8588:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1583,"name":"bytes","nodeType":"ElementaryTypeName","src":"8588:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1586,"mutability":"mutable","name":"errorMessage","nameLocation":"8635:12:10","nodeType":"VariableDeclaration","scope":1603,"src":"8621:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1585,"name":"string","nodeType":"ElementaryTypeName","src":"8621:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8556:97:10"},"returnParameters":{"id":1590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1603,"src":"8677:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1588,"name":"bytes","nodeType":"ElementaryTypeName","src":"8677:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8676:14:10"},"scope":1624,"src":"8531:295:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1622,"nodeType":"Block","src":"8915:457:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1610,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"8991:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8991:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8991:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1620,"nodeType":"Block","src":"9321:45:10","statements":[{"expression":{"arguments":[{"id":1617,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"9342:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1616,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9335:6:10","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9335:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1619,"nodeType":"ExpressionStatement","src":"9335:20:10"}]},"id":1621,"nodeType":"IfStatement","src":"8987:379:10","trueBody":{"id":1615,"nodeType":"Block","src":"9014:301:10","statements":[{"AST":{"nodeType":"YulBlock","src":"9172:133:10","statements":[{"nodeType":"YulVariableDeclaration","src":"9190:40:10","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9219:10:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9213:5:10"},"nodeType":"YulFunctionCall","src":"9213:17:10"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9194:15:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9258:2:10","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9262:10:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9254:3:10"},"nodeType":"YulFunctionCall","src":"9254:19:10"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9275:15:10"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9247:6:10"},"nodeType":"YulFunctionCall","src":"9247:44:10"},"nodeType":"YulExpressionStatement","src":"9247:44:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1605,"isOffset":false,"isSlot":false,"src":"9219:10:10","valueSize":1},{"declaration":1605,"isOffset":false,"isSlot":false,"src":"9262:10:10","valueSize":1}],"id":1614,"nodeType":"InlineAssembly","src":"9163:142:10"}]}}]},"id":1623,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8841:7:10","nodeType":"FunctionDefinition","parameters":{"id":1608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"returndata","nameLocation":"8862:10:10","nodeType":"VariableDeclaration","scope":1623,"src":"8849:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1604,"name":"bytes","nodeType":"ElementaryTypeName","src":"8849:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1607,"mutability":"mutable","name":"errorMessage","nameLocation":"8888:12:10","nodeType":"VariableDeclaration","scope":1623,"src":"8874:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1606,"name":"string","nodeType":"ElementaryTypeName","src":"8874:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8848:53:10"},"returnParameters":{"id":1609,"nodeType":"ParameterList","parameters":[],"src":"8915:0:10"},"scope":1624,"src":"8832:540:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1625,"src":"194:9180:10","usedErrors":[]}],"src":"101:9274:10"},"id":10},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1675],"Initializable":[667]},"id":1676,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1626,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:11"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1628,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1676,"sourceUnit":668,"src":"125:63:11","symbolAliases":[{"foreign":{"id":1627,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"src":"133:13:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1630,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":667,"src":"727:13:11"},"id":1631,"nodeType":"InheritanceSpecifier","src":"727:13:11"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1629,"nodeType":"StructuredDocumentation","src":"190:496:11","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1675,"linearizedBaseContracts":[1675,667],"name":"ContextUpgradeable","nameLocation":"705:18:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1636,"nodeType":"Block","src":"799:7:11","statements":[]},"id":1637,"implemented":true,"kind":"function","modifiers":[{"id":1634,"kind":"modifierInvocation","modifierName":{"id":1633,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":612,"src":"782:16:11"},"nodeType":"ModifierInvocation","src":"782:16:11"}],"name":"__Context_init","nameLocation":"756:14:11","nodeType":"FunctionDefinition","parameters":{"id":1632,"nodeType":"ParameterList","parameters":[],"src":"770:2:11"},"returnParameters":{"id":1635,"nodeType":"ParameterList","parameters":[],"src":"799:0:11"},"scope":1675,"src":"747:59:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1642,"nodeType":"Block","src":"874:7:11","statements":[]},"id":1643,"implemented":true,"kind":"function","modifiers":[{"id":1640,"kind":"modifierInvocation","modifierName":{"id":1639,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":612,"src":"857:16:11"},"nodeType":"ModifierInvocation","src":"857:16:11"}],"name":"__Context_init_unchained","nameLocation":"821:24:11","nodeType":"FunctionDefinition","parameters":{"id":1638,"nodeType":"ParameterList","parameters":[],"src":"845:2:11"},"returnParameters":{"id":1641,"nodeType":"ParameterList","parameters":[],"src":"874:0:11"},"scope":1675,"src":"812:69:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1651,"nodeType":"Block","src":"948:34:11","statements":[{"expression":{"expression":{"id":1648,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"965:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"965:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1647,"id":1650,"nodeType":"Return","src":"958:17:11"}]},"id":1652,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"895:10:11","nodeType":"FunctionDefinition","parameters":{"id":1644,"nodeType":"ParameterList","parameters":[],"src":"905:2:11"},"returnParameters":{"id":1647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1652,"src":"939:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1645,"name":"address","nodeType":"ElementaryTypeName","src":"939:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"938:9:11"},"scope":1675,"src":"886:96:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1660,"nodeType":"Block","src":"1055:32:11","statements":[{"expression":{"expression":{"id":1657,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1072:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"1072:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1656,"id":1659,"nodeType":"Return","src":"1065:15:11"}]},"id":1661,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"997:8:11","nodeType":"FunctionDefinition","parameters":{"id":1653,"nodeType":"ParameterList","parameters":[],"src":"1005:2:11"},"returnParameters":{"id":1656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1661,"src":"1039:14:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1654,"name":"bytes","nodeType":"ElementaryTypeName","src":"1039:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1038:16:11"},"scope":1675,"src":"988:99:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1668,"nodeType":"Block","src":"1165:25:11","statements":[{"expression":{"hexValue":"30","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1665,"id":1667,"nodeType":"Return","src":"1175:8:11"}]},"id":1669,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1102:20:11","nodeType":"FunctionDefinition","parameters":{"id":1662,"nodeType":"ParameterList","parameters":[],"src":"1122:2:11"},"returnParameters":{"id":1665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1669,"src":"1156:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1155:9:11"},"scope":1675,"src":"1093:97:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"1196:254:11","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1674,"mutability":"mutable","name":"__gap","nameLocation":"1475:5:11","nodeType":"VariableDeclaration","scope":1675,"src":"1455:25:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1671,"name":"uint256","nodeType":"ElementaryTypeName","src":"1455:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1673,"length":{"hexValue":"3530","id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1463:2:11","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1455:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1676,"src":"687:796:11","usedErrors":[]}],"src":"101:1383:11"},"id":11},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","exportedSymbols":{"StorageSlotUpgradeable":[1785]},"id":1786,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1677,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlotUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1678,"nodeType":"StructuredDocumentation","src":"218:1201:12","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":1785,"linearizedBaseContracts":[1785],"name":"StorageSlotUpgradeable","nameLocation":"1428:22:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlotUpgradeable.AddressSlot","id":1681,"members":[{"constant":false,"id":1680,"mutability":"mutable","name":"value","nameLocation":"1494:5:12","nodeType":"VariableDeclaration","scope":1681,"src":"1486:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1679,"name":"address","nodeType":"ElementaryTypeName","src":"1486:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1464:11:12","nodeType":"StructDefinition","scope":1785,"src":"1457:49:12","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BooleanSlot","id":1684,"members":[{"constant":false,"id":1683,"mutability":"mutable","name":"value","nameLocation":"1546:5:12","nodeType":"VariableDeclaration","scope":1684,"src":"1541:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1682,"name":"bool","nodeType":"ElementaryTypeName","src":"1541:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1519:11:12","nodeType":"StructDefinition","scope":1785,"src":"1512:46:12","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Bytes32Slot","id":1687,"members":[{"constant":false,"id":1686,"mutability":"mutable","name":"value","nameLocation":"1601:5:12","nodeType":"VariableDeclaration","scope":1687,"src":"1593:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1593:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1571:11:12","nodeType":"StructDefinition","scope":1785,"src":"1564:49:12","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Uint256Slot","id":1690,"members":[{"constant":false,"id":1689,"mutability":"mutable","name":"value","nameLocation":"1656:5:12","nodeType":"VariableDeclaration","scope":1690,"src":"1648:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1688,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1626:11:12","nodeType":"StructDefinition","scope":1785,"src":"1619:49:12","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.StringSlot","id":1693,"members":[{"constant":false,"id":1692,"mutability":"mutable","name":"value","nameLocation":"1709:5:12","nodeType":"VariableDeclaration","scope":1693,"src":"1702:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1691,"name":"string","nodeType":"ElementaryTypeName","src":"1702:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1681:10:12","nodeType":"StructDefinition","scope":1785,"src":"1674:47:12","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BytesSlot","id":1696,"members":[{"constant":false,"id":1695,"mutability":"mutable","name":"value","nameLocation":"1760:5:12","nodeType":"VariableDeclaration","scope":1696,"src":"1754:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1694,"name":"bytes","nodeType":"ElementaryTypeName","src":"1754:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1734:9:12","nodeType":"StructDefinition","scope":1785,"src":"1727:45:12","visibility":"public"},{"body":{"id":1706,"nodeType":"Block","src":"1954:106:12","statements":[{"AST":{"nodeType":"YulBlock","src":"2016:38:12","statements":[{"nodeType":"YulAssignment","src":"2030:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"2040:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2030:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1703,"isOffset":false,"isSlot":true,"src":"2030:6:12","suffix":"slot","valueSize":1},{"declaration":1699,"isOffset":false,"isSlot":false,"src":"2040:4:12","valueSize":1}],"id":1705,"nodeType":"InlineAssembly","src":"2007:47:12"}]},"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"1778:87:12","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1707,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1879:14:12","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"slot","nameLocation":"1902:4:12","nodeType":"VariableDeclaration","scope":1707,"src":"1894:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1698,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1894:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1893:14:12"},"returnParameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1703,"mutability":"mutable","name":"r","nameLocation":"1951:1:12","nodeType":"VariableDeclaration","scope":1707,"src":"1931:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1681_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"},"typeName":{"id":1702,"nodeType":"UserDefinedTypeName","pathNode":{"id":1701,"name":"AddressSlot","nodeType":"IdentifierPath","referencedDeclaration":1681,"src":"1931:11:12"},"referencedDeclaration":1681,"src":"1931:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1681_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"}},"visibility":"internal"}],"src":"1930:23:12"},"scope":1785,"src":"1870:190:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1717,"nodeType":"Block","src":"2242:106:12","statements":[{"AST":{"nodeType":"YulBlock","src":"2304:38:12","statements":[{"nodeType":"YulAssignment","src":"2318:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"2328:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2318:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1714,"isOffset":false,"isSlot":true,"src":"2318:6:12","suffix":"slot","valueSize":1},{"declaration":1710,"isOffset":false,"isSlot":false,"src":"2328:4:12","valueSize":1}],"id":1716,"nodeType":"InlineAssembly","src":"2295:47:12"}]},"documentation":{"id":1708,"nodeType":"StructuredDocumentation","src":"2066:87:12","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1718,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2167:14:12","nodeType":"FunctionDefinition","parameters":{"id":1711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1710,"mutability":"mutable","name":"slot","nameLocation":"2190:4:12","nodeType":"VariableDeclaration","scope":1718,"src":"2182:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1709,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2182:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2181:14:12"},"returnParameters":{"id":1715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"r","nameLocation":"2239:1:12","nodeType":"VariableDeclaration","scope":1718,"src":"2219:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1684_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"},"typeName":{"id":1713,"nodeType":"UserDefinedTypeName","pathNode":{"id":1712,"name":"BooleanSlot","nodeType":"IdentifierPath","referencedDeclaration":1684,"src":"2219:11:12"},"referencedDeclaration":1684,"src":"2219:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1684_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"}},"visibility":"internal"}],"src":"2218:23:12"},"scope":1785,"src":"2158:190:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1728,"nodeType":"Block","src":"2530:106:12","statements":[{"AST":{"nodeType":"YulBlock","src":"2592:38:12","statements":[{"nodeType":"YulAssignment","src":"2606:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"2616:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2606:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1725,"isOffset":false,"isSlot":true,"src":"2606:6:12","suffix":"slot","valueSize":1},{"declaration":1721,"isOffset":false,"isSlot":false,"src":"2616:4:12","valueSize":1}],"id":1727,"nodeType":"InlineAssembly","src":"2583:47:12"}]},"documentation":{"id":1719,"nodeType":"StructuredDocumentation","src":"2354:87:12","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1729,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2455:14:12","nodeType":"FunctionDefinition","parameters":{"id":1722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1721,"mutability":"mutable","name":"slot","nameLocation":"2478:4:12","nodeType":"VariableDeclaration","scope":1729,"src":"2470:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1720,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2470:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2469:14:12"},"returnParameters":{"id":1726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1725,"mutability":"mutable","name":"r","nameLocation":"2527:1:12","nodeType":"VariableDeclaration","scope":1729,"src":"2507:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1687_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"},"typeName":{"id":1724,"nodeType":"UserDefinedTypeName","pathNode":{"id":1723,"name":"Bytes32Slot","nodeType":"IdentifierPath","referencedDeclaration":1687,"src":"2507:11:12"},"referencedDeclaration":1687,"src":"2507:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1687_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"}},"visibility":"internal"}],"src":"2506:23:12"},"scope":1785,"src":"2446:190:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1739,"nodeType":"Block","src":"2818:106:12","statements":[{"AST":{"nodeType":"YulBlock","src":"2880:38:12","statements":[{"nodeType":"YulAssignment","src":"2894:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"2904:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2894:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1736,"isOffset":false,"isSlot":true,"src":"2894:6:12","suffix":"slot","valueSize":1},{"declaration":1732,"isOffset":false,"isSlot":false,"src":"2904:4:12","valueSize":1}],"id":1738,"nodeType":"InlineAssembly","src":"2871:47:12"}]},"documentation":{"id":1730,"nodeType":"StructuredDocumentation","src":"2642:87:12","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1740,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2743:14:12","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1732,"mutability":"mutable","name":"slot","nameLocation":"2766:4:12","nodeType":"VariableDeclaration","scope":1740,"src":"2758:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1731,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2758:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2757:14:12"},"returnParameters":{"id":1737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1736,"mutability":"mutable","name":"r","nameLocation":"2815:1:12","nodeType":"VariableDeclaration","scope":1740,"src":"2795:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1690_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"},"typeName":{"id":1735,"nodeType":"UserDefinedTypeName","pathNode":{"id":1734,"name":"Uint256Slot","nodeType":"IdentifierPath","referencedDeclaration":1690,"src":"2795:11:12"},"referencedDeclaration":1690,"src":"2795:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1690_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"}},"visibility":"internal"}],"src":"2794:23:12"},"scope":1785,"src":"2734:190:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1750,"nodeType":"Block","src":"3103:106:12","statements":[{"AST":{"nodeType":"YulBlock","src":"3165:38:12","statements":[{"nodeType":"YulAssignment","src":"3179:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"3189:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3179:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1747,"isOffset":false,"isSlot":true,"src":"3179:6:12","suffix":"slot","valueSize":1},{"declaration":1743,"isOffset":false,"isSlot":false,"src":"3189:4:12","valueSize":1}],"id":1749,"nodeType":"InlineAssembly","src":"3156:47:12"}]},"documentation":{"id":1741,"nodeType":"StructuredDocumentation","src":"2930:86:12","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":1751,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3030:13:12","nodeType":"FunctionDefinition","parameters":{"id":1744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1743,"mutability":"mutable","name":"slot","nameLocation":"3052:4:12","nodeType":"VariableDeclaration","scope":1751,"src":"3044:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1742,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3044:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3043:14:12"},"returnParameters":{"id":1748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1747,"mutability":"mutable","name":"r","nameLocation":"3100:1:12","nodeType":"VariableDeclaration","scope":1751,"src":"3081:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1693_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"},"typeName":{"id":1746,"nodeType":"UserDefinedTypeName","pathNode":{"id":1745,"name":"StringSlot","nodeType":"IdentifierPath","referencedDeclaration":1693,"src":"3081:10:12"},"referencedDeclaration":1693,"src":"3081:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1693_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"}},"visibility":"internal"}],"src":"3080:22:12"},"scope":1785,"src":"3021:188:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1761,"nodeType":"Block","src":"3411:112:12","statements":[{"AST":{"nodeType":"YulBlock","src":"3473:44:12","statements":[{"nodeType":"YulAssignment","src":"3487:20:12","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3497:10:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3487:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1758,"isOffset":false,"isSlot":true,"src":"3487:6:12","suffix":"slot","valueSize":1},{"declaration":1754,"isOffset":false,"isSlot":true,"src":"3497:10:12","suffix":"slot","valueSize":1}],"id":1760,"nodeType":"InlineAssembly","src":"3464:53:12"}]},"documentation":{"id":1752,"nodeType":"StructuredDocumentation","src":"3215:101:12","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1762,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3330:13:12","nodeType":"FunctionDefinition","parameters":{"id":1755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1754,"mutability":"mutable","name":"store","nameLocation":"3359:5:12","nodeType":"VariableDeclaration","scope":1762,"src":"3344:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1753,"name":"string","nodeType":"ElementaryTypeName","src":"3344:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3343:22:12"},"returnParameters":{"id":1759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1758,"mutability":"mutable","name":"r","nameLocation":"3408:1:12","nodeType":"VariableDeclaration","scope":1762,"src":"3389:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1693_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"},"typeName":{"id":1757,"nodeType":"UserDefinedTypeName","pathNode":{"id":1756,"name":"StringSlot","nodeType":"IdentifierPath","referencedDeclaration":1693,"src":"3389:10:12"},"referencedDeclaration":1693,"src":"3389:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1693_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"}},"visibility":"internal"}],"src":"3388:22:12"},"scope":1785,"src":"3321:202:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1772,"nodeType":"Block","src":"3699:106:12","statements":[{"AST":{"nodeType":"YulBlock","src":"3761:38:12","statements":[{"nodeType":"YulAssignment","src":"3775:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"3785:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3775:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1769,"isOffset":false,"isSlot":true,"src":"3775:6:12","suffix":"slot","valueSize":1},{"declaration":1765,"isOffset":false,"isSlot":false,"src":"3785:4:12","valueSize":1}],"id":1771,"nodeType":"InlineAssembly","src":"3752:47:12"}]},"documentation":{"id":1763,"nodeType":"StructuredDocumentation","src":"3529:85:12","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":1773,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3628:12:12","nodeType":"FunctionDefinition","parameters":{"id":1766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1765,"mutability":"mutable","name":"slot","nameLocation":"3649:4:12","nodeType":"VariableDeclaration","scope":1773,"src":"3641:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1764,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3641:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3640:14:12"},"returnParameters":{"id":1770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"r","nameLocation":"3696:1:12","nodeType":"VariableDeclaration","scope":1773,"src":"3678:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1696_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"},"typeName":{"id":1768,"nodeType":"UserDefinedTypeName","pathNode":{"id":1767,"name":"BytesSlot","nodeType":"IdentifierPath","referencedDeclaration":1696,"src":"3678:9:12"},"referencedDeclaration":1696,"src":"3678:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1696_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"}},"visibility":"internal"}],"src":"3677:21:12"},"scope":1785,"src":"3619:186:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1783,"nodeType":"Block","src":"4002:112:12","statements":[{"AST":{"nodeType":"YulBlock","src":"4064:44:12","statements":[{"nodeType":"YulAssignment","src":"4078:20:12","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4088:10:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4078:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1780,"isOffset":false,"isSlot":true,"src":"4078:6:12","suffix":"slot","valueSize":1},{"declaration":1776,"isOffset":false,"isSlot":true,"src":"4088:10:12","suffix":"slot","valueSize":1}],"id":1782,"nodeType":"InlineAssembly","src":"4055:53:12"}]},"documentation":{"id":1774,"nodeType":"StructuredDocumentation","src":"3811:99:12","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1784,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3924:12:12","nodeType":"FunctionDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"store","nameLocation":"3951:5:12","nodeType":"VariableDeclaration","scope":1784,"src":"3937:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1775,"name":"bytes","nodeType":"ElementaryTypeName","src":"3937:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3936:21:12"},"returnParameters":{"id":1781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1780,"mutability":"mutable","name":"r","nameLocation":"3999:1:12","nodeType":"VariableDeclaration","scope":1784,"src":"3981:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1696_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"},"typeName":{"id":1779,"nodeType":"UserDefinedTypeName","pathNode":{"id":1778,"name":"BytesSlot","nodeType":"IdentifierPath","referencedDeclaration":1696,"src":"3981:9:12"},"referencedDeclaration":1696,"src":"3981:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1696_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"}},"visibility":"internal"}],"src":"3980:21:12"},"scope":1785,"src":"3915:199:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1786,"src":"1420:2696:12","usedErrors":[]}],"src":"193:3924:12"},"id":12},"contracts/Staking.sol":{"ast":{"absolutePath":"contracts/Staking.sol","exportedSymbols":{"AddressUpgradeable":[1624],"ContextUpgradeable":[1675],"ERC1967UpgradeUpgradeable":[488],"IBeaconUpgradeable":[498],"IERC1822ProxiableUpgradeable":[163],"IERC1967Upgradeable":[153],"IERC20PermitUpgradeable":[918],"IERC20Upgradeable":[882],"IEscrow":[3044],"IRewardPool":[3084],"IStaking":[3226],"Initializable":[667],"Math":[4056],"OwnableUpgradeable":[132],"SafeERC20Upgradeable":[1294],"SafeMath":[4252],"Stakes":[3615],"Staking":[2970],"StorageSlotUpgradeable":[1785],"THXCTokenInterface":[3308],"UUPSUpgradeable":[804]},"id":2971,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1787,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"33:24:13"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","id":1788,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2971,"sourceUnit":883,"src":"59:79:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol","id":1789,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2971,"sourceUnit":1295,"src":"139:88:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":1790,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2971,"sourceUnit":805,"src":"228:77:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":1791,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2971,"sourceUnit":133,"src":"306:75:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/THXCTokenInterface.sol","file":"./interfaces/THXCTokenInterface.sol","id":1792,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2971,"sourceUnit":3309,"src":"383:45:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IEscrow.sol","file":"./interfaces/IEscrow.sol","id":1793,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2971,"sourceUnit":3045,"src":"429:34:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IRewardPool.sol","file":"./interfaces/IRewardPool.sol","id":1794,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2971,"sourceUnit":3085,"src":"464:38:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IStaking.sol","file":"./interfaces/IStaking.sol","id":1795,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2971,"sourceUnit":3227,"src":"503:35:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libs/Stakes.sol","file":"./libs/Stakes.sol","id":1796,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2971,"sourceUnit":3616,"src":"539:27:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/Math.sol","file":"./utils/Math.sol","id":1797,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2971,"sourceUnit":4057,"src":"567:26:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1799,"name":"IStaking","nodeType":"IdentifierPath","referencedDeclaration":3226,"src":"772:8:13"},"id":1800,"nodeType":"InheritanceSpecifier","src":"772:8:13"},{"baseName":{"id":1801,"name":"OwnableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":132,"src":"782:18:13"},"id":1802,"nodeType":"InheritanceSpecifier","src":"782:18:13"},{"baseName":{"id":1803,"name":"UUPSUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":804,"src":"802:15:13"},"id":1804,"nodeType":"InheritanceSpecifier","src":"802:15:13"}],"canonicalName":"Staking","contractDependencies":[],"contractKind":"contract","documentation":{"id":1798,"nodeType":"StructuredDocumentation","src":"595:156:13","text":" @title Staking contract\n @dev The Staking contract allows Operator, Exchange Oracle, Recording Oracle and Reputation Oracle to stake to Escrow."},"fullyImplemented":true,"id":2970,"linearizedBaseContracts":[2970,804,488,153,163,132,1675,667,3226],"name":"Staking","nameLocation":"761:7:13","nodeType":"ContractDefinition","nodes":[{"id":1807,"libraryName":{"id":1805,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":4252,"src":"830:8:13"},"nodeType":"UsingForDirective","src":"824:27:13","typeName":{"id":1806,"name":"uint256","nodeType":"ElementaryTypeName","src":"843:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":1811,"libraryName":{"id":1808,"name":"Stakes","nodeType":"IdentifierPath","referencedDeclaration":3615,"src":"862:6:13"},"nodeType":"UsingForDirective","src":"856:31:13","typeName":{"id":1810,"nodeType":"UserDefinedTypeName","pathNode":{"id":1809,"name":"Stakes.Staker","nodeType":"IdentifierPath","referencedDeclaration":3329,"src":"873:13:13"},"referencedDeclaration":3329,"src":"873:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"}}},{"constant":false,"functionSelector":"fc0c546a","id":1813,"mutability":"mutable","name":"token","nameLocation":"929:5:13","nodeType":"VariableDeclaration","scope":2970,"src":"914:20:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1812,"name":"address","nodeType":"ElementaryTypeName","src":"914:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[3112],"constant":false,"functionSelector":"66666aa9","id":1816,"mutability":"mutable","name":"rewardPool","nameLocation":"992:10:13","nodeType":"VariableDeclaration","overrides":{"id":1815,"nodeType":"OverrideSpecifier","overrides":[],"src":"983:8:13"},"scope":2970,"src":"968:34:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1814,"name":"address","nodeType":"ElementaryTypeName","src":"968:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"ec5ffac2","id":1818,"mutability":"mutable","name":"minimumStake","nameLocation":"1081:12:13","nodeType":"VariableDeclaration","scope":2970,"src":"1066:27:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1817,"name":"uint256","nodeType":"ElementaryTypeName","src":"1066:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"3fd8b02f","id":1820,"mutability":"mutable","name":"lockPeriod","nameLocation":"1147:10:13","nodeType":"VariableDeclaration","scope":2970,"src":"1133:24:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1819,"name":"uint32","nodeType":"ElementaryTypeName","src":"1133:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"public"},{"constant":false,"functionSelector":"16934fc4","id":1825,"mutability":"mutable","name":"stakes","nameLocation":"1243:6:13","nodeType":"VariableDeclaration","scope":2970,"src":"1202:47:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$3329_storage_$","typeString":"mapping(address => struct Stakes.Staker)"},"typeName":{"id":1824,"keyType":{"id":1821,"name":"address","nodeType":"ElementaryTypeName","src":"1210:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1202:33:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$3329_storage_$","typeString":"mapping(address => struct Stakes.Staker)"},"valueType":{"id":1823,"nodeType":"UserDefinedTypeName","pathNode":{"id":1822,"name":"Stakes.Staker","nodeType":"IdentifierPath","referencedDeclaration":3329,"src":"1221:13:13"},"referencedDeclaration":3329,"src":"1221:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"}}},"visibility":"public"},{"constant":false,"functionSelector":"fd5e6dd1","id":1828,"mutability":"mutable","name":"stakers","nameLocation":"1296:7:13","nodeType":"VariableDeclaration","scope":2970,"src":"1279:24:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":1826,"name":"address","nodeType":"ElementaryTypeName","src":"1279:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1827,"nodeType":"ArrayTypeName","src":"1279:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"52a9039c","id":1833,"mutability":"mutable","name":"allocations","nameLocation":"1406:11:13","nodeType":"VariableDeclaration","scope":2970,"src":"1359:58:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Allocation_$3107_storage_$","typeString":"mapping(address => struct IStaking.Allocation)"},"typeName":{"id":1832,"keyType":{"id":1829,"name":"address","nodeType":"ElementaryTypeName","src":"1367:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1359:39:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Allocation_$3107_storage_$","typeString":"mapping(address => struct IStaking.Allocation)"},"valueType":{"id":1831,"nodeType":"UserDefinedTypeName","pathNode":{"id":1830,"name":"IStaking.Allocation","nodeType":"IdentifierPath","referencedDeclaration":3107,"src":"1378:19:13"},"referencedDeclaration":3107,"src":"1378:19:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation"}}},"visibility":"public"},{"anonymous":false,"documentation":{"id":1834,"nodeType":"StructuredDocumentation","src":"1424:68:13","text":" @dev Emitted when `staker` stake `tokens` amount."},"id":1840,"name":"StakeDeposited","nameLocation":"1503:14:13","nodeType":"EventDefinition","parameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"indexed":true,"mutability":"mutable","name":"staker","nameLocation":"1534:6:13","nodeType":"VariableDeclaration","scope":1840,"src":"1518:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1835,"name":"address","nodeType":"ElementaryTypeName","src":"1518:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1838,"indexed":false,"mutability":"mutable","name":"tokens","nameLocation":"1550:6:13","nodeType":"VariableDeclaration","scope":1840,"src":"1542:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1517:40:13"},"src":"1497:61:13"},{"anonymous":false,"documentation":{"id":1841,"nodeType":"StructuredDocumentation","src":"1564:96:13","text":" @dev Emitted when `staker` unstaked and locked `tokens` amount `until` block."},"id":1849,"name":"StakeLocked","nameLocation":"1671:11:13","nodeType":"EventDefinition","parameters":{"id":1848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1843,"indexed":true,"mutability":"mutable","name":"staker","nameLocation":"1699:6:13","nodeType":"VariableDeclaration","scope":1849,"src":"1683:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1842,"name":"address","nodeType":"ElementaryTypeName","src":"1683:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1845,"indexed":false,"mutability":"mutable","name":"tokens","nameLocation":"1715:6:13","nodeType":"VariableDeclaration","scope":1849,"src":"1707:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1844,"name":"uint256","nodeType":"ElementaryTypeName","src":"1707:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1847,"indexed":false,"mutability":"mutable","name":"until","nameLocation":"1731:5:13","nodeType":"VariableDeclaration","scope":1849,"src":"1723:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1846,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:55:13"},"src":"1665:73:13"},{"anonymous":false,"documentation":{"id":1850,"nodeType":"StructuredDocumentation","src":"1744:72:13","text":" @dev Emitted when `staker` withdraws `tokens` staked."},"id":1856,"name":"StakeWithdrawn","nameLocation":"1827:14:13","nodeType":"EventDefinition","parameters":{"id":1855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1852,"indexed":true,"mutability":"mutable","name":"staker","nameLocation":"1858:6:13","nodeType":"VariableDeclaration","scope":1856,"src":"1842:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1851,"name":"address","nodeType":"ElementaryTypeName","src":"1842:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1854,"indexed":false,"mutability":"mutable","name":"tokens","nameLocation":"1874:6:13","nodeType":"VariableDeclaration","scope":1856,"src":"1866:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1853,"name":"uint256","nodeType":"ElementaryTypeName","src":"1866:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1841:40:13"},"src":"1821:61:13"},{"anonymous":false,"documentation":{"id":1857,"nodeType":"StructuredDocumentation","src":"1888:89:13","text":" @dev Emitted when `staker` was slashed for a total of `tokens` amount."},"id":1867,"name":"StakeSlashed","nameLocation":"1988:12:13","nodeType":"EventDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1859,"indexed":true,"mutability":"mutable","name":"staker","nameLocation":"2026:6:13","nodeType":"VariableDeclaration","scope":1867,"src":"2010:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1858,"name":"address","nodeType":"ElementaryTypeName","src":"2010:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1861,"indexed":false,"mutability":"mutable","name":"tokens","nameLocation":"2050:6:13","nodeType":"VariableDeclaration","scope":1867,"src":"2042:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1860,"name":"uint256","nodeType":"ElementaryTypeName","src":"2042:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1863,"indexed":true,"mutability":"mutable","name":"escrowAddress","nameLocation":"2082:13:13","nodeType":"VariableDeclaration","scope":1867,"src":"2066:29:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1862,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1865,"indexed":false,"mutability":"mutable","name":"slasher","nameLocation":"2113:7:13","nodeType":"VariableDeclaration","scope":1867,"src":"2105:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1864,"name":"address","nodeType":"ElementaryTypeName","src":"2105:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2000:126:13"},"src":"1982:145:13"},{"anonymous":false,"documentation":{"id":1868,"nodeType":"StructuredDocumentation","src":"2133:91:13","text":" @dev Emitted when `staker` allocated `tokens` amount to `escrowAddress`."},"id":1878,"name":"StakeAllocated","nameLocation":"2235:14:13","nodeType":"EventDefinition","parameters":{"id":1877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"indexed":true,"mutability":"mutable","name":"staker","nameLocation":"2275:6:13","nodeType":"VariableDeclaration","scope":1878,"src":"2259:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1869,"name":"address","nodeType":"ElementaryTypeName","src":"2259:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1872,"indexed":false,"mutability":"mutable","name":"tokens","nameLocation":"2299:6:13","nodeType":"VariableDeclaration","scope":1878,"src":"2291:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1871,"name":"uint256","nodeType":"ElementaryTypeName","src":"2291:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1874,"indexed":true,"mutability":"mutable","name":"escrowAddress","nameLocation":"2331:13:13","nodeType":"VariableDeclaration","scope":1878,"src":"2315:29:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1873,"name":"address","nodeType":"ElementaryTypeName","src":"2315:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1876,"indexed":false,"mutability":"mutable","name":"createdAt","nameLocation":"2362:9:13","nodeType":"VariableDeclaration","scope":1878,"src":"2354:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1875,"name":"uint256","nodeType":"ElementaryTypeName","src":"2354:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2249:128:13"},"src":"2229:149:13"},{"anonymous":false,"documentation":{"id":1879,"nodeType":"StructuredDocumentation","src":"2384:82:13","text":" @dev Emitted when `staker` close an allocation `escrowAddress`."},"id":1889,"name":"AllocationClosed","nameLocation":"2477:16:13","nodeType":"EventDefinition","parameters":{"id":1888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1881,"indexed":true,"mutability":"mutable","name":"staker","nameLocation":"2519:6:13","nodeType":"VariableDeclaration","scope":1889,"src":"2503:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1880,"name":"address","nodeType":"ElementaryTypeName","src":"2503:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1883,"indexed":false,"mutability":"mutable","name":"tokens","nameLocation":"2543:6:13","nodeType":"VariableDeclaration","scope":1889,"src":"2535:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1882,"name":"uint256","nodeType":"ElementaryTypeName","src":"2535:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1885,"indexed":true,"mutability":"mutable","name":"escrowAddress","nameLocation":"2575:13:13","nodeType":"VariableDeclaration","scope":1889,"src":"2559:29:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1884,"name":"address","nodeType":"ElementaryTypeName","src":"2559:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1887,"indexed":false,"mutability":"mutable","name":"closedAt","nameLocation":"2606:8:13","nodeType":"VariableDeclaration","scope":1889,"src":"2598:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1886,"name":"uint256","nodeType":"ElementaryTypeName","src":"2598:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2493:127:13"},"src":"2471:150:13"},{"anonymous":false,"documentation":{"id":1890,"nodeType":"StructuredDocumentation","src":"2627:78:13","text":" @dev Emitted when `owner` set new value for `minimumStake`."},"id":1894,"name":"SetMinumumStake","nameLocation":"2716:15:13","nodeType":"EventDefinition","parameters":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1892,"indexed":true,"mutability":"mutable","name":"minimumStake","nameLocation":"2748:12:13","nodeType":"VariableDeclaration","scope":1894,"src":"2732:28:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1891,"name":"uint256","nodeType":"ElementaryTypeName","src":"2732:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2731:30:13"},"src":"2710:52:13"},{"anonymous":false,"documentation":{"id":1895,"nodeType":"StructuredDocumentation","src":"2768:76:13","text":" @dev Emitted when `owner` set new value for `lockPeriod`."},"id":1899,"name":"SetLockPeriod","nameLocation":"2855:13:13","nodeType":"EventDefinition","parameters":{"id":1898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1897,"indexed":true,"mutability":"mutable","name":"lockPeriod","nameLocation":"2884:10:13","nodeType":"VariableDeclaration","scope":1899,"src":"2869:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1896,"name":"uint32","nodeType":"ElementaryTypeName","src":"2869:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2868:27:13"},"src":"2849:47:13"},{"anonymous":false,"documentation":{"id":1900,"nodeType":"StructuredDocumentation","src":"2902:76:13","text":" @dev Emitted when `owner` set new value for `rewardPool`."},"id":1904,"name":"SetRewardPool","nameLocation":"2989:13:13","nodeType":"EventDefinition","parameters":{"id":1903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1902,"indexed":true,"mutability":"mutable","name":"rewardPool","nameLocation":"3019:10:13","nodeType":"VariableDeclaration","scope":1904,"src":"3003:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1901,"name":"address","nodeType":"ElementaryTypeName","src":"3003:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3002:28:13"},"src":"2983:48:13"},{"body":{"id":1911,"nodeType":"Block","src":"3104:39:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1908,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"3114:20:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3114:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1910,"nodeType":"ExpressionStatement","src":"3114:22:13"}]},"documentation":{"id":1905,"nodeType":"StructuredDocumentation","src":"3037:48:13","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":1912,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1906,"nodeType":"ParameterList","parameters":[],"src":"3101:2:13"},"returnParameters":{"id":1907,"nodeType":"ParameterList","parameters":[],"src":"3104:0:13"},"scope":2970,"src":"3090:53:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1932,"nodeType":"Block","src":"3295:114:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1923,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"3305:24:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3305:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1925,"nodeType":"ExpressionStatement","src":"3305:26:13"},{"expression":{"arguments":[{"id":1927,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"3367:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1928,"name":"_minimumStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"3375:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1929,"name":"_lockPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"3390:11:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1926,"name":"__Staking_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"3342:24:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint32_$returns$__$","typeString":"function (address,uint256,uint32)"}},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3342:60:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1931,"nodeType":"ExpressionStatement","src":"3342:60:13"}]},"functionSelector":"6c5ac81e","id":1933,"implemented":true,"kind":"function","modifiers":[{"id":1921,"kind":"modifierInvocation","modifierName":{"id":1920,"name":"initializer","nodeType":"IdentifierPath","referencedDeclaration":569,"src":"3283:11:13"},"nodeType":"ModifierInvocation","src":"3283:11:13"}],"name":"initialize","nameLocation":"3158:10:13","nodeType":"FunctionDefinition","parameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"mutability":"mutable","name":"_token","nameLocation":"3186:6:13","nodeType":"VariableDeclaration","scope":1933,"src":"3178:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1913,"name":"address","nodeType":"ElementaryTypeName","src":"3178:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1916,"mutability":"mutable","name":"_minimumStake","nameLocation":"3210:13:13","nodeType":"VariableDeclaration","scope":1933,"src":"3202:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1915,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1918,"mutability":"mutable","name":"_lockPeriod","nameLocation":"3240:11:13","nodeType":"VariableDeclaration","scope":1933,"src":"3233:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1917,"name":"uint32","nodeType":"ElementaryTypeName","src":"3233:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3168:89:13"},"returnParameters":{"id":1922,"nodeType":"ParameterList","parameters":[],"src":"3295:0:13"},"scope":2970,"src":"3149:260:13","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":1956,"nodeType":"Block","src":"3564:109:13","statements":[{"expression":{"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1944,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"3574:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1945,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"3582:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3574:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1947,"nodeType":"ExpressionStatement","src":"3574:14:13"},{"expression":{"arguments":[{"id":1949,"name":"_minimumStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"3615:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1948,"name":"_setMinimumStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"3598:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3598:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1951,"nodeType":"ExpressionStatement","src":"3598:31:13"},{"expression":{"arguments":[{"id":1953,"name":"_lockPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"3654:11:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1952,"name":"_setLockPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"3639:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint32_$returns$__$","typeString":"function (uint32)"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3639:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1955,"nodeType":"ExpressionStatement","src":"3639:27:13"}]},"id":1957,"implemented":true,"kind":"function","modifiers":[{"id":1942,"kind":"modifierInvocation","modifierName":{"id":1941,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":612,"src":"3547:16:13"},"nodeType":"ModifierInvocation","src":"3547:16:13"}],"name":"__Staking_init_unchained","nameLocation":"3424:24:13","nodeType":"FunctionDefinition","parameters":{"id":1940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"mutability":"mutable","name":"_token","nameLocation":"3466:6:13","nodeType":"VariableDeclaration","scope":1957,"src":"3458:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1934,"name":"address","nodeType":"ElementaryTypeName","src":"3458:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1937,"mutability":"mutable","name":"_minimumStake","nameLocation":"3490:13:13","nodeType":"VariableDeclaration","scope":1957,"src":"3482:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1936,"name":"uint256","nodeType":"ElementaryTypeName","src":"3482:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1939,"mutability":"mutable","name":"_lockPeriod","nameLocation":"3520:11:13","nodeType":"VariableDeclaration","scope":1957,"src":"3513:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1938,"name":"uint32","nodeType":"ElementaryTypeName","src":"3513:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3448:89:13"},"returnParameters":{"id":1943,"nodeType":"ParameterList","parameters":[],"src":"3564:0:13"},"scope":2970,"src":"3415:258:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3117],"body":{"id":1970,"nodeType":"Block","src":"3869:48:13","statements":[{"expression":{"arguments":[{"id":1967,"name":"_minimumStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"3896:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1966,"name":"_setMinimumStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"3879:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3879:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1969,"nodeType":"ExpressionStatement","src":"3879:31:13"}]},"documentation":{"id":1958,"nodeType":"StructuredDocumentation","src":"3679:95:13","text":" @dev Set the minimum stake amount.\n @param _minimumStake Minimum stake"},"functionSelector":"233e9903","id":1971,"implemented":true,"kind":"function","modifiers":[{"id":1964,"kind":"modifierInvocation","modifierName":{"id":1963,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":46,"src":"3859:9:13"},"nodeType":"ModifierInvocation","src":"3859:9:13"}],"name":"setMinimumStake","nameLocation":"3788:15:13","nodeType":"FunctionDefinition","overrides":{"id":1962,"nodeType":"OverrideSpecifier","overrides":[],"src":"3850:8:13"},"parameters":{"id":1961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1960,"mutability":"mutable","name":"_minimumStake","nameLocation":"3821:13:13","nodeType":"VariableDeclaration","scope":1971,"src":"3813:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1959,"name":"uint256","nodeType":"ElementaryTypeName","src":"3813:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3803:37:13"},"returnParameters":{"id":1965,"nodeType":"ParameterList","parameters":[],"src":"3869:0:13"},"scope":2970,"src":"3779:138:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1992,"nodeType":"Block","src":"4080:154:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1978,"name":"_minimumStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"4098:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4114:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4098:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d757374206265206120706f736974697665206e756d626572","id":1981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4117:27:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_6708eebd660913c2744ac9640b2ee73a7eba7a7981d51b61a65bb76e5a97917e","typeString":"literal_string \"Must be a positive number\""},"value":"Must be a positive number"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6708eebd660913c2744ac9640b2ee73a7eba7a7981d51b61a65bb76e5a97917e","typeString":"literal_string \"Must be a positive number\""}],"id":1977,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4090:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4090:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1983,"nodeType":"ExpressionStatement","src":"4090:55:13"},{"expression":{"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1984,"name":"minimumStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"4155:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1985,"name":"_minimumStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"4170:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4155:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1987,"nodeType":"ExpressionStatement","src":"4155:28:13"},{"eventCall":{"arguments":[{"id":1989,"name":"minimumStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"4214:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1988,"name":"SetMinumumStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"4198:15:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4198:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1991,"nodeType":"EmitStatement","src":"4193:34:13"}]},"documentation":{"id":1972,"nodeType":"StructuredDocumentation","src":"3923:95:13","text":" @dev Set the minimum stake amount.\n @param _minimumStake Minimum stake"},"id":1993,"implemented":true,"kind":"function","modifiers":[],"name":"_setMinimumStake","nameLocation":"4032:16:13","nodeType":"FunctionDefinition","parameters":{"id":1975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1974,"mutability":"mutable","name":"_minimumStake","nameLocation":"4057:13:13","nodeType":"VariableDeclaration","scope":1993,"src":"4049:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1973,"name":"uint256","nodeType":"ElementaryTypeName","src":"4049:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4048:23:13"},"returnParameters":{"id":1976,"nodeType":"ParameterList","parameters":[],"src":"4080:0:13"},"scope":2970,"src":"4023:211:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"baseFunctions":[3122],"body":{"id":2006,"nodeType":"Block","src":"4463:44:13","statements":[{"expression":{"arguments":[{"id":2003,"name":"_lockPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"4488:11:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":2002,"name":"_setLockPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"4473:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint32_$returns$__$","typeString":"function (uint32)"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4473:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2005,"nodeType":"ExpressionStatement","src":"4473:27:13"}]},"documentation":{"id":1994,"nodeType":"StructuredDocumentation","src":"4240:147:13","text":" @dev Set the lock period for unstaking.\n @param _lockPeriod Period in blocks to wait for token withdrawals after unstaking"},"functionSelector":"f489f23b","id":2007,"implemented":true,"kind":"function","modifiers":[{"id":2000,"kind":"modifierInvocation","modifierName":{"id":1999,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":46,"src":"4453:9:13"},"nodeType":"ModifierInvocation","src":"4453:9:13"}],"name":"setLockPeriod","nameLocation":"4401:13:13","nodeType":"FunctionDefinition","overrides":{"id":1998,"nodeType":"OverrideSpecifier","overrides":[],"src":"4444:8:13"},"parameters":{"id":1997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"_lockPeriod","nameLocation":"4422:11:13","nodeType":"VariableDeclaration","scope":2007,"src":"4415:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1995,"name":"uint32","nodeType":"ElementaryTypeName","src":"4415:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4414:20:13"},"returnParameters":{"id":2001,"nodeType":"ParameterList","parameters":[],"src":"4463:0:13"},"scope":2970,"src":"4392:115:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2028,"nodeType":"Block","src":"4717:144:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2014,"name":"_lockPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"4735:11:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4749:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4735:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d757374206265206120706f736974697665206e756d626572","id":2017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4752:27:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_6708eebd660913c2744ac9640b2ee73a7eba7a7981d51b61a65bb76e5a97917e","typeString":"literal_string \"Must be a positive number\""},"value":"Must be a positive number"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6708eebd660913c2744ac9640b2ee73a7eba7a7981d51b61a65bb76e5a97917e","typeString":"literal_string \"Must be a positive number\""}],"id":2013,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4727:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4727:53:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2019,"nodeType":"ExpressionStatement","src":"4727:53:13"},{"expression":{"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2020,"name":"lockPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"4790:10:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2021,"name":"_lockPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"4803:11:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4790:24:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":2023,"nodeType":"ExpressionStatement","src":"4790:24:13"},{"eventCall":{"arguments":[{"id":2025,"name":"lockPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"4843:10:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":2024,"name":"SetLockPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"4829:13:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint32_$returns$__$","typeString":"function (uint32)"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4829:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2027,"nodeType":"EmitStatement","src":"4824:30:13"}]},"documentation":{"id":2008,"nodeType":"StructuredDocumentation","src":"4513:147:13","text":" @dev Set the lock period for unstaking.\n @param _lockPeriod Period in blocks to wait for token withdrawals after unstaking"},"id":2029,"implemented":true,"kind":"function","modifiers":[],"name":"_setLockPeriod","nameLocation":"4674:14:13","nodeType":"FunctionDefinition","parameters":{"id":2011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"mutability":"mutable","name":"_lockPeriod","nameLocation":"4696:11:13","nodeType":"VariableDeclaration","scope":2029,"src":"4689:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2009,"name":"uint32","nodeType":"ElementaryTypeName","src":"4689:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4688:20:13"},"returnParameters":{"id":2012,"nodeType":"ParameterList","parameters":[],"src":"4717:0:13"},"scope":2970,"src":"4665:196:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"baseFunctions":[3127],"body":{"id":2042,"nodeType":"Block","src":"5051:44:13","statements":[{"expression":{"arguments":[{"id":2039,"name":"_rewardPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"5076:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2038,"name":"_setRewardPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"5061:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5061:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2041,"nodeType":"ExpressionStatement","src":"5061:27:13"}]},"documentation":{"id":2030,"nodeType":"StructuredDocumentation","src":"4867:107:13","text":" @dev Set the destionations of the rewards.\n @param _rewardPool Reward pool address"},"functionSelector":"78238c37","id":2043,"implemented":true,"kind":"function","modifiers":[{"id":2036,"kind":"modifierInvocation","modifierName":{"id":2035,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":46,"src":"5041:9:13"},"nodeType":"ModifierInvocation","src":"5041:9:13"}],"name":"setRewardPool","nameLocation":"4988:13:13","nodeType":"FunctionDefinition","overrides":{"id":2034,"nodeType":"OverrideSpecifier","overrides":[],"src":"5032:8:13"},"parameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"_rewardPool","nameLocation":"5010:11:13","nodeType":"VariableDeclaration","scope":2043,"src":"5002:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2031,"name":"address","nodeType":"ElementaryTypeName","src":"5002:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5001:21:13"},"returnParameters":{"id":2037,"nodeType":"ParameterList","parameters":[],"src":"5051:0:13"},"scope":2970,"src":"4979:116:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2067,"nodeType":"Block","src":"5266:153:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2050,"name":"_rewardPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"5284:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5307:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5299:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2051,"name":"address","nodeType":"ElementaryTypeName","src":"5299:7:13","typeDescriptions":{}}},"id":2054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5299:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5284:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d75737420626520612076616c69642061646472657373","id":2056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5311:25:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_468519957235cef46f7c921ca2d833d91a40db6eb163f5e0db878d6b92517276","typeString":"literal_string \"Must be a valid address\""},"value":"Must be a valid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_468519957235cef46f7c921ca2d833d91a40db6eb163f5e0db878d6b92517276","typeString":"literal_string \"Must be a valid address\""}],"id":2049,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5276:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5276:61:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2058,"nodeType":"ExpressionStatement","src":"5276:61:13"},{"expression":{"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2059,"name":"rewardPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"5347:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2060,"name":"_rewardPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"5360:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5347:24:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2062,"nodeType":"ExpressionStatement","src":"5347:24:13"},{"eventCall":{"arguments":[{"id":2064,"name":"_rewardPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"5400:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2063,"name":"SetRewardPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"5386:13:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5386:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2066,"nodeType":"EmitStatement","src":"5381:31:13"}]},"documentation":{"id":2044,"nodeType":"StructuredDocumentation","src":"5101:107:13","text":" @dev Set the destionations of the rewards.\n @param _rewardPool Reward pool address"},"id":2068,"implemented":true,"kind":"function","modifiers":[],"name":"_setRewardPool","nameLocation":"5222:14:13","nodeType":"FunctionDefinition","parameters":{"id":2047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2046,"mutability":"mutable","name":"_rewardPool","nameLocation":"5245:11:13","nodeType":"VariableDeclaration","scope":2068,"src":"5237:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2045,"name":"address","nodeType":"ElementaryTypeName","src":"5237:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5236:21:13"},"returnParameters":{"id":2048,"nodeType":"ParameterList","parameters":[],"src":"5266:0:13"},"scope":2970,"src":"5213:206:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"baseFunctions":[3134],"body":{"id":2084,"nodeType":"Block","src":"5733:83:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_enum$_AllocationState_$3093","typeString":"enum IStaking.AllocationState"},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2078,"name":"_escrowAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"5770:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2077,"name":"_getAllocationState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"5750:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_enum$_AllocationState_$3093_$","typeString":"function (address) view returns (enum IStaking.AllocationState)"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5750:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_AllocationState_$3093","typeString":"enum IStaking.AllocationState"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2080,"name":"AllocationState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"5789:15:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AllocationState_$3093_$","typeString":"type(enum IStaking.AllocationState)"}},"id":2081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Null","nodeType":"MemberAccess","referencedDeclaration":3088,"src":"5789:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_AllocationState_$3093","typeString":"enum IStaking.AllocationState"}},"src":"5750:59:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2076,"id":2083,"nodeType":"Return","src":"5743:66:13"}]},"documentation":{"id":2069,"nodeType":"StructuredDocumentation","src":"5425:205:13","text":" @dev Return if escrowAddress is use for allocation.\n @param _escrowAddress Address used as signer by the staker for an allocation\n @return True if _escrowAddress already used"},"functionSelector":"f1d60d66","id":2085,"implemented":true,"kind":"function","modifiers":[],"name":"isAllocation","nameLocation":"5644:12:13","nodeType":"FunctionDefinition","overrides":{"id":2073,"nodeType":"OverrideSpecifier","overrides":[],"src":"5709:8:13"},"parameters":{"id":2072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2071,"mutability":"mutable","name":"_escrowAddress","nameLocation":"5674:14:13","nodeType":"VariableDeclaration","scope":2085,"src":"5666:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2070,"name":"address","nodeType":"ElementaryTypeName","src":"5666:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5656:38:13"},"returnParameters":{"id":2076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2085,"src":"5727:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2074,"name":"bool","nodeType":"ElementaryTypeName","src":"5727:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5726:6:13"},"scope":2970,"src":"5635:181:13","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[3141],"body":{"id":2101,"nodeType":"Block","src":"6063:56:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2094,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"6080:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$3329_storage_$","typeString":"mapping(address => struct Stakes.Staker storage ref)"}},"id":2096,"indexExpression":{"id":2095,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"6087:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6080:15:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage","typeString":"struct Stakes.Staker storage ref"}},"id":2097,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensStaked","nodeType":"MemberAccess","referencedDeclaration":3322,"src":"6080:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6111:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6080:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2093,"id":2100,"nodeType":"Return","src":"6073:39:13"}]},"documentation":{"id":2086,"nodeType":"StructuredDocumentation","src":"5822:163:13","text":" @dev Getter that returns if an staker has any stake.\n @param _staker Address of the staker\n @return True if staker has staked tokens"},"functionSelector":"e73e14bf","id":2102,"implemented":true,"kind":"function","modifiers":[],"name":"hasStake","nameLocation":"5999:8:13","nodeType":"FunctionDefinition","overrides":{"id":2090,"nodeType":"OverrideSpecifier","overrides":[],"src":"6039:8:13"},"parameters":{"id":2089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2088,"mutability":"mutable","name":"_staker","nameLocation":"6016:7:13","nodeType":"VariableDeclaration","scope":2102,"src":"6008:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2087,"name":"address","nodeType":"ElementaryTypeName","src":"6008:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6007:17:13"},"returnParameters":{"id":2093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2102,"src":"6057:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2091,"name":"bool","nodeType":"ElementaryTypeName","src":"6057:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6056:6:13"},"scope":2970,"src":"5990:129:13","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[3148],"body":{"id":2119,"nodeType":"Block","src":"6409:61:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":2111,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"6426:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$3329_storage_$","typeString":"mapping(address => struct Stakes.Staker storage ref)"}},"id":2113,"indexExpression":{"id":2112,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"6433:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6426:15:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage","typeString":"struct Stakes.Staker storage ref"}},"id":2114,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensAvailable","nodeType":"MemberAccess","referencedDeclaration":3553,"src":"6426:31:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Staker_$3329_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Staker_$3329_memory_ptr_$","typeString":"function (struct Stakes.Staker memory) pure returns (uint256)"}},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6426:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6462:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6426:37:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2110,"id":2118,"nodeType":"Return","src":"6419:44:13"}]},"documentation":{"id":2103,"nodeType":"StructuredDocumentation","src":"6125:183:13","text":" @dev Getter that returns if an staker has any available stake.\n @param _staker Address of the staker\n @return True if staker has available tokens staked"},"functionSelector":"1af963aa","id":2120,"implemented":true,"kind":"function","modifiers":[],"name":"hasAvailableStake","nameLocation":"6322:17:13","nodeType":"FunctionDefinition","overrides":{"id":2107,"nodeType":"OverrideSpecifier","overrides":[],"src":"6385:8:13"},"parameters":{"id":2106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2105,"mutability":"mutable","name":"_staker","nameLocation":"6357:7:13","nodeType":"VariableDeclaration","scope":2120,"src":"6349:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2104,"name":"address","nodeType":"ElementaryTypeName","src":"6349:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6339:31:13"},"returnParameters":{"id":2110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2120,"src":"6403:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2108,"name":"bool","nodeType":"ElementaryTypeName","src":"6403:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6402:6:13"},"scope":2970,"src":"6313:157:13","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[3156],"body":{"id":2134,"nodeType":"Block","src":"6755:54:13","statements":[{"expression":{"arguments":[{"id":2131,"name":"_escrowAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"6787:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2130,"name":"_getAllocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"6772:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_struct$_Allocation_$3107_memory_ptr_$","typeString":"function (address) view returns (struct IStaking.Allocation memory)"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6772:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_memory_ptr","typeString":"struct IStaking.Allocation memory"}},"functionReturnParameters":2129,"id":2133,"nodeType":"Return","src":"6765:37:13"}]},"documentation":{"id":2121,"nodeType":"StructuredDocumentation","src":"6476:162:13","text":" @dev Return the allocation by escrow address.\n @param _escrowAddress Address used as allocation identifier\n @return Allocation data"},"functionSelector":"0e022923","id":2135,"implemented":true,"kind":"function","modifiers":[],"name":"getAllocation","nameLocation":"6652:13:13","nodeType":"FunctionDefinition","overrides":{"id":2125,"nodeType":"OverrideSpecifier","overrides":[],"src":"6718:8:13"},"parameters":{"id":2124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2123,"mutability":"mutable","name":"_escrowAddress","nameLocation":"6683:14:13","nodeType":"VariableDeclaration","scope":2135,"src":"6675:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2122,"name":"address","nodeType":"ElementaryTypeName","src":"6675:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6665:38:13"},"returnParameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2135,"src":"6736:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_memory_ptr","typeString":"struct IStaking.Allocation"},"typeName":{"id":2127,"nodeType":"UserDefinedTypeName","pathNode":{"id":2126,"name":"Allocation","nodeType":"IdentifierPath","referencedDeclaration":3107,"src":"6736:10:13"},"referencedDeclaration":3107,"src":"6736:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation"}},"visibility":"internal"}],"src":"6735:19:13"},"scope":2970,"src":"6643:166:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2148,"nodeType":"Block","src":"7077:51:13","statements":[{"expression":{"baseExpression":{"id":2144,"name":"allocations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"7094:11:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Allocation_$3107_storage_$","typeString":"mapping(address => struct IStaking.Allocation storage ref)"}},"id":2146,"indexExpression":{"id":2145,"name":"_escrowAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"7106:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7094:27:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage","typeString":"struct IStaking.Allocation storage ref"}},"functionReturnParameters":2143,"id":2147,"nodeType":"Return","src":"7087:34:13"}]},"documentation":{"id":2136,"nodeType":"StructuredDocumentation","src":"6815:154:13","text":" @dev Return the allocation by job ID.\n @param _escrowAddress Address used as allocation identifier\n @return Allocation data"},"id":2149,"implemented":true,"kind":"function","modifiers":[],"name":"_getAllocation","nameLocation":"6983:14:13","nodeType":"FunctionDefinition","parameters":{"id":2139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"_escrowAddress","nameLocation":"7015:14:13","nodeType":"VariableDeclaration","scope":2149,"src":"7007:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2137,"name":"address","nodeType":"ElementaryTypeName","src":"7007:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6997:38:13"},"returnParameters":{"id":2143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2149,"src":"7058:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_memory_ptr","typeString":"struct IStaking.Allocation"},"typeName":{"id":2141,"nodeType":"UserDefinedTypeName","pathNode":{"id":2140,"name":"Allocation","nodeType":"IdentifierPath","referencedDeclaration":3107,"src":"7058:10:13"},"referencedDeclaration":3107,"src":"7058:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation"}},"visibility":"internal"}],"src":"7057:19:13"},"scope":2970,"src":"6974:154:13","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[3164],"body":{"id":2163,"nodeType":"Block","src":"7422:59:13","statements":[{"expression":{"arguments":[{"id":2160,"name":"_escrowAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"7459:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2159,"name":"_getAllocationState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"7439:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_enum$_AllocationState_$3093_$","typeString":"function (address) view returns (enum IStaking.AllocationState)"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7439:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_AllocationState_$3093","typeString":"enum IStaking.AllocationState"}},"functionReturnParameters":2158,"id":2162,"nodeType":"Return","src":"7432:42:13"}]},"documentation":{"id":2150,"nodeType":"StructuredDocumentation","src":"7134:168:13","text":" @dev Return the current state of an allocation.\n @param _escrowAddress Address used as the allocation identifier\n @return AllocationState"},"functionSelector":"98c657dc","id":2164,"implemented":true,"kind":"function","modifiers":[],"name":"getAllocationState","nameLocation":"7316:18:13","nodeType":"FunctionDefinition","overrides":{"id":2154,"nodeType":"OverrideSpecifier","overrides":[],"src":"7387:8:13"},"parameters":{"id":2153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2152,"mutability":"mutable","name":"_escrowAddress","nameLocation":"7352:14:13","nodeType":"VariableDeclaration","scope":2164,"src":"7344:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2151,"name":"address","nodeType":"ElementaryTypeName","src":"7344:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7334:38:13"},"returnParameters":{"id":2158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2164,"src":"7405:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AllocationState_$3093","typeString":"enum IStaking.AllocationState"},"typeName":{"id":2156,"nodeType":"UserDefinedTypeName","pathNode":{"id":2155,"name":"AllocationState","nodeType":"IdentifierPath","referencedDeclaration":3093,"src":"7405:15:13"},"referencedDeclaration":3093,"src":"7405:15:13","typeDescriptions":{"typeIdentifier":"t_enum$_AllocationState_$3093","typeString":"enum IStaking.AllocationState"}},"visibility":"internal"}],"src":"7404:17:13"},"scope":2970,"src":"7307:174:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2268,"nodeType":"Block","src":"7788:977:13","statements":[{"assignments":[2175],"declarations":[{"constant":false,"id":2175,"mutability":"mutable","name":"allocation","nameLocation":"7817:10:13","nodeType":"VariableDeclaration","scope":2268,"src":"7798:29:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation"},"typeName":{"id":2174,"nodeType":"UserDefinedTypeName","pathNode":{"id":2173,"name":"Allocation","nodeType":"IdentifierPath","referencedDeclaration":3107,"src":"7798:10:13"},"referencedDeclaration":3107,"src":"7798:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation"}},"visibility":"internal"}],"id":2179,"initialValue":{"baseExpression":{"id":2176,"name":"allocations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"7830:11:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Allocation_$3107_storage_$","typeString":"mapping(address => struct IStaking.Allocation storage ref)"}},"id":2178,"indexExpression":{"id":2177,"name":"_escrowAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"7842:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7830:27:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage","typeString":"struct IStaking.Allocation storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7798:59:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2180,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"7872:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation storage pointer"}},"id":2181,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"staker","nodeType":"MemberAccess","referencedDeclaration":3100,"src":"7872:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7901:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7893:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2182,"name":"address","nodeType":"ElementaryTypeName","src":"7893:7:13","typeDescriptions":{}}},"id":2185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7893:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7872:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2191,"nodeType":"IfStatement","src":"7868:89:13","trueBody":{"id":2190,"nodeType":"Block","src":"7905:52:13","statements":[{"expression":{"expression":{"id":2187,"name":"AllocationState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"7926:15:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AllocationState_$3093_$","typeString":"type(enum IStaking.AllocationState)"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Null","nodeType":"MemberAccess","referencedDeclaration":3088,"src":"7926:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_AllocationState_$3093","typeString":"enum IStaking.AllocationState"}},"functionReturnParameters":2172,"id":2189,"nodeType":"Return","src":"7919:27:13"}]}},{"assignments":[2194],"declarations":[{"constant":false,"id":2194,"mutability":"mutable","name":"escrow","nameLocation":"7975:6:13","nodeType":"VariableDeclaration","scope":2268,"src":"7967:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrow_$3044","typeString":"contract IEscrow"},"typeName":{"id":2193,"nodeType":"UserDefinedTypeName","pathNode":{"id":2192,"name":"IEscrow","nodeType":"IdentifierPath","referencedDeclaration":3044,"src":"7967:7:13"},"referencedDeclaration":3044,"src":"7967:7:13","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrow_$3044","typeString":"contract IEscrow"}},"visibility":"internal"}],"id":2198,"initialValue":{"arguments":[{"id":2196,"name":"_escrowAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"7992:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2195,"name":"IEscrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"7984:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IEscrow_$3044_$","typeString":"type(contract IEscrow)"}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7984:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEscrow_$3044","typeString":"contract IEscrow"}},"nodeType":"VariableDeclarationStatement","src":"7967:40:13"},{"assignments":[2203],"declarations":[{"constant":false,"id":2203,"mutability":"mutable","name":"escrowStatus","nameLocation":"8040:12:13","nodeType":"VariableDeclaration","scope":2268,"src":"8017:35:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_EscrowStatuses_$2979","typeString":"enum IEscrow.EscrowStatuses"},"typeName":{"id":2202,"nodeType":"UserDefinedTypeName","pathNode":{"id":2201,"name":"IEscrow.EscrowStatuses","nodeType":"IdentifierPath","referencedDeclaration":2979,"src":"8017:22:13"},"referencedDeclaration":2979,"src":"8017:22:13","typeDescriptions":{"typeIdentifier":"t_enum$_EscrowStatuses_$2979","typeString":"enum IEscrow.EscrowStatuses"}},"visibility":"internal"}],"id":2207,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2204,"name":"escrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"8055:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrow_$3044","typeString":"contract IEscrow"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2985,"src":"8055:13:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_enum$_EscrowStatuses_$2979_$","typeString":"function () view external returns (enum IEscrow.EscrowStatuses)"}},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8055:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_EscrowStatuses_$2979","typeString":"enum IEscrow.EscrowStatuses"}},"nodeType":"VariableDeclarationStatement","src":"8017:53:13"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2208,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"8098:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation storage pointer"}},"id":2209,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"createdAt","nodeType":"MemberAccess","referencedDeclaration":3104,"src":"8098:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8122:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8098:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2212,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"8139:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation storage pointer"}},"id":2213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokens","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"8139:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8159:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8139:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8098:62:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_EscrowStatuses_$2979","typeString":"enum IEscrow.EscrowStatuses"},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2217,"name":"escrowStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"8176:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_EscrowStatuses_$2979","typeString":"enum IEscrow.EscrowStatuses"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":2218,"name":"IEscrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"8192:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IEscrow_$3044_$","typeString":"type(contract IEscrow)"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"EscrowStatuses","nodeType":"MemberAccess","referencedDeclaration":2979,"src":"8192:22:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_EscrowStatuses_$2979_$","typeString":"type(enum IEscrow.EscrowStatuses)"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Pending","nodeType":"MemberAccess","referencedDeclaration":2974,"src":"8192:30:13","typeDescriptions":{"typeIdentifier":"t_enum$_EscrowStatuses_$2979","typeString":"enum IEscrow.EscrowStatuses"}},"src":"8176:46:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8098:124:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2227,"nodeType":"IfStatement","src":"8081:207:13","trueBody":{"id":2226,"nodeType":"Block","src":"8233:55:13","statements":[{"expression":{"expression":{"id":2223,"name":"AllocationState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"8254:15:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AllocationState_$3093_$","typeString":"type(enum IStaking.AllocationState)"}},"id":2224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Pending","nodeType":"MemberAccess","referencedDeclaration":3089,"src":"8254:23:13","typeDescriptions":{"typeIdentifier":"t_enum$_AllocationState_$3093","typeString":"enum IStaking.AllocationState"}},"functionReturnParameters":2172,"id":2225,"nodeType":"Return","src":"8247:30:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2228,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"8315:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation storage pointer"}},"id":2229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"closedAt","nodeType":"MemberAccess","referencedDeclaration":3106,"src":"8315:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8338:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8315:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_EscrowStatuses_$2979","typeString":"enum IEscrow.EscrowStatuses"},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2232,"name":"escrowStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"8355:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_EscrowStatuses_$2979","typeString":"enum IEscrow.EscrowStatuses"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":2233,"name":"IEscrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"8371:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IEscrow_$3044_$","typeString":"type(contract IEscrow)"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"EscrowStatuses","nodeType":"MemberAccess","referencedDeclaration":2979,"src":"8371:22:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_EscrowStatuses_$2979_$","typeString":"type(enum IEscrow.EscrowStatuses)"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Launched","nodeType":"MemberAccess","referencedDeclaration":2973,"src":"8371:31:13","typeDescriptions":{"typeIdentifier":"t_enum$_EscrowStatuses_$2979","typeString":"enum IEscrow.EscrowStatuses"}},"src":"8355:47:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8315:87:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2242,"nodeType":"IfStatement","src":"8298:169:13","trueBody":{"id":2241,"nodeType":"Block","src":"8413:54:13","statements":[{"expression":{"expression":{"id":2238,"name":"AllocationState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"8434:15:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AllocationState_$3093_$","typeString":"type(enum IStaking.AllocationState)"}},"id":2239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":3090,"src":"8434:22:13","typeDescriptions":{"typeIdentifier":"t_enum$_AllocationState_$3093","typeString":"enum IStaking.AllocationState"}},"functionReturnParameters":2172,"id":2240,"nodeType":"Return","src":"8427:29:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2243,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"8494:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation storage pointer"}},"id":2244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"closedAt","nodeType":"MemberAccess","referencedDeclaration":3106,"src":"8494:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8517:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8494:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_EscrowStatuses_$2979","typeString":"enum IEscrow.EscrowStatuses"},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2247,"name":"escrowStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"8535:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_EscrowStatuses_$2979","typeString":"enum IEscrow.EscrowStatuses"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":2248,"name":"IEscrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"8551:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IEscrow_$3044_$","typeString":"type(contract IEscrow)"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"EscrowStatuses","nodeType":"MemberAccess","referencedDeclaration":2979,"src":"8551:22:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_EscrowStatuses_$2979_$","typeString":"type(enum IEscrow.EscrowStatuses)"}},"id":2250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Complete","nodeType":"MemberAccess","referencedDeclaration":2977,"src":"8551:31:13","typeDescriptions":{"typeIdentifier":"t_enum$_EscrowStatuses_$2979","typeString":"enum IEscrow.EscrowStatuses"}},"src":"8535:47:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_EscrowStatuses_$2979","typeString":"enum IEscrow.EscrowStatuses"},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2252,"name":"escrowStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"8602:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_EscrowStatuses_$2979","typeString":"enum IEscrow.EscrowStatuses"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":2253,"name":"IEscrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"8618:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IEscrow_$3044_$","typeString":"type(contract IEscrow)"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"EscrowStatuses","nodeType":"MemberAccess","referencedDeclaration":2979,"src":"8618:22:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_EscrowStatuses_$2979_$","typeString":"type(enum IEscrow.EscrowStatuses)"}},"id":2255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Cancelled","nodeType":"MemberAccess","referencedDeclaration":2978,"src":"8618:32:13","typeDescriptions":{"typeIdentifier":"t_enum$_EscrowStatuses_$2979","typeString":"enum IEscrow.EscrowStatuses"}},"src":"8602:48:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8535:115:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2258,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8534:117:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8494:157:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2264,"nodeType":"IfStatement","src":"8477:242:13","trueBody":{"id":2263,"nodeType":"Block","src":"8662:57:13","statements":[{"expression":{"expression":{"id":2260,"name":"AllocationState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"8683:15:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AllocationState_$3093_$","typeString":"type(enum IStaking.AllocationState)"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Completed","nodeType":"MemberAccess","referencedDeclaration":3092,"src":"8683:25:13","typeDescriptions":{"typeIdentifier":"t_enum$_AllocationState_$3093","typeString":"enum IStaking.AllocationState"}},"functionReturnParameters":2172,"id":2262,"nodeType":"Return","src":"8676:32:13"}]}},{"expression":{"expression":{"id":2265,"name":"AllocationState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"8736:15:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AllocationState_$3093_$","typeString":"type(enum IStaking.AllocationState)"}},"id":2266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Closed","nodeType":"MemberAccess","referencedDeclaration":3091,"src":"8736:22:13","typeDescriptions":{"typeIdentifier":"t_enum$_AllocationState_$3093","typeString":"enum IStaking.AllocationState"}},"functionReturnParameters":2172,"id":2267,"nodeType":"Return","src":"8729:29:13"}]},"documentation":{"id":2165,"nodeType":"StructuredDocumentation","src":"7487:190:13","text":" @dev Return the current state of an allocation, partially depends on job status\n @param _escrowAddress Job identifier (Escrow address)\n @return AllocationState"},"id":2269,"implemented":true,"kind":"function","modifiers":[],"name":"_getAllocationState","nameLocation":"7691:19:13","nodeType":"FunctionDefinition","parameters":{"id":2168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2167,"mutability":"mutable","name":"_escrowAddress","nameLocation":"7728:14:13","nodeType":"VariableDeclaration","scope":2269,"src":"7720:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2166,"name":"address","nodeType":"ElementaryTypeName","src":"7720:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7710:38:13"},"returnParameters":{"id":2172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2269,"src":"7771:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AllocationState_$3093","typeString":"enum IStaking.AllocationState"},"typeName":{"id":2170,"nodeType":"UserDefinedTypeName","pathNode":{"id":2169,"name":"AllocationState","nodeType":"IdentifierPath","referencedDeclaration":3093,"src":"7771:15:13"},"referencedDeclaration":3093,"src":"7771:15:13","typeDescriptions":{"typeIdentifier":"t_enum$_AllocationState_$3093","typeString":"enum IStaking.AllocationState"}},"visibility":"internal"}],"src":"7770:17:13"},"scope":2970,"src":"7682:1083:13","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[3171],"body":{"id":2283,"nodeType":"Block","src":"9046:52:13","statements":[{"expression":{"expression":{"baseExpression":{"id":2278,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"9063:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$3329_storage_$","typeString":"mapping(address => struct Stakes.Staker storage ref)"}},"id":2280,"indexExpression":{"id":2279,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"9070:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9063:15:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage","typeString":"struct Stakes.Staker storage ref"}},"id":2281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensStaked","nodeType":"MemberAccess","referencedDeclaration":3322,"src":"9063:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2277,"id":2282,"nodeType":"Return","src":"9056:35:13"}]},"documentation":{"id":2270,"nodeType":"StructuredDocumentation","src":"8771:173:13","text":" @dev Get the total amount of tokens staked by the staker.\n @param _staker Address of the staker\n @return Amount of tokens staked by the staker"},"functionSelector":"63c28db1","id":2284,"implemented":true,"kind":"function","modifiers":[],"name":"getStakedTokens","nameLocation":"8958:15:13","nodeType":"FunctionDefinition","overrides":{"id":2274,"nodeType":"OverrideSpecifier","overrides":[],"src":"9019:8:13"},"parameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2272,"mutability":"mutable","name":"_staker","nameLocation":"8991:7:13","nodeType":"VariableDeclaration","scope":2284,"src":"8983:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2271,"name":"address","nodeType":"ElementaryTypeName","src":"8983:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8973:31:13"},"returnParameters":{"id":2277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2284,"src":"9037:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2275,"name":"uint256","nodeType":"ElementaryTypeName","src":"9037:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9036:9:13"},"scope":2970,"src":"8949:149:13","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[3179],"body":{"id":2298,"nodeType":"Block","src":"9348:39:13","statements":[{"expression":{"baseExpression":{"id":2294,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"9365:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$3329_storage_$","typeString":"mapping(address => struct Stakes.Staker storage ref)"}},"id":2296,"indexExpression":{"id":2295,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"9372:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9365:15:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage","typeString":"struct Stakes.Staker storage ref"}},"functionReturnParameters":2293,"id":2297,"nodeType":"Return","src":"9358:22:13"}]},"documentation":{"id":2285,"nodeType":"StructuredDocumentation","src":"9104:135:13","text":" @dev Get staker data by the staker address.\n @param _staker Address of the staker\n @return Staker's data"},"functionSelector":"a23c44b1","id":2299,"implemented":true,"kind":"function","modifiers":[],"name":"getStaker","nameLocation":"9253:9:13","nodeType":"FunctionDefinition","overrides":{"id":2289,"nodeType":"OverrideSpecifier","overrides":[],"src":"9308:8:13"},"parameters":{"id":2288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2287,"mutability":"mutable","name":"_staker","nameLocation":"9280:7:13","nodeType":"VariableDeclaration","scope":2299,"src":"9272:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2286,"name":"address","nodeType":"ElementaryTypeName","src":"9272:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9262:31:13"},"returnParameters":{"id":2293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2299,"src":"9326:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_memory_ptr","typeString":"struct Stakes.Staker"},"typeName":{"id":2291,"nodeType":"UserDefinedTypeName","pathNode":{"id":2290,"name":"Stakes.Staker","nodeType":"IdentifierPath","referencedDeclaration":3329,"src":"9326:13:13"},"referencedDeclaration":3329,"src":"9326:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"}},"visibility":"internal"}],"src":"9325:22:13"},"scope":2970,"src":"9244:143:13","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[3225],"body":{"id":2380,"nodeType":"Block","src":"9637:475:13","statements":[{"assignments":[2315],"declarations":[{"constant":false,"id":2315,"mutability":"mutable","name":"_stakerAddresses","nameLocation":"9664:16:13","nodeType":"VariableDeclaration","scope":2380,"src":"9647:33:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2313,"name":"address","nodeType":"ElementaryTypeName","src":"9647:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2314,"nodeType":"ArrayTypeName","src":"9647:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2317,"initialValue":{"id":2316,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"9683:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9647:43:13"},{"assignments":[2319],"declarations":[{"constant":false,"id":2319,"mutability":"mutable","name":"_stakersCount","nameLocation":"9708:13:13","nodeType":"VariableDeclaration","scope":2380,"src":"9700:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2318,"name":"uint256","nodeType":"ElementaryTypeName","src":"9700:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2322,"initialValue":{"expression":{"id":2320,"name":"_stakerAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"9724:16:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9724:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9700:47:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2323,"name":"_stakersCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"9762:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9779:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9762:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2340,"nodeType":"IfStatement","src":"9758:98:13","trueBody":{"id":2339,"nodeType":"Block","src":"9782:74:13","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9818:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9804:13:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":2326,"name":"address","nodeType":"ElementaryTypeName","src":"9808:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2327,"nodeType":"ArrayTypeName","src":"9808:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":2330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9804:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"arguments":[{"hexValue":"30","id":2335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9842:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9822:19:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Staker_$3329_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct Stakes.Staker memory[] memory)"},"typeName":{"baseType":{"id":2332,"nodeType":"UserDefinedTypeName","pathNode":{"id":2331,"name":"Stakes.Staker","nodeType":"IdentifierPath","referencedDeclaration":3329,"src":"9826:13:13"},"referencedDeclaration":3329,"src":"9826:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"}},"id":2333,"nodeType":"ArrayTypeName","src":"9826:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Staker_$3329_storage_$dyn_storage_ptr","typeString":"struct Stakes.Staker[]"}}},"id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9822:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Staker_$3329_memory_ptr_$dyn_memory_ptr","typeString":"struct Stakes.Staker memory[] memory"}}],"id":2337,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9803:42:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_struct$_Staker_$3329_memory_ptr_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,struct Stakes.Staker memory[] memory)"}},"functionReturnParameters":2310,"id":2338,"nodeType":"Return","src":"9796:49:13"}]}},{"assignments":[2346],"declarations":[{"constant":false,"id":2346,"mutability":"mutable","name":"_stakers","nameLocation":"9889:8:13","nodeType":"VariableDeclaration","scope":2380,"src":"9866:31:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Staker_$3329_memory_ptr_$dyn_memory_ptr","typeString":"struct Stakes.Staker[]"},"typeName":{"baseType":{"id":2344,"nodeType":"UserDefinedTypeName","pathNode":{"id":2343,"name":"Stakes.Staker","nodeType":"IdentifierPath","referencedDeclaration":3329,"src":"9866:13:13"},"referencedDeclaration":3329,"src":"9866:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"}},"id":2345,"nodeType":"ArrayTypeName","src":"9866:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Staker_$3329_storage_$dyn_storage_ptr","typeString":"struct Stakes.Staker[]"}},"visibility":"internal"}],"id":2353,"initialValue":{"arguments":[{"id":2351,"name":"_stakersCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"9920:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9900:19:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Staker_$3329_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct Stakes.Staker memory[] memory)"},"typeName":{"baseType":{"id":2348,"nodeType":"UserDefinedTypeName","pathNode":{"id":2347,"name":"Stakes.Staker","nodeType":"IdentifierPath","referencedDeclaration":3329,"src":"9904:13:13"},"referencedDeclaration":3329,"src":"9904:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"}},"id":2349,"nodeType":"ArrayTypeName","src":"9904:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Staker_$3329_storage_$dyn_storage_ptr","typeString":"struct Stakes.Staker[]"}}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9900:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Staker_$3329_memory_ptr_$dyn_memory_ptr","typeString":"struct Stakes.Staker memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9866:68:13"},{"body":{"id":2374,"nodeType":"Block","src":"9992:68:13","statements":[{"expression":{"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2364,"name":"_stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"10006:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Staker_$3329_memory_ptr_$dyn_memory_ptr","typeString":"struct Stakes.Staker memory[] memory"}},"id":2366,"indexExpression":{"id":2365,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"10015:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_memory_ptr","typeString":"struct Stakes.Staker memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2367,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"10021:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$3329_storage_$","typeString":"mapping(address => struct Stakes.Staker storage ref)"}},"id":2371,"indexExpression":{"baseExpression":{"id":2368,"name":"_stakerAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"10028:16:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2370,"indexExpression":{"id":2369,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"10045:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10028:20:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10021:28:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage","typeString":"struct Stakes.Staker storage ref"}},"src":"10006:43:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_memory_ptr","typeString":"struct Stakes.Staker memory"}},"id":2373,"nodeType":"ExpressionStatement","src":"10006:43:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2358,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"9966:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2359,"name":"_stakersCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"9971:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9966:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2375,"initializationExpression":{"assignments":[2355],"declarations":[{"constant":false,"id":2355,"mutability":"mutable","name":"_i","nameLocation":"9958:2:13","nodeType":"VariableDeclaration","scope":2375,"src":"9950:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2354,"name":"uint256","nodeType":"ElementaryTypeName","src":"9950:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2357,"initialValue":{"hexValue":"30","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9963:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9950:14:13"},"loopExpression":{"expression":{"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9986:4:13","subExpression":{"id":2361,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"9986:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2363,"nodeType":"ExpressionStatement","src":"9986:4:13"},"nodeType":"ForStatement","src":"9945:115:13"},{"expression":{"components":[{"id":2376,"name":"_stakerAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"10078:16:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":2377,"name":"_stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"10096:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Staker_$3329_memory_ptr_$dyn_memory_ptr","typeString":"struct Stakes.Staker memory[] memory"}}],"id":2378,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10077:28:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_struct$_Staker_$3329_memory_ptr_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,struct Stakes.Staker memory[] memory)"}},"functionReturnParameters":2310,"id":2379,"nodeType":"Return","src":"10070:35:13"}]},"documentation":{"id":2300,"nodeType":"StructuredDocumentation","src":"9393:101:13","text":" @dev Get list of stakers\n @return List of staker's addresses, and stake data"},"functionSelector":"70b97cb5","id":2381,"implemented":true,"kind":"function","modifiers":[],"name":"getListOfStakers","nameLocation":"9508:16:13","nodeType":"FunctionDefinition","overrides":{"id":2302,"nodeType":"OverrideSpecifier","overrides":[],"src":"9565:8:13"},"parameters":{"id":2301,"nodeType":"ParameterList","parameters":[],"src":"9524:2:13"},"returnParameters":{"id":2310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2381,"src":"9591:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2303,"name":"address","nodeType":"ElementaryTypeName","src":"9591:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2304,"nodeType":"ArrayTypeName","src":"9591:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2381,"src":"9609:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Staker_$3329_memory_ptr_$dyn_memory_ptr","typeString":"struct Stakes.Staker[]"},"typeName":{"baseType":{"id":2307,"nodeType":"UserDefinedTypeName","pathNode":{"id":2306,"name":"Stakes.Staker","nodeType":"IdentifierPath","referencedDeclaration":3329,"src":"9609:13:13"},"referencedDeclaration":3329,"src":"9609:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"}},"id":2308,"nodeType":"ArrayTypeName","src":"9609:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Staker_$3329_storage_$dyn_storage_ptr","typeString":"struct Stakes.Staker[]"}},"visibility":"internal"}],"src":"9590:42:13"},"scope":2970,"src":"9499:613:13","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[3184],"body":{"id":2471,"nodeType":"Block","src":"10280:618:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2389,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"10298:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10308:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10298:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d757374206265206120706f736974697665206e756d626572","id":2392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10311:27:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_6708eebd660913c2744ac9640b2ee73a7eba7a7981d51b61a65bb76e5a97917e","typeString":"literal_string \"Must be a positive number\""},"value":"Must be a positive number"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6708eebd660913c2744ac9640b2ee73a7eba7a7981d51b61a65bb76e5a97917e","typeString":"literal_string \"Must be a positive number\""}],"id":2388,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10290:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10290:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2394,"nodeType":"ExpressionStatement","src":"10290:49:13"},{"assignments":[2399],"declarations":[{"constant":false,"id":2399,"mutability":"mutable","name":"staker","nameLocation":"10371:6:13","nodeType":"VariableDeclaration","scope":2471,"src":"10350:27:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_memory_ptr","typeString":"struct Stakes.Staker"},"typeName":{"id":2398,"nodeType":"UserDefinedTypeName","pathNode":{"id":2397,"name":"Stakes.Staker","nodeType":"IdentifierPath","referencedDeclaration":3329,"src":"10350:13:13"},"referencedDeclaration":3329,"src":"10350:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"}},"visibility":"internal"}],"id":2404,"initialValue":{"baseExpression":{"id":2400,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"10380:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$3329_storage_$","typeString":"mapping(address => struct Stakes.Staker storage ref)"}},"id":2403,"indexExpression":{"expression":{"id":2401,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10387:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10387:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10380:18:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage","typeString":"struct Stakes.Staker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10350:48:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2410,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"10460:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2406,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"10429:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_memory_ptr","typeString":"struct Stakes.Staker memory"}},"id":2407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensSecureStake","nodeType":"MemberAccess","referencedDeclaration":3587,"src":"10429:24:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Staker_$3329_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Staker_$3329_memory_ptr_$","typeString":"function (struct Stakes.Staker memory) pure returns (uint256)"}},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10429:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":4085,"src":"10429:30:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10429:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2412,"name":"minimumStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"10472:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10429:55:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c207374616b652069732062656c6f7720746865206d696e696d756d207468726573686f6c64","id":2414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10498:44:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b37236e58a99b458bd4a777252a763bc4ff28afa484568ab09417b9f097852c","typeString":"literal_string \"Total stake is below the minimum threshold\""},"value":"Total stake is below the minimum threshold"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b37236e58a99b458bd4a777252a763bc4ff28afa484568ab09417b9f097852c","typeString":"literal_string \"Total stake is below the minimum threshold\""}],"id":2405,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10408:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10408:144:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2416,"nodeType":"ExpressionStatement","src":"10408:144:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2417,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"10567:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_memory_ptr","typeString":"struct Stakes.Staker memory"}},"id":2418,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensStaked","nodeType":"MemberAccess","referencedDeclaration":3322,"src":"10567:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10590:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10567:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2446,"nodeType":"IfStatement","src":"10563:168:13","trueBody":{"id":2445,"nodeType":"Block","src":"10593:138:13","statements":[{"expression":{"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2421,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"10607:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_memory_ptr","typeString":"struct Stakes.Staker memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":2424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10633:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10636:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10639:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":2422,"name":"Stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"10616:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Stakes_$3615_$","typeString":"type(library Stakes)"}},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Staker","nodeType":"MemberAccess","referencedDeclaration":3329,"src":"10616:13:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Staker_$3329_storage_ptr_$","typeString":"type(struct Stakes.Staker storage pointer)"}},"id":2428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10616:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_memory_ptr","typeString":"struct Stakes.Staker memory"}},"src":"10607:34:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_memory_ptr","typeString":"struct Stakes.Staker memory"}},"id":2430,"nodeType":"ExpressionStatement","src":"10607:34:13"},{"expression":{"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2431,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"10655:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$3329_storage_$","typeString":"mapping(address => struct Stakes.Staker storage ref)"}},"id":2434,"indexExpression":{"expression":{"id":2432,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10662:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10662:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10655:18:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage","typeString":"struct Stakes.Staker storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2435,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"10676:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_memory_ptr","typeString":"struct Stakes.Staker memory"}},"src":"10655:27:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage","typeString":"struct Stakes.Staker storage ref"}},"id":2437,"nodeType":"ExpressionStatement","src":"10655:27:13"},{"expression":{"arguments":[{"expression":{"id":2441,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10709:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10709:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2438,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"10696:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"10696:12:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10696:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2444,"nodeType":"ExpressionStatement","src":"10696:24:13"}]}},{"expression":{"arguments":[{"expression":{"id":2448,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10759:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10759:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2452,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10779:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Staking_$2970","typeString":"contract Staking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Staking_$2970","typeString":"contract Staking"}],"id":2451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10771:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2450,"name":"address","nodeType":"ElementaryTypeName","src":"10771:7:13","typeDescriptions":{}}},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10771:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2454,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"10786:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2447,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"10741:17:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10741:53:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2456,"nodeType":"ExpressionStatement","src":"10741:53:13"},{"expression":{"arguments":[{"id":2462,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"10832:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":2457,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"10805:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$3329_storage_$","typeString":"mapping(address => struct Stakes.Staker storage ref)"}},"id":2460,"indexExpression":{"expression":{"id":2458,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10812:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10812:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10805:18:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage","typeString":"struct Stakes.Staker storage ref"}},"id":2461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3349,"src":"10805:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Staker_$3329_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_Staker_$3329_storage_ptr_$","typeString":"function (struct Stakes.Staker storage pointer,uint256)"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10805:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2464,"nodeType":"ExpressionStatement","src":"10805:35:13"},{"eventCall":{"arguments":[{"expression":{"id":2466,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10871:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10871:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2468,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"10883:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2465,"name":"StakeDeposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"10856:14:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10856:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2470,"nodeType":"EmitStatement","src":"10851:40:13"}]},"documentation":{"id":2382,"nodeType":"StructuredDocumentation","src":"10118:107:13","text":" @dev Deposit tokens on the staker stake.\n @param _tokens Amount of tokens to stake"},"functionSelector":"a694fc3a","id":2472,"implemented":true,"kind":"function","modifiers":[],"name":"stake","nameLocation":"10239:5:13","nodeType":"FunctionDefinition","overrides":{"id":2386,"nodeType":"OverrideSpecifier","overrides":[],"src":"10271:8:13"},"parameters":{"id":2385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2384,"mutability":"mutable","name":"_tokens","nameLocation":"10253:7:13","nodeType":"VariableDeclaration","scope":2472,"src":"10245:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2383,"name":"uint256","nodeType":"ElementaryTypeName","src":"10245:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10244:17:13"},"returnParameters":{"id":2387,"nodeType":"ParameterList","parameters":[],"src":"10280:0:13"},"scope":2970,"src":"10230:668:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3189],"body":{"id":2557,"nodeType":"Block","src":"11109:784:13","statements":[{"assignments":[2483],"declarations":[{"constant":false,"id":2483,"mutability":"mutable","name":"staker","nameLocation":"11141:6:13","nodeType":"VariableDeclaration","scope":2557,"src":"11119:28:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"},"typeName":{"id":2482,"nodeType":"UserDefinedTypeName","pathNode":{"id":2481,"name":"Stakes.Staker","nodeType":"IdentifierPath","referencedDeclaration":3329,"src":"11119:13:13"},"referencedDeclaration":3329,"src":"11119:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"}},"visibility":"internal"}],"id":2488,"initialValue":{"baseExpression":{"id":2484,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"11150:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$3329_storage_$","typeString":"mapping(address => struct Stakes.Staker storage ref)"}},"id":2487,"indexExpression":{"expression":{"id":2485,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11157:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"11157:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11150:18:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage","typeString":"struct Stakes.Staker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11119:49:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2490,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"11187:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11197:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11187:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d757374206265206120706f736974697665206e756d626572","id":2493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11200:27:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_6708eebd660913c2744ac9640b2ee73a7eba7a7981d51b61a65bb76e5a97917e","typeString":"literal_string \"Must be a positive number\""},"value":"Must be a positive number"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6708eebd660913c2744ac9640b2ee73a7eba7a7981d51b61a65bb76e5a97917e","typeString":"literal_string \"Must be a positive number\""}],"id":2489,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11179:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11179:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2495,"nodeType":"ExpressionStatement","src":"11179:49:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2497,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"11259:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":2498,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensAvailable","nodeType":"MemberAccess","referencedDeclaration":3553,"src":"11259:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Staker_$3329_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Staker_$3329_memory_ptr_$","typeString":"function (struct Stakes.Staker memory) pure returns (uint256)"}},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11259:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2500,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"11287:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11259:35:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420616d6f756e7420746f20756e7374616b65","id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11308:32:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5da6c83ac3c3587989369f838fb7a279aaeb0ca15689a96f1849c2d848f08856","typeString":"literal_string \"Insufficient amount to unstake\""},"value":"Insufficient amount to unstake"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5da6c83ac3c3587989369f838fb7a279aaeb0ca15689a96f1849c2d848f08856","typeString":"literal_string \"Insufficient amount to unstake\""}],"id":2496,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11238:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11238:112:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2504,"nodeType":"ExpressionStatement","src":"11238:112:13"},{"assignments":[2506],"declarations":[{"constant":false,"id":2506,"mutability":"mutable","name":"newStake","nameLocation":"11369:8:13","nodeType":"VariableDeclaration","scope":2557,"src":"11361:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2505,"name":"uint256","nodeType":"ElementaryTypeName","src":"11361:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2513,"initialValue":{"arguments":[{"id":2511,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"11411:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2507,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"11380:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":2508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensSecureStake","nodeType":"MemberAccess","referencedDeclaration":3587,"src":"11380:24:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Staker_$3329_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Staker_$3329_memory_ptr_$","typeString":"function (struct Stakes.Staker memory) pure returns (uint256)"}},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11380:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":4102,"src":"11380:30:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11380:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11361:58:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2515,"name":"newStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"11450:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11462:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11450:13:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2518,"name":"newStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"11467:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2519,"name":"minimumStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"11479:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11467:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11450:41:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c207374616b652069732062656c6f7720746865206d696e696d756d207468726573686f6c64","id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11505:44:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b37236e58a99b458bd4a777252a763bc4ff28afa484568ab09417b9f097852c","typeString":"literal_string \"Total stake is below the minimum threshold\""},"value":"Total stake is below the minimum threshold"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b37236e58a99b458bd4a777252a763bc4ff28afa484568ab09417b9f097852c","typeString":"literal_string \"Total stake is below the minimum threshold\""}],"id":2514,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11429:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11429:130:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2524,"nodeType":"ExpressionStatement","src":"11429:130:13"},{"assignments":[2526],"declarations":[{"constant":false,"id":2526,"mutability":"mutable","name":"tokensToWithdraw","nameLocation":"11578:16:13","nodeType":"VariableDeclaration","scope":2557,"src":"11570:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2525,"name":"uint256","nodeType":"ElementaryTypeName","src":"11570:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2530,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2527,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"11597:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":2528,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensWithdrawable","nodeType":"MemberAccess","referencedDeclaration":3614,"src":"11597:25:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Staker_$3329_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Staker_$3329_memory_ptr_$","typeString":"function (struct Stakes.Staker memory) view returns (uint256)"}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11597:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11570:54:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2531,"name":"tokensToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"11638:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11657:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11638:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2540,"nodeType":"IfStatement","src":"11634:72:13","trueBody":{"id":2539,"nodeType":"Block","src":"11660:46:13","statements":[{"expression":{"arguments":[{"expression":{"id":2535,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11684:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"11684:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2534,"name":"_withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"11674:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11674:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2538,"nodeType":"ExpressionStatement","src":"11674:21:13"}]}},{"expression":{"arguments":[{"id":2544,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"11734:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2545,"name":"lockPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"11743:10:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":2541,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"11716:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":2543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lockTokens","nodeType":"MemberAccess","referencedDeclaration":3468,"src":"11716:17:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Staker_$3329_storage_ptr_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_Staker_$3329_storage_ptr_$","typeString":"function (struct Stakes.Staker storage pointer,uint256,uint256)"}},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11716:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2547,"nodeType":"ExpressionStatement","src":"11716:38:13"},{"eventCall":{"arguments":[{"expression":{"id":2549,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11795:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"11795:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2551,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"11819:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":2552,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensLocked","nodeType":"MemberAccess","referencedDeclaration":3326,"src":"11819:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2553,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"11852:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":2554,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensLockedUntil","nodeType":"MemberAccess","referencedDeclaration":3328,"src":"11852:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2548,"name":"StakeLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"11770:11:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11770:116:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2556,"nodeType":"EmitStatement","src":"11765:121:13"}]},"documentation":{"id":2473,"nodeType":"StructuredDocumentation","src":"10904:148:13","text":" @dev Unstake tokens from the staker stake, lock them until lock period expires.\n @param _tokens Amount of tokens to unstake"},"functionSelector":"2e17de78","id":2558,"implemented":true,"kind":"function","modifiers":[],"name":"unstake","nameLocation":"11066:7:13","nodeType":"FunctionDefinition","overrides":{"id":2477,"nodeType":"OverrideSpecifier","overrides":[],"src":"11100:8:13"},"parameters":{"id":2476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2475,"mutability":"mutable","name":"_tokens","nameLocation":"11082:7:13","nodeType":"VariableDeclaration","scope":2558,"src":"11074:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2474,"name":"uint256","nodeType":"ElementaryTypeName","src":"11074:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11073:17:13"},"returnParameters":{"id":2478,"nodeType":"ParameterList","parameters":[],"src":"11109:0:13"},"scope":2970,"src":"11057:836:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3192],"body":{"id":2568,"nodeType":"Block","src":"12017:38:13","statements":[{"expression":{"arguments":[{"expression":{"id":2564,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12037:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"12037:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2563,"name":"_withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"12027:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12027:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2567,"nodeType":"ExpressionStatement","src":"12027:21:13"}]},"documentation":{"id":2559,"nodeType":"StructuredDocumentation","src":"11899:75:13","text":" @dev Withdraw staker tokens based on the locking period."},"functionSelector":"3ccfd60b","id":2569,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"11988:8:13","nodeType":"FunctionDefinition","overrides":{"id":2561,"nodeType":"OverrideSpecifier","overrides":[],"src":"12008:8:13"},"parameters":{"id":2560,"nodeType":"ParameterList","parameters":[],"src":"11996:2:13"},"returnParameters":{"id":2562,"nodeType":"ParameterList","parameters":[],"src":"12017:0:13"},"scope":2970,"src":"11979:76:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2600,"nodeType":"Block","src":"12252:305:13","statements":[{"assignments":[2576],"declarations":[{"constant":false,"id":2576,"mutability":"mutable","name":"tokensToWithdraw","nameLocation":"12270:16:13","nodeType":"VariableDeclaration","scope":2600,"src":"12262:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2575,"name":"uint256","nodeType":"ElementaryTypeName","src":"12262:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2582,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":2577,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"12289:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$3329_storage_$","typeString":"mapping(address => struct Stakes.Staker storage ref)"}},"id":2579,"indexExpression":{"id":2578,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"12296:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12289:15:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage","typeString":"struct Stakes.Staker storage ref"}},"id":2580,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"withdrawTokens","nodeType":"MemberAccess","referencedDeclaration":3535,"src":"12289:30:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Staker_$3329_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Staker_$3329_storage_ptr_$","typeString":"function (struct Stakes.Staker storage pointer) returns (uint256)"}},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12289:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12262:59:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2584,"name":"tokensToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"12352:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12371:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12352:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b6520686173206e6f20617661696c61626c6520746f6b656e7320666f72207769746864726177616c","id":2587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12386:46:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e39312e5e25a8e9d8439074a2fe4bd1f738d2fd210e22911b9d228ea881b2d8","typeString":"literal_string \"Stake has no available tokens for withdrawal\""},"value":"Stake has no available tokens for withdrawal"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6e39312e5e25a8e9d8439074a2fe4bd1f738d2fd210e22911b9d228ea881b2d8","typeString":"literal_string \"Stake has no available tokens for withdrawal\""}],"id":2583,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12331:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12331:111:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2589,"nodeType":"ExpressionStatement","src":"12331:111:13"},{"expression":{"arguments":[{"id":2591,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"12467:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2592,"name":"tokensToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"12476:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2590,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"12453:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12453:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2594,"nodeType":"ExpressionStatement","src":"12453:40:13"},{"eventCall":{"arguments":[{"id":2596,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"12524:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2597,"name":"tokensToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"12533:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2595,"name":"StakeWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"12509:14:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12509:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2599,"nodeType":"EmitStatement","src":"12504:46:13"}]},"documentation":{"id":2570,"nodeType":"StructuredDocumentation","src":"12061:142:13","text":" @dev Withdraw staker tokens once the lock period has passed.\n @param _staker Address of staker to withdraw funds from"},"id":2601,"implemented":true,"kind":"function","modifiers":[],"name":"_withdraw","nameLocation":"12217:9:13","nodeType":"FunctionDefinition","parameters":{"id":2573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2572,"mutability":"mutable","name":"_staker","nameLocation":"12235:7:13","nodeType":"VariableDeclaration","scope":2601,"src":"12227:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2571,"name":"address","nodeType":"ElementaryTypeName","src":"12227:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12226:17:13"},"returnParameters":{"id":2574,"nodeType":"ParameterList","parameters":[],"src":"12252:0:13"},"scope":2970,"src":"12208:349:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"baseFunctions":[3203],"body":{"id":2701,"nodeType":"Block","src":"12960:820:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2617,"name":"_escrowAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"12978:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13004:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12996:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2618,"name":"address","nodeType":"ElementaryTypeName","src":"12996:7:13","typeDescriptions":{}}},"id":2621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12996:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12978:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d75737420626520612076616c69642061646472657373","id":2623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13008:25:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_468519957235cef46f7c921ca2d833d91a40db6eb163f5e0db878d6b92517276","typeString":"literal_string \"Must be a valid address\""},"value":"Must be a valid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_468519957235cef46f7c921ca2d833d91a40db6eb163f5e0db878d6b92517276","typeString":"literal_string \"Must be a valid address\""}],"id":2616,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12970:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12970:64:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2625,"nodeType":"ExpressionStatement","src":"12970:64:13"},{"assignments":[2630],"declarations":[{"constant":false,"id":2630,"mutability":"mutable","name":"staker","nameLocation":"13067:6:13","nodeType":"VariableDeclaration","scope":2701,"src":"13045:28:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"},"typeName":{"id":2629,"nodeType":"UserDefinedTypeName","pathNode":{"id":2628,"name":"Stakes.Staker","nodeType":"IdentifierPath","referencedDeclaration":3329,"src":"13045:13:13"},"referencedDeclaration":3329,"src":"13045:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"}},"visibility":"internal"}],"id":2634,"initialValue":{"baseExpression":{"id":2631,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"13076:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$3329_storage_$","typeString":"mapping(address => struct Stakes.Staker storage ref)"}},"id":2633,"indexExpression":{"id":2632,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"13083:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13076:15:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage","typeString":"struct Stakes.Staker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13045:46:13"},{"assignments":[2637],"declarations":[{"constant":false,"id":2637,"mutability":"mutable","name":"allocation","nameLocation":"13121:10:13","nodeType":"VariableDeclaration","scope":2701,"src":"13102:29:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation"},"typeName":{"id":2636,"nodeType":"UserDefinedTypeName","pathNode":{"id":2635,"name":"Allocation","nodeType":"IdentifierPath","referencedDeclaration":3107,"src":"13102:10:13"},"referencedDeclaration":3107,"src":"13102:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation"}},"visibility":"internal"}],"id":2641,"initialValue":{"baseExpression":{"id":2638,"name":"allocations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"13134:11:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Allocation_$3107_storage_$","typeString":"mapping(address => struct IStaking.Allocation storage ref)"}},"id":2640,"indexExpression":{"id":2639,"name":"_escrowAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"13146:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13134:27:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage","typeString":"struct IStaking.Allocation storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13102:59:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2643,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"13180:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13180:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d757374206265206120706f736974697665206e756d626572","id":2646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13193:27:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_6708eebd660913c2744ac9640b2ee73a7eba7a7981d51b61a65bb76e5a97917e","typeString":"literal_string \"Must be a positive number\""},"value":"Must be a positive number"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6708eebd660913c2744ac9640b2ee73a7eba7a7981d51b61a65bb76e5a97917e","typeString":"literal_string \"Must be a positive number\""}],"id":2642,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13172:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13172:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2648,"nodeType":"ExpressionStatement","src":"13172:49:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2650,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"13253:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":2651,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"13264:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation storage pointer"}},"id":2652,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokens","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"13264:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13253:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536c61736820746f6b656e732065786365656420616c6c6f6361746564206f6e6573","id":2654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13295:36:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_39674e5f26f3c7c3c2658977ec6d321fccd1e26dd33c7a6e1977b8a6cd3c068f","typeString":"literal_string \"Slash tokens exceed allocated ones\""},"value":"Slash tokens exceed allocated ones"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_39674e5f26f3c7c3c2658977ec6d321fccd1e26dd33c7a6e1977b8a6cd3c068f","typeString":"literal_string \"Slash tokens exceed allocated ones\""}],"id":2649,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13232:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13232:109:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2656,"nodeType":"ExpressionStatement","src":"13232:109:13"},{"expression":{"arguments":[{"id":2660,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"13370:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2657,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"13352:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":2659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"unallocate","nodeType":"MemberAccess","referencedDeclaration":3409,"src":"13352:17:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Staker_$3329_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_Staker_$3329_storage_ptr_$","typeString":"function (struct Stakes.Staker storage pointer,uint256)"}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13352:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2662,"nodeType":"ExpressionStatement","src":"13352:26:13"},{"expression":{"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2663,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"13388:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation storage pointer"}},"id":2665,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tokens","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"13388:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2669,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"13430:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2666,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"13408:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation storage pointer"}},"id":2667,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokens","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"13408:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":4102,"src":"13408:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13408:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13388:50:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2672,"nodeType":"ExpressionStatement","src":"13388:50:13"},{"expression":{"arguments":[{"id":2676,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"13464:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2673,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"13449:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":2675,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"release","nodeType":"MemberAccess","referencedDeclaration":3369,"src":"13449:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Staker_$3329_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_Staker_$3329_storage_ptr_$","typeString":"function (struct Stakes.Staker storage pointer,uint256)"}},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13449:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2678,"nodeType":"ExpressionStatement","src":"13449:23:13"},{"expression":{"arguments":[{"id":2680,"name":"rewardPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"13497:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2681,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"13509:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2679,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"13483:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13483:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2683,"nodeType":"ExpressionStatement","src":"13483:34:13"},{"expression":{"arguments":[{"id":2688,"name":"_escrowAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"13613:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2689,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"13641:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2690,"name":"_slasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"13662:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2691,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"13684:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2685,"name":"rewardPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"13578:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2684,"name":"IRewardPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"13566:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRewardPool_$3084_$","typeString":"type(contract IRewardPool)"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13566:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRewardPool_$3084","typeString":"contract IRewardPool"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"addReward","nodeType":"MemberAccess","referencedDeclaration":3064,"src":"13566:33:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256) external"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13566:135:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2693,"nodeType":"ExpressionStatement","src":"13566:135:13"},{"eventCall":{"arguments":[{"id":2695,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"13730:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2696,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"13739:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2697,"name":"_escrowAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"13748:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2698,"name":"_slasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"13764:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2694,"name":"StakeSlashed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"13717:12:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (address,uint256,address,address)"}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13717:56:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2700,"nodeType":"EmitStatement","src":"13712:61:13"}]},"documentation":{"id":2602,"nodeType":"StructuredDocumentation","src":"12563:235:13","text":" @dev Slash the staker stake allocated to the escrow.\n @param _staker Address of staker to slash\n @param _escrowAddress Escrow address\n @param _tokens Amount of tokens to slash from the indexer stake"},"functionSelector":"3aa63c61","id":2702,"implemented":true,"kind":"function","modifiers":[{"id":2614,"kind":"modifierInvocation","modifierName":{"id":2613,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":46,"src":"12950:9:13"},"nodeType":"ModifierInvocation","src":"12950:9:13"}],"name":"slash","nameLocation":"12812:5:13","nodeType":"FunctionDefinition","overrides":{"id":2612,"nodeType":"OverrideSpecifier","overrides":[],"src":"12941:8:13"},"parameters":{"id":2611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2604,"mutability":"mutable","name":"_slasher","nameLocation":"12835:8:13","nodeType":"VariableDeclaration","scope":2702,"src":"12827:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2603,"name":"address","nodeType":"ElementaryTypeName","src":"12827:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2606,"mutability":"mutable","name":"_staker","nameLocation":"12861:7:13","nodeType":"VariableDeclaration","scope":2702,"src":"12853:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2605,"name":"address","nodeType":"ElementaryTypeName","src":"12853:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2608,"mutability":"mutable","name":"_escrowAddress","nameLocation":"12886:14:13","nodeType":"VariableDeclaration","scope":2702,"src":"12878:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2607,"name":"address","nodeType":"ElementaryTypeName","src":"12878:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2610,"mutability":"mutable","name":"_tokens","nameLocation":"12918:7:13","nodeType":"VariableDeclaration","scope":2702,"src":"12910:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2609,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12817:114:13"},"returnParameters":{"id":2615,"nodeType":"ParameterList","parameters":[],"src":"12960:0:13"},"scope":2970,"src":"12803:977:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3210],"body":{"id":2718,"nodeType":"Block","src":"14115:63:13","statements":[{"expression":{"arguments":[{"expression":{"id":2712,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14135:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"14135:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2714,"name":"_escrowAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"14147:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2715,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"14163:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2711,"name":"_allocate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"14125:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14125:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2717,"nodeType":"ExpressionStatement","src":"14125:46:13"}]},"documentation":{"id":2703,"nodeType":"StructuredDocumentation","src":"13786:225:13","text":" @dev Allocate available tokens to an escrow.\n @param _escrowAddress The allocationID will work to identify collected funds related to this allocation\n @param _tokens Amount of tokens to allocate"},"functionSelector":"b78b52df","id":2719,"implemented":true,"kind":"function","modifiers":[],"name":"allocate","nameLocation":"14025:8:13","nodeType":"FunctionDefinition","overrides":{"id":2709,"nodeType":"OverrideSpecifier","overrides":[],"src":"14106:8:13"},"parameters":{"id":2708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2705,"mutability":"mutable","name":"_escrowAddress","nameLocation":"14051:14:13","nodeType":"VariableDeclaration","scope":2719,"src":"14043:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2704,"name":"address","nodeType":"ElementaryTypeName","src":"14043:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2707,"mutability":"mutable","name":"_tokens","nameLocation":"14083:7:13","nodeType":"VariableDeclaration","scope":2719,"src":"14075:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2706,"name":"uint256","nodeType":"ElementaryTypeName","src":"14075:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14033:63:13"},"returnParameters":{"id":2710,"nodeType":"ParameterList","parameters":[],"src":"14115:0:13"},"scope":2970,"src":"14016:162:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2803,"nodeType":"Block","src":"14576:939:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2730,"name":"_escrowAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"14594:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14620:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14612:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2731,"name":"address","nodeType":"ElementaryTypeName","src":"14612:7:13","typeDescriptions":{}}},"id":2734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14612:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14594:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d75737420626520612076616c69642061646472657373","id":2736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14624:25:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_468519957235cef46f7c921ca2d833d91a40db6eb163f5e0db878d6b92517276","typeString":"literal_string \"Must be a valid address\""},"value":"Must be a valid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_468519957235cef46f7c921ca2d833d91a40db6eb163f5e0db878d6b92517276","typeString":"literal_string \"Must be a valid address\""}],"id":2729,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14586:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14586:64:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2738,"nodeType":"ExpressionStatement","src":"14586:64:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":2740,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"14681:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$3329_storage_$","typeString":"mapping(address => struct Stakes.Staker storage ref)"}},"id":2743,"indexExpression":{"expression":{"id":2741,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14688:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"14688:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14681:18:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage","typeString":"struct Stakes.Staker storage ref"}},"id":2744,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensAvailable","nodeType":"MemberAccess","referencedDeclaration":3553,"src":"14681:34:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Staker_$3329_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Staker_$3329_memory_ptr_$","typeString":"function (struct Stakes.Staker memory) pure returns (uint256)"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14681:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2746,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"14721:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14681:47:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420616d6f756e74206f6620746f6b656e7320696e20746865207374616b65","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14742:44:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_32ff48782182739fcc244d74f52670d6e9b17a6fb1ac4c1e48206f109a98e95c","typeString":"literal_string \"Insufficient amount of tokens in the stake\""},"value":"Insufficient amount of tokens in the stake"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_32ff48782182739fcc244d74f52670d6e9b17a6fb1ac4c1e48206f109a98e95c","typeString":"literal_string \"Insufficient amount of tokens in the stake\""}],"id":2739,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14660:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14660:136:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2750,"nodeType":"ExpressionStatement","src":"14660:136:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2752,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"14814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14824:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14814:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d757374206265206120706f736974697665206e756d626572","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14827:27:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_6708eebd660913c2744ac9640b2ee73a7eba7a7981d51b61a65bb76e5a97917e","typeString":"literal_string \"Must be a positive number\""},"value":"Must be a positive number"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6708eebd660913c2744ac9640b2ee73a7eba7a7981d51b61a65bb76e5a97917e","typeString":"literal_string \"Must be a positive number\""}],"id":2751,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14806:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14806:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2757,"nodeType":"ExpressionStatement","src":"14806:49:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_AllocationState_$3093","typeString":"enum IStaking.AllocationState"},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2760,"name":"_escrowAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"14906:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2759,"name":"_getAllocationState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"14886:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_enum$_AllocationState_$3093_$","typeString":"function (address) view returns (enum IStaking.AllocationState)"}},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14886:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_AllocationState_$3093","typeString":"enum IStaking.AllocationState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2762,"name":"AllocationState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"14925:15:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AllocationState_$3093_$","typeString":"type(enum IStaking.AllocationState)"}},"id":2763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Null","nodeType":"MemberAccess","referencedDeclaration":3088,"src":"14925:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_AllocationState_$3093","typeString":"enum IStaking.AllocationState"}},"src":"14886:59:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c6c6f636174696f6e20616c726561647920657869737473","id":2765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14959:27:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_73c4a70f74250866db4c24faa260c296b6a2f6f74024944ef1e4389f5fc3405b","typeString":"literal_string \"Allocation already exists\""},"value":"Allocation already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_73c4a70f74250866db4c24faa260c296b6a2f6f74024944ef1e4389f5fc3405b","typeString":"literal_string \"Allocation already exists\""}],"id":2758,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14865:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14865:131:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2767,"nodeType":"ExpressionStatement","src":"14865:131:13"},{"assignments":[2770],"declarations":[{"constant":false,"id":2770,"mutability":"mutable","name":"allocation","nameLocation":"15025:10:13","nodeType":"VariableDeclaration","scope":2803,"src":"15007:28:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_memory_ptr","typeString":"struct IStaking.Allocation"},"typeName":{"id":2769,"nodeType":"UserDefinedTypeName","pathNode":{"id":2768,"name":"Allocation","nodeType":"IdentifierPath","referencedDeclaration":3107,"src":"15007:10:13"},"referencedDeclaration":3107,"src":"15007:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation"}},"visibility":"internal"}],"id":2779,"initialValue":{"arguments":[{"id":2772,"name":"_escrowAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"15062:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2773,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"15108:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2774,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"15147:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2775,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15188:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"15188:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":2777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15227:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2771,"name":"Allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"15038:10:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Allocation_$3107_storage_ptr_$","typeString":"type(struct IStaking.Allocation storage pointer)"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15038:212:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_memory_ptr","typeString":"struct IStaking.Allocation memory"}},"nodeType":"VariableDeclarationStatement","src":"15007:243:13"},{"expression":{"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2780,"name":"allocations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"15261:11:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Allocation_$3107_storage_$","typeString":"mapping(address => struct IStaking.Allocation storage ref)"}},"id":2782,"indexExpression":{"id":2781,"name":"_escrowAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"15273:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15261:27:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage","typeString":"struct IStaking.Allocation storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2783,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"15291:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_memory_ptr","typeString":"struct IStaking.Allocation memory"}},"src":"15261:40:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage","typeString":"struct IStaking.Allocation storage ref"}},"id":2785,"nodeType":"ExpressionStatement","src":"15261:40:13"},{"expression":{"arguments":[{"expression":{"id":2790,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"15336:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_memory_ptr","typeString":"struct IStaking.Allocation memory"}},"id":2791,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokens","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"15336:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":2786,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"15311:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$3329_storage_$","typeString":"mapping(address => struct Stakes.Staker storage ref)"}},"id":2788,"indexExpression":{"id":2787,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"15318:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15311:15:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage","typeString":"struct Stakes.Staker storage ref"}},"id":2789,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"allocate","nodeType":"MemberAccess","referencedDeclaration":3389,"src":"15311:24:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Staker_$3329_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_Staker_$3329_storage_ptr_$","typeString":"function (struct Stakes.Staker storage pointer,uint256)"}},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15311:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2793,"nodeType":"ExpressionStatement","src":"15311:43:13"},{"eventCall":{"arguments":[{"id":2795,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"15398:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2796,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"15419:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_memory_ptr","typeString":"struct IStaking.Allocation memory"}},"id":2797,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokens","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"15419:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2798,"name":"_escrowAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"15450:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2799,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"15478:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_memory_ptr","typeString":"struct IStaking.Allocation memory"}},"id":2800,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"createdAt","nodeType":"MemberAccess","referencedDeclaration":3104,"src":"15478:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2794,"name":"StakeAllocated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"15370:14:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256,address,uint256)"}},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15370:138:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2802,"nodeType":"EmitStatement","src":"15365:143:13"}]},"documentation":{"id":2720,"nodeType":"StructuredDocumentation","src":"14184:272:13","text":" @dev Allocate available tokens to an escrow.\n @param _staker Staker address to allocate funds from.\n @param _escrowAddress The escrow address which collected funds related to this allocation\n @param _tokens Amount of tokens to allocate"},"id":2804,"implemented":true,"kind":"function","modifiers":[],"name":"_allocate","nameLocation":"14470:9:13","nodeType":"FunctionDefinition","parameters":{"id":2727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"_staker","nameLocation":"14497:7:13","nodeType":"VariableDeclaration","scope":2804,"src":"14489:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2721,"name":"address","nodeType":"ElementaryTypeName","src":"14489:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2724,"mutability":"mutable","name":"_escrowAddress","nameLocation":"14522:14:13","nodeType":"VariableDeclaration","scope":2804,"src":"14514:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2723,"name":"address","nodeType":"ElementaryTypeName","src":"14514:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2726,"mutability":"mutable","name":"_tokens","nameLocation":"14554:7:13","nodeType":"VariableDeclaration","scope":2804,"src":"14546:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2725,"name":"uint256","nodeType":"ElementaryTypeName","src":"14546:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14479:88:13"},"returnParameters":{"id":2728,"nodeType":"ParameterList","parameters":[],"src":"14576:0:13"},"scope":2970,"src":"14461:1054:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"baseFunctions":[3215],"body":{"id":2825,"nodeType":"Block","src":"15719:124:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2812,"name":"_escrowAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"15737:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15763:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15755:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2813,"name":"address","nodeType":"ElementaryTypeName","src":"15755:7:13","typeDescriptions":{}}},"id":2816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15755:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15737:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d75737420626520612076616c69642061646472657373","id":2818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15767:25:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_468519957235cef46f7c921ca2d833d91a40db6eb163f5e0db878d6b92517276","typeString":"literal_string \"Must be a valid address\""},"value":"Must be a valid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_468519957235cef46f7c921ca2d833d91a40db6eb163f5e0db878d6b92517276","typeString":"literal_string \"Must be a valid address\""}],"id":2811,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15729:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15729:64:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2820,"nodeType":"ExpressionStatement","src":"15729:64:13"},{"expression":{"arguments":[{"id":2822,"name":"_escrowAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"15821:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2821,"name":"_closeAllocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"15804:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15804:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2824,"nodeType":"ExpressionStatement","src":"15804:32:13"}]},"documentation":{"id":2805,"nodeType":"StructuredDocumentation","src":"15521:126:13","text":" @dev Close an allocation and free the staked tokens.\n @param _escrowAddress The allocation identifier"},"functionSelector":"68f39a07","id":2826,"implemented":true,"kind":"function","modifiers":[],"name":"closeAllocation","nameLocation":"15661:15:13","nodeType":"FunctionDefinition","overrides":{"id":2809,"nodeType":"OverrideSpecifier","overrides":[],"src":"15710:8:13"},"parameters":{"id":2808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2807,"mutability":"mutable","name":"_escrowAddress","nameLocation":"15685:14:13","nodeType":"VariableDeclaration","scope":2826,"src":"15677:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2806,"name":"address","nodeType":"ElementaryTypeName","src":"15677:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15676:24:13"},"returnParameters":{"id":2810,"nodeType":"ParameterList","parameters":[],"src":"15719:0:13"},"scope":2970,"src":"15652:191:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2915,"nodeType":"Block","src":"16038:954:13","statements":[{"assignments":[2834],"declarations":[{"constant":false,"id":2834,"mutability":"mutable","name":"allocation","nameLocation":"16067:10:13","nodeType":"VariableDeclaration","scope":2915,"src":"16048:29:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation"},"typeName":{"id":2833,"nodeType":"UserDefinedTypeName","pathNode":{"id":2832,"name":"Allocation","nodeType":"IdentifierPath","referencedDeclaration":3107,"src":"16048:10:13"},"referencedDeclaration":3107,"src":"16048:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation"}},"visibility":"internal"}],"id":2838,"initialValue":{"baseExpression":{"id":2835,"name":"allocations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"16080:11:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Allocation_$3107_storage_$","typeString":"mapping(address => struct IStaking.Allocation storage ref)"}},"id":2837,"indexExpression":{"id":2836,"name":"_escrowAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"16092:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16080:27:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage","typeString":"struct IStaking.Allocation storage ref"}},"nodeType":"VariableDeclarationStatement","src":"16048:59:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2840,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"16138:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation storage pointer"}},"id":2841,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"staker","nodeType":"MemberAccess","referencedDeclaration":3100,"src":"16138:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2842,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16159:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"16159:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16138:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792074686520616c6c6f6361746f722063616e20636c6f73652074686520616c6c6f636174696f6e","id":2845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16183:45:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_657ad636948d1d2c1317a7b7e385baea1089841d6ad67cc13d500cc7a430ad3f","typeString":"literal_string \"Only the allocator can close the allocation\""},"value":"Only the allocator can close the allocation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_657ad636948d1d2c1317a7b7e385baea1089841d6ad67cc13d500cc7a430ad3f","typeString":"literal_string \"Only the allocator can close the allocation\""}],"id":2839,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16117:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16117:121:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2847,"nodeType":"ExpressionStatement","src":"16117:121:13"},{"assignments":[2850],"declarations":[{"constant":false,"id":2850,"mutability":"mutable","name":"allocationState","nameLocation":"16265:15:13","nodeType":"VariableDeclaration","scope":2915,"src":"16249:31:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AllocationState_$3093","typeString":"enum IStaking.AllocationState"},"typeName":{"id":2849,"nodeType":"UserDefinedTypeName","pathNode":{"id":2848,"name":"AllocationState","nodeType":"IdentifierPath","referencedDeclaration":3093,"src":"16249:15:13"},"referencedDeclaration":3093,"src":"16249:15:13","typeDescriptions":{"typeIdentifier":"t_enum$_AllocationState_$3093","typeString":"enum IStaking.AllocationState"}},"visibility":"internal"}],"id":2854,"initialValue":{"arguments":[{"id":2852,"name":"_escrowAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"16303:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2851,"name":"_getAllocationState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"16283:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_enum$_AllocationState_$3093_$","typeString":"function (address) view returns (enum IStaking.AllocationState)"}},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16283:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_AllocationState_$3093","typeString":"enum IStaking.AllocationState"}},"nodeType":"VariableDeclarationStatement","src":"16249:69:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_AllocationState_$3093","typeString":"enum IStaking.AllocationState"},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2856,"name":"allocationState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"16349:15:13","typeDescriptions":{"typeIdentifier":"t_enum$_AllocationState_$3093","typeString":"enum IStaking.AllocationState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2857,"name":"AllocationState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"16368:15:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AllocationState_$3093_$","typeString":"type(enum IStaking.AllocationState)"}},"id":2858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Completed","nodeType":"MemberAccess","referencedDeclaration":3092,"src":"16368:25:13","typeDescriptions":{"typeIdentifier":"t_enum$_AllocationState_$3093","typeString":"enum IStaking.AllocationState"}},"src":"16349:44:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c6c6f636174696f6e20686173206e6f20636f6d706c65746564207374617465","id":2860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16407:35:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd465ba4be2e63ad02a0450b657ea531627a92660570c417c6b0e7cadb936b3d","typeString":"literal_string \"Allocation has no completed state\""},"value":"Allocation has no completed state"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd465ba4be2e63ad02a0450b657ea531627a92660570c417c6b0e7cadb936b3d","typeString":"literal_string \"Allocation has no completed state\""}],"id":2855,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16328:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16328:124:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2862,"nodeType":"ExpressionStatement","src":"16328:124:13"},{"expression":{"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2863,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"16463:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation storage pointer"}},"id":2865,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"closedAt","nodeType":"MemberAccess","referencedDeclaration":3106,"src":"16463:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2866,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"16485:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"16485:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16463:34:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2869,"nodeType":"ExpressionStatement","src":"16463:34:13"},{"assignments":[2871],"declarations":[{"constant":false,"id":2871,"mutability":"mutable","name":"diffInBlocks","nameLocation":"16515:12:13","nodeType":"VariableDeclaration","scope":2915,"src":"16507:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2870,"name":"uint256","nodeType":"ElementaryTypeName","src":"16507:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2879,"initialValue":{"arguments":[{"expression":{"id":2874,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"16559:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation storage pointer"}},"id":2875,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"closedAt","nodeType":"MemberAccess","referencedDeclaration":3106,"src":"16559:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2876,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"16592:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation storage pointer"}},"id":2877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"createdAt","nodeType":"MemberAccess","referencedDeclaration":3104,"src":"16592:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2872,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"16530:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4056_$","typeString":"type(library Math)"}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"diffOrZero","nodeType":"MemberAccess","referencedDeclaration":3739,"src":"16530:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16530:92:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16507:115:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2881,"name":"diffInBlocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"16640:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16655:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16640:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c6c6f636174696f6e2063616e6e6f7420626520636c6f73656420736f206561726c79","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16658:38:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_09cc442701824c51e8cdd950e29e1fc404dd1175d116774e42c0e2968b82338c","typeString":"literal_string \"Allocation cannot be closed so early\""},"value":"Allocation cannot be closed so early"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09cc442701824c51e8cdd950e29e1fc404dd1175d116774e42c0e2968b82338c","typeString":"literal_string \"Allocation cannot be closed so early\""}],"id":2880,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16632:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16632:65:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2886,"nodeType":"ExpressionStatement","src":"16632:65:13"},{"assignments":[2888],"declarations":[{"constant":false,"id":2888,"mutability":"mutable","name":"_tokens","nameLocation":"16716:7:13","nodeType":"VariableDeclaration","scope":2915,"src":"16708:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2887,"name":"uint256","nodeType":"ElementaryTypeName","src":"16708:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2891,"initialValue":{"expression":{"id":2889,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"16726:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation storage pointer"}},"id":2890,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokens","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"16726:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16708:35:13"},{"expression":{"arguments":[{"id":2897,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"16791:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":2892,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"16754:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$3329_storage_$","typeString":"mapping(address => struct Stakes.Staker storage ref)"}},"id":2895,"indexExpression":{"expression":{"id":2893,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"16761:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation storage pointer"}},"id":2894,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"staker","nodeType":"MemberAccess","referencedDeclaration":3100,"src":"16761:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16754:25:13","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage","typeString":"struct Stakes.Staker storage ref"}},"id":2896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"unallocate","nodeType":"MemberAccess","referencedDeclaration":3409,"src":"16754:36:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Staker_$3329_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_Staker_$3329_storage_ptr_$","typeString":"function (struct Stakes.Staker storage pointer,uint256)"}},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16754:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2899,"nodeType":"ExpressionStatement","src":"16754:45:13"},{"expression":{"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2900,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"16809:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation storage pointer"}},"id":2902,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tokens","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"16809:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16829:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16809:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2905,"nodeType":"ExpressionStatement","src":"16809:21:13"},{"eventCall":{"arguments":[{"expression":{"id":2907,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"16876:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation storage pointer"}},"id":2908,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"staker","nodeType":"MemberAccess","referencedDeclaration":3100,"src":"16876:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2909,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"16907:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2910,"name":"_escrowAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"16928:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2911,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"16956:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation storage pointer"}},"id":2912,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"closedAt","nodeType":"MemberAccess","referencedDeclaration":3106,"src":"16956:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2906,"name":"AllocationClosed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"16846:16:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256,address,uint256)"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16846:139:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2914,"nodeType":"EmitStatement","src":"16841:144:13"}]},"documentation":{"id":2827,"nodeType":"StructuredDocumentation","src":"15849:126:13","text":" @dev Close an allocation and free the staked tokens.\n @param _escrowAddress The allocation identifier"},"id":2916,"implemented":true,"kind":"function","modifiers":[],"name":"_closeAllocation","nameLocation":"15989:16:13","nodeType":"FunctionDefinition","parameters":{"id":2830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2829,"mutability":"mutable","name":"_escrowAddress","nameLocation":"16014:14:13","nodeType":"VariableDeclaration","scope":2916,"src":"16006:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2828,"name":"address","nodeType":"ElementaryTypeName","src":"16006:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16005:24:13"},"returnParameters":{"id":2831,"nodeType":"ParameterList","parameters":[],"src":"16038:0:13"},"scope":2970,"src":"15980:1012:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2933,"nodeType":"Block","src":"17057:87:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2927,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"17119:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2926,"name":"IERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"17101:17:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Upgradeable_$882_$","typeString":"type(contract IERC20Upgradeable)"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17101:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},{"id":2929,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"17127:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"17131:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2923,"name":"SafeERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"17067:20:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20Upgradeable_$1294_$","typeString":"type(library SafeERC20Upgradeable)"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":951,"src":"17067:33:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$882_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20Upgradeable,address,uint256)"}},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17067:70:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2932,"nodeType":"ExpressionStatement","src":"17067:70:13"}]},"id":2934,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"17007:13:13","nodeType":"FunctionDefinition","parameters":{"id":2921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2918,"mutability":"mutable","name":"to","nameLocation":"17029:2:13","nodeType":"VariableDeclaration","scope":2934,"src":"17021:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2917,"name":"address","nodeType":"ElementaryTypeName","src":"17021:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2920,"mutability":"mutable","name":"value","nameLocation":"17041:5:13","nodeType":"VariableDeclaration","scope":2934,"src":"17033:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2919,"name":"uint256","nodeType":"ElementaryTypeName","src":"17033:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17020:27:13"},"returnParameters":{"id":2922,"nodeType":"ParameterList","parameters":[],"src":"17057:0:13"},"scope":2970,"src":"16998:146:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2954,"nodeType":"Block","src":"17257:155:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2947,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"17336:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2946,"name":"IERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"17318:17:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Upgradeable_$882_$","typeString":"type(contract IERC20Upgradeable)"}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17318:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"}},{"id":2949,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"17356:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2950,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"17374:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"17390:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$882","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2943,"name":"SafeERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"17267:20:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20Upgradeable_$1294_$","typeString":"type(library SafeERC20Upgradeable)"}},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":978,"src":"17267:37:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$882_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20Upgradeable,address,address,uint256)"}},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17267:138:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2953,"nodeType":"ExpressionStatement","src":"17267:138:13"}]},"id":2955,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"17159:17:13","nodeType":"FunctionDefinition","parameters":{"id":2941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2936,"mutability":"mutable","name":"from","nameLocation":"17194:4:13","nodeType":"VariableDeclaration","scope":2955,"src":"17186:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2935,"name":"address","nodeType":"ElementaryTypeName","src":"17186:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2938,"mutability":"mutable","name":"to","nameLocation":"17216:2:13","nodeType":"VariableDeclaration","scope":2955,"src":"17208:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2937,"name":"address","nodeType":"ElementaryTypeName","src":"17208:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2940,"mutability":"mutable","name":"value","nameLocation":"17236:5:13","nodeType":"VariableDeclaration","scope":2955,"src":"17228:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2939,"name":"uint256","nodeType":"ElementaryTypeName","src":"17228:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17176:71:13"},"returnParameters":{"id":2942,"nodeType":"ParameterList","parameters":[],"src":"17257:0:13"},"scope":2970,"src":"17150:262:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[798],"body":{"id":2963,"nodeType":"Block","src":"17531:2:13","statements":[]},"id":2964,"implemented":true,"kind":"function","modifiers":[{"id":2961,"kind":"modifierInvocation","modifierName":{"id":2960,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":46,"src":"17521:9:13"},"nodeType":"ModifierInvocation","src":"17521:9:13"}],"name":"_authorizeUpgrade","nameLocation":"17476:17:13","nodeType":"FunctionDefinition","overrides":{"id":2959,"nodeType":"OverrideSpecifier","overrides":[],"src":"17512:8:13"},"parameters":{"id":2958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2964,"src":"17494:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2956,"name":"address","nodeType":"ElementaryTypeName","src":"17494:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17493:9:13"},"returnParameters":{"id":2962,"nodeType":"ParameterList","parameters":[],"src":"17531:0:13"},"scope":2970,"src":"17467:66:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":2965,"nodeType":"StructuredDocumentation","src":"17539:254:13","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2969,"mutability":"mutable","name":"__gap","nameLocation":"17818:5:13","nodeType":"VariableDeclaration","scope":2970,"src":"17798:25:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$43_storage","typeString":"uint256[43]"},"typeName":{"baseType":{"id":2966,"name":"uint256","nodeType":"ElementaryTypeName","src":"17798:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2968,"length":{"hexValue":"3433","id":2967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17806:2:13","typeDescriptions":{"typeIdentifier":"t_rational_43_by_1","typeString":"int_const 43"},"value":"43"},"nodeType":"ArrayTypeName","src":"17798:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$43_storage_ptr","typeString":"uint256[43]"}},"visibility":"private"}],"scope":2971,"src":"752:17074:13","usedErrors":[]}],"src":"33:17794:13"},"id":13},"contracts/interfaces/IEscrow.sol":{"ast":{"absolutePath":"contracts/interfaces/IEscrow.sol","exportedSymbols":{"IEscrow":[3044]},"id":3045,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2972,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"33:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IEscrow","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3044,"linearizedBaseContracts":[3044],"name":"IEscrow","nameLocation":"69:7:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IEscrow.EscrowStatuses","id":2979,"members":[{"id":2973,"name":"Launched","nameLocation":"113:8:14","nodeType":"EnumValue","src":"113:8:14"},{"id":2974,"name":"Pending","nameLocation":"131:7:14","nodeType":"EnumValue","src":"131:7:14"},{"id":2975,"name":"Partial","nameLocation":"148:7:14","nodeType":"EnumValue","src":"148:7:14"},{"id":2976,"name":"Paid","nameLocation":"165:4:14","nodeType":"EnumValue","src":"165:4:14"},{"id":2977,"name":"Complete","nameLocation":"179:8:14","nodeType":"EnumValue","src":"179:8:14"},{"id":2978,"name":"Cancelled","nameLocation":"197:9:14","nodeType":"EnumValue","src":"197:9:14"}],"name":"EscrowStatuses","nameLocation":"88:14:14","nodeType":"EnumDefinition","src":"83:129:14"},{"functionSelector":"200d2ed2","id":2985,"implemented":false,"kind":"function","modifiers":[],"name":"status","nameLocation":"227:6:14","nodeType":"FunctionDefinition","parameters":{"id":2980,"nodeType":"ParameterList","parameters":[],"src":"233:2:14"},"returnParameters":{"id":2984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2985,"src":"259:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_EscrowStatuses_$2979","typeString":"enum IEscrow.EscrowStatuses"},"typeName":{"id":2982,"nodeType":"UserDefinedTypeName","pathNode":{"id":2981,"name":"EscrowStatuses","nodeType":"IdentifierPath","referencedDeclaration":2979,"src":"259:14:14"},"referencedDeclaration":2979,"src":"259:14:14","typeDescriptions":{"typeIdentifier":"t_enum$_EscrowStatuses_$2979","typeString":"enum IEscrow.EscrowStatuses"}},"visibility":"internal"}],"src":"258:16:14"},"scope":3044,"src":"218:57:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9eb262f3","id":2991,"implemented":false,"kind":"function","modifiers":[],"name":"addTrustedHandlers","nameLocation":"290:18:14","nodeType":"FunctionDefinition","parameters":{"id":2989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2988,"mutability":"mutable","name":"_handlers","nameLocation":"326:9:14","nodeType":"VariableDeclaration","scope":2991,"src":"309:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2986,"name":"address","nodeType":"ElementaryTypeName","src":"309:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2987,"nodeType":"ArrayTypeName","src":"309:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"308:28:14"},"returnParameters":{"id":2990,"nodeType":"ParameterList","parameters":[],"src":"345:0:14"},"scope":3044,"src":"281:65:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f56679cf","id":3010,"implemented":false,"kind":"function","modifiers":[],"name":"setup","nameLocation":"361:5:14","nodeType":"FunctionDefinition","parameters":{"id":3008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"mutability":"mutable","name":"_reputationOracle","nameLocation":"384:17:14","nodeType":"VariableDeclaration","scope":3010,"src":"376:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2992,"name":"address","nodeType":"ElementaryTypeName","src":"376:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2995,"mutability":"mutable","name":"_recordingOracle","nameLocation":"419:16:14","nodeType":"VariableDeclaration","scope":3010,"src":"411:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2994,"name":"address","nodeType":"ElementaryTypeName","src":"411:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2997,"mutability":"mutable","name":"_exchangeOracle","nameLocation":"453:15:14","nodeType":"VariableDeclaration","scope":3010,"src":"445:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2996,"name":"address","nodeType":"ElementaryTypeName","src":"445:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2999,"mutability":"mutable","name":"_reputationOracleFeePercentage","nameLocation":"484:30:14","nodeType":"VariableDeclaration","scope":3010,"src":"478:36:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2998,"name":"uint8","nodeType":"ElementaryTypeName","src":"478:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3001,"mutability":"mutable","name":"_recordingOracleFeePercentage","nameLocation":"530:29:14","nodeType":"VariableDeclaration","scope":3010,"src":"524:35:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3000,"name":"uint8","nodeType":"ElementaryTypeName","src":"524:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3003,"mutability":"mutable","name":"_exchangeOracleFeePercentage","nameLocation":"575:28:14","nodeType":"VariableDeclaration","scope":3010,"src":"569:34:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3002,"name":"uint8","nodeType":"ElementaryTypeName","src":"569:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3005,"mutability":"mutable","name":"_url","nameLocation":"627:4:14","nodeType":"VariableDeclaration","scope":3010,"src":"613:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3004,"name":"string","nodeType":"ElementaryTypeName","src":"613:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3007,"mutability":"mutable","name":"_hash","nameLocation":"655:5:14","nodeType":"VariableDeclaration","scope":3010,"src":"641:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3006,"name":"string","nodeType":"ElementaryTypeName","src":"641:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"366:300:14"},"returnParameters":{"id":3009,"nodeType":"ParameterList","parameters":[],"src":"675:0:14"},"scope":3044,"src":"352:324:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"35a063b4","id":3013,"implemented":false,"kind":"function","modifiers":[],"name":"abort","nameLocation":"691:5:14","nodeType":"FunctionDefinition","parameters":{"id":3011,"nodeType":"ParameterList","parameters":[],"src":"696:2:14"},"returnParameters":{"id":3012,"nodeType":"ParameterList","parameters":[],"src":"707:0:14"},"scope":3044,"src":"682:26:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ea8a1af0","id":3018,"implemented":false,"kind":"function","modifiers":[],"name":"cancel","nameLocation":"723:6:14","nodeType":"FunctionDefinition","parameters":{"id":3014,"nodeType":"ParameterList","parameters":[],"src":"729:2:14"},"returnParameters":{"id":3017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3018,"src":"750:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3015,"name":"bool","nodeType":"ElementaryTypeName","src":"750:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"749:6:14"},"scope":3044,"src":"714:42:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"522e1177","id":3021,"implemented":false,"kind":"function","modifiers":[],"name":"complete","nameLocation":"771:8:14","nodeType":"FunctionDefinition","parameters":{"id":3019,"nodeType":"ParameterList","parameters":[],"src":"779:2:14"},"returnParameters":{"id":3020,"nodeType":"ParameterList","parameters":[],"src":"790:0:14"},"scope":3044,"src":"762:29:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"697e4b87","id":3028,"implemented":false,"kind":"function","modifiers":[],"name":"storeResults","nameLocation":"806:12:14","nodeType":"FunctionDefinition","parameters":{"id":3026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3023,"mutability":"mutable","name":"_url","nameLocation":"833:4:14","nodeType":"VariableDeclaration","scope":3028,"src":"819:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3022,"name":"string","nodeType":"ElementaryTypeName","src":"819:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3025,"mutability":"mutable","name":"_hash","nameLocation":"853:5:14","nodeType":"VariableDeclaration","scope":3028,"src":"839:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3024,"name":"string","nodeType":"ElementaryTypeName","src":"839:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"818:41:14"},"returnParameters":{"id":3027,"nodeType":"ParameterList","parameters":[],"src":"868:0:14"},"scope":3044,"src":"797:72:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b63d1a00","id":3043,"implemented":false,"kind":"function","modifiers":[],"name":"bulkPayOut","nameLocation":"884:10:14","nodeType":"FunctionDefinition","parameters":{"id":3041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3031,"mutability":"mutable","name":"_recipients","nameLocation":"921:11:14","nodeType":"VariableDeclaration","scope":3043,"src":"904:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3029,"name":"address","nodeType":"ElementaryTypeName","src":"904:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3030,"nodeType":"ArrayTypeName","src":"904:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3034,"mutability":"mutable","name":"_amounts","nameLocation":"959:8:14","nodeType":"VariableDeclaration","scope":3043,"src":"942:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3032,"name":"uint256","nodeType":"ElementaryTypeName","src":"942:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3033,"nodeType":"ArrayTypeName","src":"942:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3036,"mutability":"mutable","name":"_url","nameLocation":"991:4:14","nodeType":"VariableDeclaration","scope":3043,"src":"977:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3035,"name":"string","nodeType":"ElementaryTypeName","src":"977:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3038,"mutability":"mutable","name":"_hash","nameLocation":"1019:5:14","nodeType":"VariableDeclaration","scope":3043,"src":"1005:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3037,"name":"string","nodeType":"ElementaryTypeName","src":"1005:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3040,"mutability":"mutable","name":"_txId","nameLocation":"1042:5:14","nodeType":"VariableDeclaration","scope":3043,"src":"1034:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3039,"name":"uint256","nodeType":"ElementaryTypeName","src":"1034:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"894:159:14"},"returnParameters":{"id":3042,"nodeType":"ParameterList","parameters":[],"src":"1062:0:14"},"scope":3044,"src":"875:188:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3045,"src":"59:1006:14","usedErrors":[]}],"src":"33:1033:14"},"id":14},"contracts/interfaces/IRewardPool.sol":{"ast":{"absolutePath":"contracts/interfaces/IRewardPool.sol","exportedSymbols":{"IRewardPool":[3084]},"id":3085,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3046,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"33:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IRewardPool","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3084,"linearizedBaseContracts":[3084],"name":"IRewardPool","nameLocation":"69:11:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IRewardPool.Reward","id":3053,"members":[{"constant":false,"id":3048,"mutability":"mutable","name":"escrowAddress","nameLocation":"208:13:15","nodeType":"VariableDeclaration","scope":3053,"src":"200:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3047,"name":"address","nodeType":"ElementaryTypeName","src":"200:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3050,"mutability":"mutable","name":"slasher","nameLocation":"239:7:15","nodeType":"VariableDeclaration","scope":3053,"src":"231:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3049,"name":"address","nodeType":"ElementaryTypeName","src":"231:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3052,"mutability":"mutable","name":"tokens","nameLocation":"264:6:15","nodeType":"VariableDeclaration","scope":3053,"src":"256:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3051,"name":"uint256","nodeType":"ElementaryTypeName","src":"256:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Reward","nameLocation":"183:6:15","nodeType":"StructDefinition","scope":3084,"src":"176:140:15","visibility":"public"},{"functionSelector":"e2ff99ef","id":3064,"implemented":false,"kind":"function","modifiers":[],"name":"addReward","nameLocation":"331:9:15","nodeType":"FunctionDefinition","parameters":{"id":3062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3055,"mutability":"mutable","name":"_escrowAddress","nameLocation":"358:14:15","nodeType":"VariableDeclaration","scope":3064,"src":"350:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3054,"name":"address","nodeType":"ElementaryTypeName","src":"350:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3057,"mutability":"mutable","name":"_staker","nameLocation":"390:7:15","nodeType":"VariableDeclaration","scope":3064,"src":"382:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3056,"name":"address","nodeType":"ElementaryTypeName","src":"382:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3059,"mutability":"mutable","name":"_slasher","nameLocation":"415:8:15","nodeType":"VariableDeclaration","scope":3064,"src":"407:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3058,"name":"address","nodeType":"ElementaryTypeName","src":"407:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3061,"mutability":"mutable","name":"_tokens","nameLocation":"441:7:15","nodeType":"VariableDeclaration","scope":3064,"src":"433:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3060,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"340:114:15"},"returnParameters":{"id":3063,"nodeType":"ParameterList","parameters":[],"src":"463:0:15"},"scope":3084,"src":"322:142:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"79ee54f7","id":3073,"implemented":false,"kind":"function","modifiers":[],"name":"getRewards","nameLocation":"479:10:15","nodeType":"FunctionDefinition","parameters":{"id":3067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3066,"mutability":"mutable","name":"_escrowAddress","nameLocation":"507:14:15","nodeType":"VariableDeclaration","scope":3073,"src":"499:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3065,"name":"address","nodeType":"ElementaryTypeName","src":"499:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"489:38:15"},"returnParameters":{"id":3072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3073,"src":"551:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Reward_$3053_memory_ptr_$dyn_memory_ptr","typeString":"struct IRewardPool.Reward[]"},"typeName":{"baseType":{"id":3069,"nodeType":"UserDefinedTypeName","pathNode":{"id":3068,"name":"Reward","nodeType":"IdentifierPath","referencedDeclaration":3053,"src":"551:6:15"},"referencedDeclaration":3053,"src":"551:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$3053_storage_ptr","typeString":"struct IRewardPool.Reward"}},"id":3070,"nodeType":"ArrayTypeName","src":"551:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Reward_$3053_storage_$dyn_storage_ptr","typeString":"struct IRewardPool.Reward[]"}},"visibility":"internal"}],"src":"550:17:15"},"scope":3084,"src":"470:98:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"092193ab","id":3078,"implemented":false,"kind":"function","modifiers":[],"name":"distributeReward","nameLocation":"583:16:15","nodeType":"FunctionDefinition","parameters":{"id":3076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3075,"mutability":"mutable","name":"_escrowAddress","nameLocation":"608:14:15","nodeType":"VariableDeclaration","scope":3078,"src":"600:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3074,"name":"address","nodeType":"ElementaryTypeName","src":"600:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"599:24:15"},"returnParameters":{"id":3077,"nodeType":"ParameterList","parameters":[],"src":"632:0:15"},"scope":3084,"src":"574:59:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"51cff8d9","id":3083,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"648:8:15","nodeType":"FunctionDefinition","parameters":{"id":3081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3080,"mutability":"mutable","name":"to","nameLocation":"665:2:15","nodeType":"VariableDeclaration","scope":3083,"src":"657:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3079,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"656:12:15"},"returnParameters":{"id":3082,"nodeType":"ParameterList","parameters":[],"src":"677:0:15"},"scope":3084,"src":"639:39:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3085,"src":"59:621:15","usedErrors":[]}],"src":"33:648:15"},"id":15},"contracts/interfaces/IStaking.sol":{"ast":{"absolutePath":"contracts/interfaces/IStaking.sol","exportedSymbols":{"IStaking":[3226],"Math":[4056],"SafeMath":[4252],"Stakes":[3615]},"id":3227,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3086,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"33:24:16"},{"absolutePath":"contracts/libs/Stakes.sol","file":"../libs/Stakes.sol","id":3087,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3227,"sourceUnit":3616,"src":"59:28:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IStaking","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3226,"linearizedBaseContracts":[3226],"name":"IStaking","nameLocation":"99:8:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IStaking.AllocationState","id":3093,"members":[{"id":3088,"name":"Null","nameLocation":"519:4:16","nodeType":"EnumValue","src":"519:4:16"},{"id":3089,"name":"Pending","nameLocation":"533:7:16","nodeType":"EnumValue","src":"533:7:16"},{"id":3090,"name":"Active","nameLocation":"550:6:16","nodeType":"EnumValue","src":"550:6:16"},{"id":3091,"name":"Closed","nameLocation":"566:6:16","nodeType":"EnumValue","src":"566:6:16"},{"id":3092,"name":"Completed","nameLocation":"582:9:16","nodeType":"EnumValue","src":"582:9:16"}],"name":"AllocationState","nameLocation":"493:15:16","nodeType":"EnumDefinition","src":"488:109:16"},{"canonicalName":"IStaking.SortField","id":3096,"members":[{"id":3094,"name":"None","nameLocation":"758:4:16","nodeType":"EnumValue","src":"758:4:16"},{"id":3095,"name":"Stake","nameLocation":"772:5:16","nodeType":"EnumValue","src":"772:5:16"}],"name":"SortField","nameLocation":"738:9:16","nodeType":"EnumDefinition","src":"733:50:16"},{"canonicalName":"IStaking.Allocation","id":3107,"members":[{"constant":false,"id":3098,"mutability":"mutable","name":"escrowAddress","nameLocation":"1017:13:16","nodeType":"VariableDeclaration","scope":3107,"src":"1009:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3097,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3100,"mutability":"mutable","name":"staker","nameLocation":"1048:6:16","nodeType":"VariableDeclaration","scope":3107,"src":"1040:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3099,"name":"address","nodeType":"ElementaryTypeName","src":"1040:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3102,"mutability":"mutable","name":"tokens","nameLocation":"1072:6:16","nodeType":"VariableDeclaration","scope":3107,"src":"1064:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3101,"name":"uint256","nodeType":"ElementaryTypeName","src":"1064:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3104,"mutability":"mutable","name":"createdAt","nameLocation":"1135:9:16","nodeType":"VariableDeclaration","scope":3107,"src":"1127:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1127:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3106,"mutability":"mutable","name":"closedAt","nameLocation":"1198:8:16","nodeType":"VariableDeclaration","scope":3107,"src":"1190:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3105,"name":"uint256","nodeType":"ElementaryTypeName","src":"1190:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Allocation","nameLocation":"988:10:16","nodeType":"StructDefinition","scope":3226,"src":"981:267:16","visibility":"public"},{"functionSelector":"66666aa9","id":3112,"implemented":false,"kind":"function","modifiers":[],"name":"rewardPool","nameLocation":"1263:10:16","nodeType":"FunctionDefinition","parameters":{"id":3108,"nodeType":"ParameterList","parameters":[],"src":"1273:2:16"},"returnParameters":{"id":3111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3112,"src":"1299:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3109,"name":"address","nodeType":"ElementaryTypeName","src":"1299:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1298:9:16"},"scope":3226,"src":"1254:54:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"233e9903","id":3117,"implemented":false,"kind":"function","modifiers":[],"name":"setMinimumStake","nameLocation":"1323:15:16","nodeType":"FunctionDefinition","parameters":{"id":3115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3114,"mutability":"mutable","name":"_minimumStake","nameLocation":"1347:13:16","nodeType":"VariableDeclaration","scope":3117,"src":"1339:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3113,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1338:23:16"},"returnParameters":{"id":3116,"nodeType":"ParameterList","parameters":[],"src":"1370:0:16"},"scope":3226,"src":"1314:57:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f489f23b","id":3122,"implemented":false,"kind":"function","modifiers":[],"name":"setLockPeriod","nameLocation":"1386:13:16","nodeType":"FunctionDefinition","parameters":{"id":3120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3119,"mutability":"mutable","name":"_lockPeriod","nameLocation":"1407:11:16","nodeType":"VariableDeclaration","scope":3122,"src":"1400:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3118,"name":"uint32","nodeType":"ElementaryTypeName","src":"1400:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1399:20:16"},"returnParameters":{"id":3121,"nodeType":"ParameterList","parameters":[],"src":"1428:0:16"},"scope":3226,"src":"1377:52:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"78238c37","id":3127,"implemented":false,"kind":"function","modifiers":[],"name":"setRewardPool","nameLocation":"1444:13:16","nodeType":"FunctionDefinition","parameters":{"id":3125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3124,"mutability":"mutable","name":"_rewardPool","nameLocation":"1466:11:16","nodeType":"VariableDeclaration","scope":3127,"src":"1458:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3123,"name":"address","nodeType":"ElementaryTypeName","src":"1458:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1457:21:16"},"returnParameters":{"id":3126,"nodeType":"ParameterList","parameters":[],"src":"1487:0:16"},"scope":3226,"src":"1435:53:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f1d60d66","id":3134,"implemented":false,"kind":"function","modifiers":[],"name":"isAllocation","nameLocation":"1503:12:16","nodeType":"FunctionDefinition","parameters":{"id":3130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3129,"mutability":"mutable","name":"_escrowAddress","nameLocation":"1524:14:16","nodeType":"VariableDeclaration","scope":3134,"src":"1516:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3128,"name":"address","nodeType":"ElementaryTypeName","src":"1516:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1515:24:16"},"returnParameters":{"id":3133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3134,"src":"1563:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3131,"name":"bool","nodeType":"ElementaryTypeName","src":"1563:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1562:6:16"},"scope":3226,"src":"1494:75:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e73e14bf","id":3141,"implemented":false,"kind":"function","modifiers":[],"name":"hasStake","nameLocation":"1584:8:16","nodeType":"FunctionDefinition","parameters":{"id":3137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3136,"mutability":"mutable","name":"_indexer","nameLocation":"1601:8:16","nodeType":"VariableDeclaration","scope":3141,"src":"1593:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3135,"name":"address","nodeType":"ElementaryTypeName","src":"1593:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1592:18:16"},"returnParameters":{"id":3140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3141,"src":"1634:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3138,"name":"bool","nodeType":"ElementaryTypeName","src":"1634:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1633:6:16"},"scope":3226,"src":"1575:65:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1af963aa","id":3148,"implemented":false,"kind":"function","modifiers":[],"name":"hasAvailableStake","nameLocation":"1655:17:16","nodeType":"FunctionDefinition","parameters":{"id":3144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3143,"mutability":"mutable","name":"_indexer","nameLocation":"1681:8:16","nodeType":"VariableDeclaration","scope":3148,"src":"1673:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3142,"name":"address","nodeType":"ElementaryTypeName","src":"1673:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1672:18:16"},"returnParameters":{"id":3147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3148,"src":"1714:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3145,"name":"bool","nodeType":"ElementaryTypeName","src":"1714:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1713:6:16"},"scope":3226,"src":"1646:74:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0e022923","id":3156,"implemented":false,"kind":"function","modifiers":[],"name":"getAllocation","nameLocation":"1735:13:16","nodeType":"FunctionDefinition","parameters":{"id":3151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3150,"mutability":"mutable","name":"_escrowAddress","nameLocation":"1766:14:16","nodeType":"VariableDeclaration","scope":3156,"src":"1758:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3149,"name":"address","nodeType":"ElementaryTypeName","src":"1758:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1748:38:16"},"returnParameters":{"id":3155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3156,"src":"1810:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_memory_ptr","typeString":"struct IStaking.Allocation"},"typeName":{"id":3153,"nodeType":"UserDefinedTypeName","pathNode":{"id":3152,"name":"Allocation","nodeType":"IdentifierPath","referencedDeclaration":3107,"src":"1810:10:16"},"referencedDeclaration":3107,"src":"1810:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$3107_storage_ptr","typeString":"struct IStaking.Allocation"}},"visibility":"internal"}],"src":"1809:19:16"},"scope":3226,"src":"1726:103:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"98c657dc","id":3164,"implemented":false,"kind":"function","modifiers":[],"name":"getAllocationState","nameLocation":"1844:18:16","nodeType":"FunctionDefinition","parameters":{"id":3159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3158,"mutability":"mutable","name":"_escrowAddress","nameLocation":"1880:14:16","nodeType":"VariableDeclaration","scope":3164,"src":"1872:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3157,"name":"address","nodeType":"ElementaryTypeName","src":"1872:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1862:38:16"},"returnParameters":{"id":3163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3164,"src":"1924:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AllocationState_$3093","typeString":"enum IStaking.AllocationState"},"typeName":{"id":3161,"nodeType":"UserDefinedTypeName","pathNode":{"id":3160,"name":"AllocationState","nodeType":"IdentifierPath","referencedDeclaration":3093,"src":"1924:15:16"},"referencedDeclaration":3093,"src":"1924:15:16","typeDescriptions":{"typeIdentifier":"t_enum$_AllocationState_$3093","typeString":"enum IStaking.AllocationState"}},"visibility":"internal"}],"src":"1923:17:16"},"scope":3226,"src":"1835:106:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"63c28db1","id":3171,"implemented":false,"kind":"function","modifiers":[],"name":"getStakedTokens","nameLocation":"1956:15:16","nodeType":"FunctionDefinition","parameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3166,"mutability":"mutable","name":"_staker","nameLocation":"1980:7:16","nodeType":"VariableDeclaration","scope":3171,"src":"1972:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3165,"name":"address","nodeType":"ElementaryTypeName","src":"1972:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1971:17:16"},"returnParameters":{"id":3170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3171,"src":"2012:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3168,"name":"uint256","nodeType":"ElementaryTypeName","src":"2012:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2011:9:16"},"scope":3226,"src":"1947:74:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a23c44b1","id":3179,"implemented":false,"kind":"function","modifiers":[],"name":"getStaker","nameLocation":"2036:9:16","nodeType":"FunctionDefinition","parameters":{"id":3174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3173,"mutability":"mutable","name":"_staker","nameLocation":"2063:7:16","nodeType":"VariableDeclaration","scope":3179,"src":"2055:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3172,"name":"address","nodeType":"ElementaryTypeName","src":"2055:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2045:31:16"},"returnParameters":{"id":3178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3179,"src":"2100:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_memory_ptr","typeString":"struct Stakes.Staker"},"typeName":{"id":3176,"nodeType":"UserDefinedTypeName","pathNode":{"id":3175,"name":"Stakes.Staker","nodeType":"IdentifierPath","referencedDeclaration":3329,"src":"2100:13:16"},"referencedDeclaration":3329,"src":"2100:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"}},"visibility":"internal"}],"src":"2099:22:16"},"scope":3226,"src":"2027:95:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a694fc3a","id":3184,"implemented":false,"kind":"function","modifiers":[],"name":"stake","nameLocation":"2137:5:16","nodeType":"FunctionDefinition","parameters":{"id":3182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3181,"mutability":"mutable","name":"_tokens","nameLocation":"2151:7:16","nodeType":"VariableDeclaration","scope":3184,"src":"2143:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3180,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2142:17:16"},"returnParameters":{"id":3183,"nodeType":"ParameterList","parameters":[],"src":"2168:0:16"},"scope":3226,"src":"2128:41:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2e17de78","id":3189,"implemented":false,"kind":"function","modifiers":[],"name":"unstake","nameLocation":"2184:7:16","nodeType":"FunctionDefinition","parameters":{"id":3187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3186,"mutability":"mutable","name":"_tokens","nameLocation":"2200:7:16","nodeType":"VariableDeclaration","scope":3189,"src":"2192:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3185,"name":"uint256","nodeType":"ElementaryTypeName","src":"2192:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2191:17:16"},"returnParameters":{"id":3188,"nodeType":"ParameterList","parameters":[],"src":"2217:0:16"},"scope":3226,"src":"2175:43:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3ccfd60b","id":3192,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"2233:8:16","nodeType":"FunctionDefinition","parameters":{"id":3190,"nodeType":"ParameterList","parameters":[],"src":"2241:2:16"},"returnParameters":{"id":3191,"nodeType":"ParameterList","parameters":[],"src":"2252:0:16"},"scope":3226,"src":"2224:29:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3aa63c61","id":3203,"implemented":false,"kind":"function","modifiers":[],"name":"slash","nameLocation":"2268:5:16","nodeType":"FunctionDefinition","parameters":{"id":3201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3194,"mutability":"mutable","name":"_slasher","nameLocation":"2291:8:16","nodeType":"VariableDeclaration","scope":3203,"src":"2283:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3193,"name":"address","nodeType":"ElementaryTypeName","src":"2283:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3196,"mutability":"mutable","name":"_staker","nameLocation":"2317:7:16","nodeType":"VariableDeclaration","scope":3203,"src":"2309:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3195,"name":"address","nodeType":"ElementaryTypeName","src":"2309:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3198,"mutability":"mutable","name":"_escrowAddress","nameLocation":"2342:14:16","nodeType":"VariableDeclaration","scope":3203,"src":"2334:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3197,"name":"address","nodeType":"ElementaryTypeName","src":"2334:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3200,"mutability":"mutable","name":"_tokens","nameLocation":"2374:7:16","nodeType":"VariableDeclaration","scope":3203,"src":"2366:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3199,"name":"uint256","nodeType":"ElementaryTypeName","src":"2366:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2273:114:16"},"returnParameters":{"id":3202,"nodeType":"ParameterList","parameters":[],"src":"2396:0:16"},"scope":3226,"src":"2259:138:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b78b52df","id":3210,"implemented":false,"kind":"function","modifiers":[],"name":"allocate","nameLocation":"2412:8:16","nodeType":"FunctionDefinition","parameters":{"id":3208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3205,"mutability":"mutable","name":"escrowAddress","nameLocation":"2429:13:16","nodeType":"VariableDeclaration","scope":3210,"src":"2421:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3204,"name":"address","nodeType":"ElementaryTypeName","src":"2421:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3207,"mutability":"mutable","name":"_tokens","nameLocation":"2452:7:16","nodeType":"VariableDeclaration","scope":3210,"src":"2444:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3206,"name":"uint256","nodeType":"ElementaryTypeName","src":"2444:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2420:40:16"},"returnParameters":{"id":3209,"nodeType":"ParameterList","parameters":[],"src":"2469:0:16"},"scope":3226,"src":"2403:67:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"68f39a07","id":3215,"implemented":false,"kind":"function","modifiers":[],"name":"closeAllocation","nameLocation":"2485:15:16","nodeType":"FunctionDefinition","parameters":{"id":3213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3212,"mutability":"mutable","name":"_escrowAddress","nameLocation":"2509:14:16","nodeType":"VariableDeclaration","scope":3215,"src":"2501:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3211,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2500:24:16"},"returnParameters":{"id":3214,"nodeType":"ParameterList","parameters":[],"src":"2533:0:16"},"scope":3226,"src":"2476:58:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"70b97cb5","id":3225,"implemented":false,"kind":"function","modifiers":[],"name":"getListOfStakers","nameLocation":"2549:16:16","nodeType":"FunctionDefinition","parameters":{"id":3216,"nodeType":"ParameterList","parameters":[],"src":"2565:2:16"},"returnParameters":{"id":3224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3225,"src":"2615:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3217,"name":"address","nodeType":"ElementaryTypeName","src":"2615:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3218,"nodeType":"ArrayTypeName","src":"2615:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3225,"src":"2633:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Staker_$3329_memory_ptr_$dyn_memory_ptr","typeString":"struct Stakes.Staker[]"},"typeName":{"baseType":{"id":3221,"nodeType":"UserDefinedTypeName","pathNode":{"id":3220,"name":"Stakes.Staker","nodeType":"IdentifierPath","referencedDeclaration":3329,"src":"2633:13:16"},"referencedDeclaration":3329,"src":"2633:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"}},"id":3222,"nodeType":"ArrayTypeName","src":"2633:15:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Staker_$3329_storage_$dyn_storage_ptr","typeString":"struct Stakes.Staker[]"}},"visibility":"internal"}],"src":"2614:42:16"},"scope":3226,"src":"2540:117:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3227,"src":"89:2570:16","usedErrors":[]}],"src":"33:2627:16"},"id":16},"contracts/interfaces/THXCTokenInterface.sol":{"ast":{"absolutePath":"contracts/interfaces/THXCTokenInterface.sol","exportedSymbols":{"THXCTokenInterface":[3308]},"id":3309,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3228,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"33:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"THXCTokenInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3308,"linearizedBaseContracts":[3308],"name":"THXCTokenInterface","nameLocation":"69:18:17","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"id":3236,"name":"Transfer","nameLocation":"100:8:17","nodeType":"EventDefinition","parameters":{"id":3235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3230,"indexed":true,"mutability":"mutable","name":"_from","nameLocation":"125:5:17","nodeType":"VariableDeclaration","scope":3236,"src":"109:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3229,"name":"address","nodeType":"ElementaryTypeName","src":"109:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3232,"indexed":true,"mutability":"mutable","name":"_to","nameLocation":"148:3:17","nodeType":"VariableDeclaration","scope":3236,"src":"132:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3231,"name":"address","nodeType":"ElementaryTypeName","src":"132:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3234,"indexed":false,"mutability":"mutable","name":"_value","nameLocation":"161:6:17","nodeType":"VariableDeclaration","scope":3236,"src":"153:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3233,"name":"uint256","nodeType":"ElementaryTypeName","src":"153:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"108:60:17"},"src":"94:75:17"},{"anonymous":false,"id":3244,"name":"Approval","nameLocation":"180:8:17","nodeType":"EventDefinition","parameters":{"id":3243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3238,"indexed":true,"mutability":"mutable","name":"_owner","nameLocation":"214:6:17","nodeType":"VariableDeclaration","scope":3244,"src":"198:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3237,"name":"address","nodeType":"ElementaryTypeName","src":"198:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3240,"indexed":true,"mutability":"mutable","name":"_spender","nameLocation":"246:8:17","nodeType":"VariableDeclaration","scope":3244,"src":"230:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3239,"name":"address","nodeType":"ElementaryTypeName","src":"230:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3242,"indexed":false,"mutability":"mutable","name":"_value","nameLocation":"272:6:17","nodeType":"VariableDeclaration","scope":3244,"src":"264:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3241,"name":"uint256","nodeType":"ElementaryTypeName","src":"264:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"188:96:17"},"src":"174:111:17"},{"documentation":{"id":3245,"nodeType":"StructuredDocumentation","src":"291:106:17","text":"@param _owner The address from which the balance will be retrieved\n @return balance The balance"},"functionSelector":"70a08231","id":3252,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"411:9:17","nodeType":"FunctionDefinition","parameters":{"id":3248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3247,"mutability":"mutable","name":"_owner","nameLocation":"429:6:17","nodeType":"VariableDeclaration","scope":3252,"src":"421:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3246,"name":"address","nodeType":"ElementaryTypeName","src":"421:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"420:16:17"},"returnParameters":{"id":3251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3250,"mutability":"mutable","name":"balance","nameLocation":"468:7:17","nodeType":"VariableDeclaration","scope":3252,"src":"460:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3249,"name":"uint256","nodeType":"ElementaryTypeName","src":"460:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"459:17:17"},"scope":3308,"src":"402:75:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3253,"nodeType":"StructuredDocumentation","src":"483:233:17","text":"@notice send `_value` token to `_to` from `msg.sender`\n @param _to The address of the recipient\n @param _value The amount of token to be transferred\n @return success Whether the transfer was successful or not"},"functionSelector":"a9059cbb","id":3262,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"730:8:17","nodeType":"FunctionDefinition","parameters":{"id":3258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3255,"mutability":"mutable","name":"_to","nameLocation":"756:3:17","nodeType":"VariableDeclaration","scope":3262,"src":"748:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3254,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3257,"mutability":"mutable","name":"_value","nameLocation":"777:6:17","nodeType":"VariableDeclaration","scope":3262,"src":"769:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3256,"name":"uint256","nodeType":"ElementaryTypeName","src":"769:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"738:51:17"},"returnParameters":{"id":3261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3260,"mutability":"mutable","name":"success","nameLocation":"813:7:17","nodeType":"VariableDeclaration","scope":3262,"src":"808:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3259,"name":"bool","nodeType":"ElementaryTypeName","src":"808:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"807:14:17"},"scope":3308,"src":"721:101:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3263,"nodeType":"StructuredDocumentation","src":"828:318:17","text":"@notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\n @param _from The address of the sender\n @param _to The address of the recipient\n @param _value The amount of token to be transferred\n @return success Whether the transfer was successful or not"},"functionSelector":"23b872dd","id":3274,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1160:12:17","nodeType":"FunctionDefinition","parameters":{"id":3270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3265,"mutability":"mutable","name":"_from","nameLocation":"1190:5:17","nodeType":"VariableDeclaration","scope":3274,"src":"1182:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3264,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3267,"mutability":"mutable","name":"_to","nameLocation":"1213:3:17","nodeType":"VariableDeclaration","scope":3274,"src":"1205:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3266,"name":"address","nodeType":"ElementaryTypeName","src":"1205:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3269,"mutability":"mutable","name":"_value","nameLocation":"1234:6:17","nodeType":"VariableDeclaration","scope":3274,"src":"1226:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3268,"name":"uint256","nodeType":"ElementaryTypeName","src":"1226:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1172:74:17"},"returnParameters":{"id":3273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3272,"mutability":"mutable","name":"success","nameLocation":"1270:7:17","nodeType":"VariableDeclaration","scope":3274,"src":"1265:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3271,"name":"bool","nodeType":"ElementaryTypeName","src":"1265:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1264:14:17"},"scope":3308,"src":"1151:128:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e816d8d8","id":3287,"implemented":false,"kind":"function","modifiers":[],"name":"transferBulk","nameLocation":"1294:12:17","nodeType":"FunctionDefinition","parameters":{"id":3283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3277,"mutability":"mutable","name":"_tos","nameLocation":"1335:4:17","nodeType":"VariableDeclaration","scope":3287,"src":"1316:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3275,"name":"address","nodeType":"ElementaryTypeName","src":"1316:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3276,"nodeType":"ArrayTypeName","src":"1316:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3280,"mutability":"mutable","name":"_values","nameLocation":"1368:7:17","nodeType":"VariableDeclaration","scope":3287,"src":"1349:26:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3278,"name":"uint256","nodeType":"ElementaryTypeName","src":"1349:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3279,"nodeType":"ArrayTypeName","src":"1349:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3282,"mutability":"mutable","name":"_txId","nameLocation":"1393:5:17","nodeType":"VariableDeclaration","scope":3287,"src":"1385:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1385:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1306:98:17"},"returnParameters":{"id":3286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3285,"mutability":"mutable","name":"_bulkCount","nameLocation":"1431:10:17","nodeType":"VariableDeclaration","scope":3287,"src":"1423:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3284,"name":"uint256","nodeType":"ElementaryTypeName","src":"1423:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1422:20:17"},"scope":3308,"src":"1285:158:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3288,"nodeType":"StructuredDocumentation","src":"1449:286:17","text":"@notice `msg.sender` approves `_spender` to spend `_value` tokens\n @param _spender The address of the account able to transfer the tokens\n @param _value The amount of tokens to be approved for transfer\n @return success Whether the approval was successful or not"},"functionSelector":"095ea7b3","id":3297,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"1749:7:17","nodeType":"FunctionDefinition","parameters":{"id":3293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3290,"mutability":"mutable","name":"_spender","nameLocation":"1774:8:17","nodeType":"VariableDeclaration","scope":3297,"src":"1766:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3289,"name":"address","nodeType":"ElementaryTypeName","src":"1766:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3292,"mutability":"mutable","name":"_value","nameLocation":"1800:6:17","nodeType":"VariableDeclaration","scope":3297,"src":"1792:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3291,"name":"uint256","nodeType":"ElementaryTypeName","src":"1792:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1756:56:17"},"returnParameters":{"id":3296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3295,"mutability":"mutable","name":"success","nameLocation":"1836:7:17","nodeType":"VariableDeclaration","scope":3297,"src":"1831:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3294,"name":"bool","nodeType":"ElementaryTypeName","src":"1831:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1830:14:17"},"scope":3308,"src":"1740:105:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3298,"nodeType":"StructuredDocumentation","src":"1851:207:17","text":"@param _owner The address of the account owning tokens\n @param _spender The address of the account able to transfer the tokens\n @return remaining Amount of remaining tokens allowed to spent"},"functionSelector":"dd62ed3e","id":3307,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"2072:9:17","nodeType":"FunctionDefinition","parameters":{"id":3303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3300,"mutability":"mutable","name":"_owner","nameLocation":"2099:6:17","nodeType":"VariableDeclaration","scope":3307,"src":"2091:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3299,"name":"address","nodeType":"ElementaryTypeName","src":"2091:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3302,"mutability":"mutable","name":"_spender","nameLocation":"2123:8:17","nodeType":"VariableDeclaration","scope":3307,"src":"2115:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3301,"name":"address","nodeType":"ElementaryTypeName","src":"2115:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2081:56:17"},"returnParameters":{"id":3306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3305,"mutability":"mutable","name":"remaining","nameLocation":"2169:9:17","nodeType":"VariableDeclaration","scope":3307,"src":"2161:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3304,"name":"uint256","nodeType":"ElementaryTypeName","src":"2161:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2160:19:17"},"scope":3308,"src":"2063:117:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3309,"src":"59:2123:17","usedErrors":[]}],"src":"33:2150:17"},"id":17},"contracts/libs/Stakes.sol":{"ast":{"absolutePath":"contracts/libs/Stakes.sol","exportedSymbols":{"Math":[4056],"SafeMath":[4252],"Stakes":[3615]},"id":3616,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3310,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"33:24:18"},{"absolutePath":"contracts/utils/SafeMath.sol","file":"../utils/SafeMath.sol","id":3311,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3616,"sourceUnit":4253,"src":"59:31:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/Math.sol","file":"../utils/Math.sol","id":3312,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3616,"sourceUnit":4057,"src":"91:27:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Stakes","contractDependencies":[],"contractKind":"library","documentation":{"id":3313,"nodeType":"StructuredDocumentation","src":"120:88:18","text":" @title Structures, methods and data are available to manage the staker state."},"fullyImplemented":true,"id":3615,"linearizedBaseContracts":[3615],"name":"Stakes","nameLocation":"217:6:18","nodeType":"ContractDefinition","nodes":[{"id":3316,"libraryName":{"id":3314,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":4252,"src":"236:8:18"},"nodeType":"UsingForDirective","src":"230:27:18","typeName":{"id":3315,"name":"uint256","nodeType":"ElementaryTypeName","src":"249:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":3320,"libraryName":{"id":3317,"name":"Stakes","nodeType":"IdentifierPath","referencedDeclaration":3615,"src":"268:6:18"},"nodeType":"UsingForDirective","src":"262:31:18","typeName":{"id":3319,"nodeType":"UserDefinedTypeName","pathNode":{"id":3318,"name":"Stakes.Staker","nodeType":"IdentifierPath","referencedDeclaration":3329,"src":"279:13:18"},"referencedDeclaration":3329,"src":"279:13:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"}}},{"canonicalName":"Stakes.Staker","id":3329,"members":[{"constant":false,"id":3322,"mutability":"mutable","name":"tokensStaked","nameLocation":"331:12:18","nodeType":"VariableDeclaration","scope":3329,"src":"323:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3321,"name":"uint256","nodeType":"ElementaryTypeName","src":"323:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3324,"mutability":"mutable","name":"tokensAllocated","nameLocation":"392:15:18","nodeType":"VariableDeclaration","scope":3329,"src":"384:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3323,"name":"uint256","nodeType":"ElementaryTypeName","src":"384:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3326,"mutability":"mutable","name":"tokensLocked","nameLocation":"454:12:18","nodeType":"VariableDeclaration","scope":3329,"src":"446:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3325,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3328,"mutability":"mutable","name":"tokensLockedUntil","nameLocation":"516:17:18","nodeType":"VariableDeclaration","scope":3329,"src":"508:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3327,"name":"uint256","nodeType":"ElementaryTypeName","src":"508:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Staker","nameLocation":"306:6:18","nodeType":"StructDefinition","scope":3615,"src":"299:269:18","visibility":"public"},{"body":{"id":3348,"nodeType":"Block","src":"794:69:18","statements":[{"expression":{"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3338,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"804:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":3340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tokensStaked","nodeType":"MemberAccess","referencedDeclaration":3322,"src":"804:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3344,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"848:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":3341,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"825:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":3342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensStaked","nodeType":"MemberAccess","referencedDeclaration":3322,"src":"825:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":4085,"src":"825:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"825:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"804:52:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3347,"nodeType":"ExpressionStatement","src":"804:52:18"}]},"documentation":{"id":3330,"nodeType":"StructuredDocumentation","src":"574:143:18","text":" @dev Deposit tokens to the staker stake.\n @param stake Staker struct\n @param _tokens Amount of tokens to deposit"},"id":3349,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"731:7:18","nodeType":"FunctionDefinition","parameters":{"id":3336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3333,"mutability":"mutable","name":"stake","nameLocation":"761:5:18","nodeType":"VariableDeclaration","scope":3349,"src":"739:27:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"},"typeName":{"id":3332,"nodeType":"UserDefinedTypeName","pathNode":{"id":3331,"name":"Stakes.Staker","nodeType":"IdentifierPath","referencedDeclaration":3329,"src":"739:13:18"},"referencedDeclaration":3329,"src":"739:13:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"}},"visibility":"internal"},{"constant":false,"id":3335,"mutability":"mutable","name":"_tokens","nameLocation":"776:7:18","nodeType":"VariableDeclaration","scope":3349,"src":"768:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3334,"name":"uint256","nodeType":"ElementaryTypeName","src":"768:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"738:46:18"},"returnParameters":{"id":3337,"nodeType":"ParameterList","parameters":[],"src":"794:0:18"},"scope":3615,"src":"722:141:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3368,"nodeType":"Block","src":"1091:69:18","statements":[{"expression":{"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3358,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"1101:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":3360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tokensStaked","nodeType":"MemberAccess","referencedDeclaration":3322,"src":"1101:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3364,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"1145:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":3361,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"1122:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":3362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensStaked","nodeType":"MemberAccess","referencedDeclaration":3322,"src":"1122:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":4102,"src":"1122:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1122:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1101:52:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3367,"nodeType":"ExpressionStatement","src":"1101:52:18"}]},"documentation":{"id":3350,"nodeType":"StructuredDocumentation","src":"869:145:18","text":" @dev Release tokens from the staker stake.\n @param stake Staker struct\n @param _tokens Amount of tokens to release"},"id":3369,"implemented":true,"kind":"function","modifiers":[],"name":"release","nameLocation":"1028:7:18","nodeType":"FunctionDefinition","parameters":{"id":3356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3353,"mutability":"mutable","name":"stake","nameLocation":"1058:5:18","nodeType":"VariableDeclaration","scope":3369,"src":"1036:27:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"},"typeName":{"id":3352,"nodeType":"UserDefinedTypeName","pathNode":{"id":3351,"name":"Stakes.Staker","nodeType":"IdentifierPath","referencedDeclaration":3329,"src":"1036:13:18"},"referencedDeclaration":3329,"src":"1036:13:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"}},"visibility":"internal"},{"constant":false,"id":3355,"mutability":"mutable","name":"_tokens","nameLocation":"1073:7:18","nodeType":"VariableDeclaration","scope":3369,"src":"1065:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3354,"name":"uint256","nodeType":"ElementaryTypeName","src":"1065:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1035:46:18"},"returnParameters":{"id":3357,"nodeType":"ParameterList","parameters":[],"src":"1091:0:18"},"scope":3615,"src":"1019:141:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3388,"nodeType":"Block","src":"1403:75:18","statements":[{"expression":{"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3378,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"1413:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":3380,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tokensAllocated","nodeType":"MemberAccess","referencedDeclaration":3324,"src":"1413:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3384,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"1463:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":3381,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"1437:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":3382,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensAllocated","nodeType":"MemberAccess","referencedDeclaration":3324,"src":"1437:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":4085,"src":"1437:25:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1437:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1413:58:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3387,"nodeType":"ExpressionStatement","src":"1413:58:18"}]},"documentation":{"id":3370,"nodeType":"StructuredDocumentation","src":"1166:159:18","text":" @dev Add tokens from the main stack to tokensAllocated.\n @param stake Staker struct\n @param _tokens Amount of tokens to allocate"},"id":3389,"implemented":true,"kind":"function","modifiers":[],"name":"allocate","nameLocation":"1339:8:18","nodeType":"FunctionDefinition","parameters":{"id":3376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3373,"mutability":"mutable","name":"stake","nameLocation":"1370:5:18","nodeType":"VariableDeclaration","scope":3389,"src":"1348:27:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"},"typeName":{"id":3372,"nodeType":"UserDefinedTypeName","pathNode":{"id":3371,"name":"Stakes.Staker","nodeType":"IdentifierPath","referencedDeclaration":3329,"src":"1348:13:18"},"referencedDeclaration":3329,"src":"1348:13:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"}},"visibility":"internal"},{"constant":false,"id":3375,"mutability":"mutable","name":"_tokens","nameLocation":"1385:7:18","nodeType":"VariableDeclaration","scope":3389,"src":"1377:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3374,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1347:46:18"},"returnParameters":{"id":3377,"nodeType":"ParameterList","parameters":[],"src":"1403:0:18"},"scope":3615,"src":"1330:148:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3408,"nodeType":"Block","src":"1737:75:18","statements":[{"expression":{"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3398,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"1747:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":3400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tokensAllocated","nodeType":"MemberAccess","referencedDeclaration":3324,"src":"1747:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3404,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"1797:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":3401,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"1771:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":3402,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensAllocated","nodeType":"MemberAccess","referencedDeclaration":3324,"src":"1771:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":4102,"src":"1771:25:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1771:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1747:58:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3407,"nodeType":"ExpressionStatement","src":"1747:58:18"}]},"documentation":{"id":3390,"nodeType":"StructuredDocumentation","src":"1484:173:18","text":" @dev Unallocate tokens from a escrowAddress back to the main stack.\n @param stake Staker struct\n @param _tokens Amount of tokens to unallocate"},"id":3409,"implemented":true,"kind":"function","modifiers":[],"name":"unallocate","nameLocation":"1671:10:18","nodeType":"FunctionDefinition","parameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3393,"mutability":"mutable","name":"stake","nameLocation":"1704:5:18","nodeType":"VariableDeclaration","scope":3409,"src":"1682:27:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"},"typeName":{"id":3392,"nodeType":"UserDefinedTypeName","pathNode":{"id":3391,"name":"Stakes.Staker","nodeType":"IdentifierPath","referencedDeclaration":3329,"src":"1682:13:18"},"referencedDeclaration":3329,"src":"1682:13:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"}},"visibility":"internal"},{"constant":false,"id":3395,"mutability":"mutable","name":"_tokens","nameLocation":"1719:7:18","nodeType":"VariableDeclaration","scope":3409,"src":"1711:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3394,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1681:46:18"},"returnParameters":{"id":3397,"nodeType":"ParameterList","parameters":[],"src":"1737:0:18"},"scope":3615,"src":"1662:150:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3467,"nodeType":"Block","src":"2165:474:18","statements":[{"assignments":[3421],"declarations":[{"constant":false,"id":3421,"mutability":"mutable","name":"lockingPeriod","nameLocation":"2183:13:18","nodeType":"VariableDeclaration","scope":3467,"src":"2175:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3420,"name":"uint256","nodeType":"ElementaryTypeName","src":"2175:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3423,"initialValue":{"id":3422,"name":"_period","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"2199:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2175:31:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3424,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"2221:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":3425,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensLocked","nodeType":"MemberAccess","referencedDeclaration":3326,"src":"2221:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2242:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2221:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3446,"nodeType":"IfStatement","src":"2217:286:18","trueBody":{"id":3445,"nodeType":"Block","src":"2245:258:18","statements":[{"expression":{"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3428,"name":"lockingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"2259:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":3433,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"2329:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":3434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensLockedUntil","nodeType":"MemberAccess","referencedDeclaration":3328,"src":"2329:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3435,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2354:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"2354:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3431,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"2313:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4056_$","typeString":"type(library Math)"}},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"diffOrZero","nodeType":"MemberAccess","referencedDeclaration":3739,"src":"2313:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2313:54:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3438,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"2410:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":3439,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensLocked","nodeType":"MemberAccess","referencedDeclaration":3326,"src":"2410:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3440,"name":"_period","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"2446:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3441,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"2471:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3429,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"2275:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4056_$","typeString":"type(library Math)"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"weightedAverage","nodeType":"MemberAccess","referencedDeclaration":3717,"src":"2275:20:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256) pure returns (uint256)"}},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2275:217:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2259:233:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3444,"nodeType":"ExpressionStatement","src":"2259:233:18"}]}},{"expression":{"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3447,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"2513:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":3449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tokensLocked","nodeType":"MemberAccess","referencedDeclaration":3326,"src":"2513:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3453,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"2557:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":3450,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"2534:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":3451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensLocked","nodeType":"MemberAccess","referencedDeclaration":3326,"src":"2534:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":4085,"src":"2534:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2534:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2513:52:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3456,"nodeType":"ExpressionStatement","src":"2513:52:18"},{"expression":{"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3457,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"2575:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":3459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tokensLockedUntil","nodeType":"MemberAccess","referencedDeclaration":3328,"src":"2575:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3463,"name":"lockingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"2618:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":3460,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2601:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"2601:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":4085,"src":"2601:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2601:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2575:57:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3466,"nodeType":"ExpressionStatement","src":"2575:57:18"}]},"documentation":{"id":3410,"nodeType":"StructuredDocumentation","src":"1818:220:18","text":" @dev Lock tokens until a lock period pass.\n @param stake Staker struct\n @param _tokens Amount of tokens to unstake\n @param _period Period in blocks that need to pass before withdrawal"},"id":3468,"implemented":true,"kind":"function","modifiers":[],"name":"lockTokens","nameLocation":"2052:10:18","nodeType":"FunctionDefinition","parameters":{"id":3418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3413,"mutability":"mutable","name":"stake","nameLocation":"2094:5:18","nodeType":"VariableDeclaration","scope":3468,"src":"2072:27:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"},"typeName":{"id":3412,"nodeType":"UserDefinedTypeName","pathNode":{"id":3411,"name":"Stakes.Staker","nodeType":"IdentifierPath","referencedDeclaration":3329,"src":"2072:13:18"},"referencedDeclaration":3329,"src":"2072:13:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"}},"visibility":"internal"},{"constant":false,"id":3415,"mutability":"mutable","name":"_tokens","nameLocation":"2117:7:18","nodeType":"VariableDeclaration","scope":3468,"src":"2109:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3414,"name":"uint256","nodeType":"ElementaryTypeName","src":"2109:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3417,"mutability":"mutable","name":"_period","nameLocation":"2142:7:18","nodeType":"VariableDeclaration","scope":3468,"src":"2134:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3416,"name":"uint256","nodeType":"ElementaryTypeName","src":"2134:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2062:93:18"},"returnParameters":{"id":3419,"nodeType":"ParameterList","parameters":[],"src":"2165:0:18"},"scope":3615,"src":"2043:596:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3499,"nodeType":"Block","src":"2870:159:18","statements":[{"expression":{"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3477,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"2880:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":3479,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tokensLocked","nodeType":"MemberAccess","referencedDeclaration":3326,"src":"2880:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3483,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"2924:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":3480,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"2901:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":3481,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensLocked","nodeType":"MemberAccess","referencedDeclaration":3326,"src":"2901:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":4102,"src":"2901:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2901:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2880:52:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3486,"nodeType":"ExpressionStatement","src":"2880:52:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3487,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"2946:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":3488,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensLocked","nodeType":"MemberAccess","referencedDeclaration":3326,"src":"2946:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2968:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2946:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3498,"nodeType":"IfStatement","src":"2942:81:18","trueBody":{"id":3497,"nodeType":"Block","src":"2971:52:18","statements":[{"expression":{"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3491,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"2985:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":3493,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tokensLockedUntil","nodeType":"MemberAccess","referencedDeclaration":3328,"src":"2985:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3011:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2985:27:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3496,"nodeType":"ExpressionStatement","src":"2985:27:18"}]}}]},"documentation":{"id":3469,"nodeType":"StructuredDocumentation","src":"2645:121:18","text":" @dev Unlock tokens.\n @param stake Staker struct\n @param _tokens Amount of tokens to unkock"},"id":3500,"implemented":true,"kind":"function","modifiers":[],"name":"unlockTokens","nameLocation":"2780:12:18","nodeType":"FunctionDefinition","parameters":{"id":3475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3472,"mutability":"mutable","name":"stake","nameLocation":"2824:5:18","nodeType":"VariableDeclaration","scope":3500,"src":"2802:27:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"},"typeName":{"id":3471,"nodeType":"UserDefinedTypeName","pathNode":{"id":3470,"name":"Stakes.Staker","nodeType":"IdentifierPath","referencedDeclaration":3329,"src":"2802:13:18"},"referencedDeclaration":3329,"src":"2802:13:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"}},"visibility":"internal"},{"constant":false,"id":3474,"mutability":"mutable","name":"_tokens","nameLocation":"2847:7:18","nodeType":"VariableDeclaration","scope":3500,"src":"2839:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3473,"name":"uint256","nodeType":"ElementaryTypeName","src":"2839:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2792:68:18"},"returnParameters":{"id":3476,"nodeType":"ParameterList","parameters":[],"src":"2870:0:18"},"scope":3615,"src":"2771:258:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3534,"nodeType":"Block","src":"3292:246:18","statements":[{"assignments":[3510],"declarations":[{"constant":false,"id":3510,"mutability":"mutable","name":"tokensToWithdraw","nameLocation":"3310:16:18","nodeType":"VariableDeclaration","scope":3534,"src":"3302:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3509,"name":"uint256","nodeType":"ElementaryTypeName","src":"3302:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3514,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3511,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"3329:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":3512,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensWithdrawable","nodeType":"MemberAccess","referencedDeclaration":3614,"src":"3329:24:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Staker_$3329_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Staker_$3329_memory_ptr_$","typeString":"function (struct Stakes.Staker memory) view returns (uint256)"}},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3329:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3302:53:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3515,"name":"tokensToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"3370:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3389:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3370:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3531,"nodeType":"IfStatement","src":"3366:132:18","trueBody":{"id":3530,"nodeType":"Block","src":"3392:106:18","statements":[{"expression":{"arguments":[{"id":3521,"name":"tokensToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"3425:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3518,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"3406:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":3520,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"unlockTokens","nodeType":"MemberAccess","referencedDeclaration":3500,"src":"3406:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Staker_$3329_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_Staker_$3329_storage_ptr_$","typeString":"function (struct Stakes.Staker storage pointer,uint256)"}},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3406:36:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3523,"nodeType":"ExpressionStatement","src":"3406:36:18"},{"expression":{"arguments":[{"id":3527,"name":"tokensToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"3470:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3524,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"3456:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker storage pointer"}},"id":3526,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"release","nodeType":"MemberAccess","referencedDeclaration":3369,"src":"3456:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Staker_$3329_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_Staker_$3329_storage_ptr_$","typeString":"function (struct Stakes.Staker storage pointer,uint256)"}},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3456:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3529,"nodeType":"ExpressionStatement","src":"3456:31:18"}]}},{"expression":{"id":3532,"name":"tokensToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"3515:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3508,"id":3533,"nodeType":"Return","src":"3508:23:18"}]},"documentation":{"id":3501,"nodeType":"StructuredDocumentation","src":"3035:158:18","text":" @dev Return all tokens available for withdrawal.\n @param stake Staker struct\n @return Amount of tokens available for withdrawal"},"id":3535,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawTokens","nameLocation":"3207:14:18","nodeType":"FunctionDefinition","parameters":{"id":3505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3504,"mutability":"mutable","name":"stake","nameLocation":"3253:5:18","nodeType":"VariableDeclaration","scope":3535,"src":"3231:27:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"},"typeName":{"id":3503,"nodeType":"UserDefinedTypeName","pathNode":{"id":3502,"name":"Stakes.Staker","nodeType":"IdentifierPath","referencedDeclaration":3329,"src":"3231:13:18"},"referencedDeclaration":3329,"src":"3231:13:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"}},"visibility":"internal"}],"src":"3221:43:18"},"returnParameters":{"id":3508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3535,"src":"3283:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3506,"name":"uint256","nodeType":"ElementaryTypeName","src":"3283:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3282:9:18"},"scope":3615,"src":"3198:340:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3552,"nodeType":"Block","src":"3771:66:18","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3547,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"3811:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_memory_ptr","typeString":"struct Stakes.Staker memory"}},"id":3548,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensUsed","nodeType":"MemberAccess","referencedDeclaration":3570,"src":"3811:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Staker_$3329_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Staker_$3329_memory_ptr_$","typeString":"function (struct Stakes.Staker memory) pure returns (uint256)"}},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3811:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":3544,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"3788:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_memory_ptr","typeString":"struct Stakes.Staker memory"}},"id":3545,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensStaked","nodeType":"MemberAccess","referencedDeclaration":3322,"src":"3788:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":4102,"src":"3788:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3788:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3543,"id":3551,"nodeType":"Return","src":"3781:49:18"}]},"documentation":{"id":3536,"nodeType":"StructuredDocumentation","src":"3544:123:18","text":" @dev Return all tokens available in stake.\n @param stake Staker struct\n @return Token amount"},"id":3553,"implemented":true,"kind":"function","modifiers":[],"name":"tokensAvailable","nameLocation":"3681:15:18","nodeType":"FunctionDefinition","parameters":{"id":3540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3539,"mutability":"mutable","name":"stake","nameLocation":"3727:5:18","nodeType":"VariableDeclaration","scope":3553,"src":"3706:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_memory_ptr","typeString":"struct Stakes.Staker"},"typeName":{"id":3538,"nodeType":"UserDefinedTypeName","pathNode":{"id":3537,"name":"Stakes.Staker","nodeType":"IdentifierPath","referencedDeclaration":3329,"src":"3706:13:18"},"referencedDeclaration":3329,"src":"3706:13:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"}},"visibility":"internal"}],"src":"3696:42:18"},"returnParameters":{"id":3543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3553,"src":"3762:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3541,"name":"uint256","nodeType":"ElementaryTypeName","src":"3762:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3761:9:18"},"scope":3615,"src":"3672:165:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3569,"nodeType":"Block","src":"4092:69:18","statements":[{"expression":{"arguments":[{"expression":{"id":3565,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"4135:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_memory_ptr","typeString":"struct Stakes.Staker memory"}},"id":3566,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensLocked","nodeType":"MemberAccess","referencedDeclaration":3326,"src":"4135:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":3562,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"4109:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_memory_ptr","typeString":"struct Stakes.Staker memory"}},"id":3563,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensAllocated","nodeType":"MemberAccess","referencedDeclaration":3324,"src":"4109:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":4085,"src":"4109:25:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4109:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3561,"id":3568,"nodeType":"Return","src":"4102:52:18"}]},"documentation":{"id":3554,"nodeType":"StructuredDocumentation","src":"3843:150:18","text":" @dev Return all tokens used in allocations and locked for withdrawal.\n @param stake Staker struct\n @return Token amount"},"id":3570,"implemented":true,"kind":"function","modifiers":[],"name":"tokensUsed","nameLocation":"4007:10:18","nodeType":"FunctionDefinition","parameters":{"id":3558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3557,"mutability":"mutable","name":"stake","nameLocation":"4048:5:18","nodeType":"VariableDeclaration","scope":3570,"src":"4027:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_memory_ptr","typeString":"struct Stakes.Staker"},"typeName":{"id":3556,"nodeType":"UserDefinedTypeName","pathNode":{"id":3555,"name":"Stakes.Staker","nodeType":"IdentifierPath","referencedDeclaration":3329,"src":"4027:13:18"},"referencedDeclaration":3329,"src":"4027:13:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"}},"visibility":"internal"}],"src":"4017:42:18"},"returnParameters":{"id":3561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3570,"src":"4083:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3559,"name":"uint256","nodeType":"ElementaryTypeName","src":"4083:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4082:9:18"},"scope":3615,"src":"3998:163:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3586,"nodeType":"Block","src":"4415:66:18","statements":[{"expression":{"arguments":[{"expression":{"id":3582,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"4455:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_memory_ptr","typeString":"struct Stakes.Staker memory"}},"id":3583,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensLocked","nodeType":"MemberAccess","referencedDeclaration":3326,"src":"4455:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":3579,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"4432:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_memory_ptr","typeString":"struct Stakes.Staker memory"}},"id":3580,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensStaked","nodeType":"MemberAccess","referencedDeclaration":3322,"src":"4432:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":4102,"src":"4432:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4432:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3578,"id":3585,"nodeType":"Return","src":"4425:49:18"}]},"documentation":{"id":3571,"nodeType":"StructuredDocumentation","src":"4167:142:18","text":" @dev Return the amount of tokens staked which are not locked.\n @param stake Staker struct\n @return Token amount"},"id":3587,"implemented":true,"kind":"function","modifiers":[],"name":"tokensSecureStake","nameLocation":"4323:17:18","nodeType":"FunctionDefinition","parameters":{"id":3575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3574,"mutability":"mutable","name":"stake","nameLocation":"4371:5:18","nodeType":"VariableDeclaration","scope":3587,"src":"4350:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_memory_ptr","typeString":"struct Stakes.Staker"},"typeName":{"id":3573,"nodeType":"UserDefinedTypeName","pathNode":{"id":3572,"name":"Stakes.Staker","nodeType":"IdentifierPath","referencedDeclaration":3329,"src":"4350:13:18"},"referencedDeclaration":3329,"src":"4350:13:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"}},"visibility":"internal"}],"src":"4340:42:18"},"returnParameters":{"id":3578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3587,"src":"4406:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3576,"name":"uint256","nodeType":"ElementaryTypeName","src":"4406:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4405:9:18"},"scope":3615,"src":"4314:167:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3613,"nodeType":"Block","src":"4730:194:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3596,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"4757:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_memory_ptr","typeString":"struct Stakes.Staker memory"}},"id":3597,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensLockedUntil","nodeType":"MemberAccess","referencedDeclaration":3328,"src":"4757:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4757:28:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3600,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4801:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"4801:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3602,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"4816:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_memory_ptr","typeString":"struct Stakes.Staker memory"}},"id":3603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensLockedUntil","nodeType":"MemberAccess","referencedDeclaration":3328,"src":"4816:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4801:38:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4757:82:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3609,"nodeType":"IfStatement","src":"4740:143:18","trueBody":{"id":3608,"nodeType":"Block","src":"4850:33:18","statements":[{"expression":{"hexValue":"30","id":3606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4871:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3595,"id":3607,"nodeType":"Return","src":"4864:8:18"}]}},{"expression":{"expression":{"id":3610,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"4899:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_memory_ptr","typeString":"struct Stakes.Staker memory"}},"id":3611,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensLocked","nodeType":"MemberAccess","referencedDeclaration":3326,"src":"4899:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3595,"id":3612,"nodeType":"Return","src":"4892:25:18"}]},"documentation":{"id":3588,"nodeType":"StructuredDocumentation","src":"4487:136:18","text":" @dev Tokens available for withdrawal after lock period.\n @param stake Staker struct\n @return Token amount"},"id":3614,"implemented":true,"kind":"function","modifiers":[],"name":"tokensWithdrawable","nameLocation":"4637:18:18","nodeType":"FunctionDefinition","parameters":{"id":3592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3591,"mutability":"mutable","name":"stake","nameLocation":"4686:5:18","nodeType":"VariableDeclaration","scope":3614,"src":"4665:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_memory_ptr","typeString":"struct Stakes.Staker"},"typeName":{"id":3590,"nodeType":"UserDefinedTypeName","pathNode":{"id":3589,"name":"Stakes.Staker","nodeType":"IdentifierPath","referencedDeclaration":3329,"src":"4665:13:18"},"referencedDeclaration":3329,"src":"4665:13:18","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$3329_storage_ptr","typeString":"struct Stakes.Staker"}},"visibility":"internal"}],"src":"4655:42:18"},"returnParameters":{"id":3595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3614,"src":"4721:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3593,"name":"uint256","nodeType":"ElementaryTypeName","src":"4721:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4720:9:18"},"scope":3615,"src":"4628:296:18","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3616,"src":"209:4717:18","usedErrors":[]}],"src":"33:4894:18"},"id":18},"contracts/utils/Math.sol":{"ast":{"absolutePath":"contracts/utils/Math.sol","exportedSymbols":{"Math":[4056],"SafeMath":[4252]},"id":4057,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3617,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"33:24:19"},{"absolutePath":"contracts/utils/SafeMath.sol","file":"./SafeMath.sol","id":3618,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4057,"sourceUnit":4253,"src":"59:24:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3619,"nodeType":"StructuredDocumentation","src":"85:94:19","text":" @title Math Library\n @notice A collection of functions to perform math operations"},"fullyImplemented":true,"id":4056,"linearizedBaseContracts":[4056],"name":"Math","nameLocation":"188:4:19","nodeType":"ContractDefinition","nodes":[{"id":3622,"libraryName":{"id":3620,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":4252,"src":"205:8:19"},"nodeType":"UsingForDirective","src":"199:27:19","typeName":{"id":3621,"name":"uint256","nodeType":"ElementaryTypeName","src":"218:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"canonicalName":"Math.Rounding","id":3626,"members":[{"id":3623,"name":"Down","nameLocation":"256:4:19","nodeType":"EnumValue","src":"256:4:19"},{"id":3624,"name":"Up","nameLocation":"298:2:19","nodeType":"EnumValue","src":"298:2:19"},{"id":3625,"name":"Zero","nameLocation":"329:4:19","nodeType":"EnumValue","src":"329:4:19"}],"name":"Rounding","nameLocation":"237:8:19","nodeType":"EnumDefinition","src":"232:122:19"},{"body":{"id":3643,"nodeType":"Block","src":"491:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3636,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"508:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3637,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"512:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"508:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3640,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"520:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"508:13:19","trueExpression":{"id":3639,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"516:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3635,"id":3642,"nodeType":"Return","src":"501:20:19"}]},"documentation":{"id":3627,"nodeType":"StructuredDocumentation","src":"360:59:19","text":" @dev Returns the largest of two numbers."},"id":3644,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"433:3:19","nodeType":"FunctionDefinition","parameters":{"id":3632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3629,"mutability":"mutable","name":"a","nameLocation":"445:1:19","nodeType":"VariableDeclaration","scope":3644,"src":"437:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3628,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3631,"mutability":"mutable","name":"b","nameLocation":"456:1:19","nodeType":"VariableDeclaration","scope":3644,"src":"448:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3630,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"436:22:19"},"returnParameters":{"id":3635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3644,"src":"482:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3633,"name":"uint256","nodeType":"ElementaryTypeName","src":"482:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"481:9:19"},"scope":4056,"src":"424:104:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3661,"nodeType":"Block","src":"666:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3654,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3647,"src":"683:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3655,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"687:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"683:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3658,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"695:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"683:13:19","trueExpression":{"id":3657,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3647,"src":"691:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3653,"id":3660,"nodeType":"Return","src":"676:20:19"}]},"documentation":{"id":3645,"nodeType":"StructuredDocumentation","src":"534:60:19","text":" @dev Returns the smallest of two numbers."},"id":3662,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"608:3:19","nodeType":"FunctionDefinition","parameters":{"id":3650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3647,"mutability":"mutable","name":"a","nameLocation":"620:1:19","nodeType":"VariableDeclaration","scope":3662,"src":"612:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3646,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3649,"mutability":"mutable","name":"b","nameLocation":"631:1:19","nodeType":"VariableDeclaration","scope":3662,"src":"623:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3648,"name":"uint256","nodeType":"ElementaryTypeName","src":"623:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"611:22:19"},"returnParameters":{"id":3653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3662,"src":"657:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3651,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:9:19"},"scope":4056,"src":"599:104:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3684,"nodeType":"Block","src":"887:82:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3672,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"942:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3673,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"946:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"942:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3675,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"941:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3676,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"952:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3677,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"956:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"952:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3679,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"951:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"961:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"951:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3671,"id":3683,"nodeType":"Return","src":"934:28:19"}]},"documentation":{"id":3663,"nodeType":"StructuredDocumentation","src":"709:102:19","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3685,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"825:7:19","nodeType":"FunctionDefinition","parameters":{"id":3668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3665,"mutability":"mutable","name":"a","nameLocation":"841:1:19","nodeType":"VariableDeclaration","scope":3685,"src":"833:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3664,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3667,"mutability":"mutable","name":"b","nameLocation":"852:1:19","nodeType":"VariableDeclaration","scope":3685,"src":"844:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3666,"name":"uint256","nodeType":"ElementaryTypeName","src":"844:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"832:22:19"},"returnParameters":{"id":3671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3685,"src":"878:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3669,"name":"uint256","nodeType":"ElementaryTypeName","src":"878:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"877:9:19"},"scope":4056,"src":"816:153:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3716,"nodeType":"Block","src":"1541:136:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3712,"name":"weightB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"1648:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3710,"name":"weightA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"1636:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":4085,"src":"1636:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1636:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":3706,"name":"weightB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"1605:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3704,"name":"valueB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"1594:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":4165,"src":"1594:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1594:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3701,"name":"weightA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"1581:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3699,"name":"valueA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"1570:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":4165,"src":"1570:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1570:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":4085,"src":"1570:23:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1570:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":4182,"src":"1570:48:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1570:100:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3698,"id":3715,"nodeType":"Return","src":"1551:119:19"}]},"documentation":{"id":3686,"nodeType":"StructuredDocumentation","src":"975:400:19","text":" @dev Calculates the weighted average of two values pondering each of these\n values based on configured weights. The contribution of each value N is\n weightN/(weightA + weightB).\n @param valueA The amount for value A\n @param weightA The weight to use for value A\n @param valueB The amount for value B\n @param weightB The weight to use for value B"},"id":3717,"implemented":true,"kind":"function","modifiers":[],"name":"weightedAverage","nameLocation":"1389:15:19","nodeType":"FunctionDefinition","parameters":{"id":3695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3688,"mutability":"mutable","name":"valueA","nameLocation":"1422:6:19","nodeType":"VariableDeclaration","scope":3717,"src":"1414:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3687,"name":"uint256","nodeType":"ElementaryTypeName","src":"1414:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3690,"mutability":"mutable","name":"weightA","nameLocation":"1446:7:19","nodeType":"VariableDeclaration","scope":3717,"src":"1438:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3689,"name":"uint256","nodeType":"ElementaryTypeName","src":"1438:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3692,"mutability":"mutable","name":"valueB","nameLocation":"1471:6:19","nodeType":"VariableDeclaration","scope":3717,"src":"1463:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3691,"name":"uint256","nodeType":"ElementaryTypeName","src":"1463:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3694,"mutability":"mutable","name":"weightB","nameLocation":"1495:7:19","nodeType":"VariableDeclaration","scope":3717,"src":"1487:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3693,"name":"uint256","nodeType":"ElementaryTypeName","src":"1487:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1404:104:19"},"returnParameters":{"id":3698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3717,"src":"1532:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3696,"name":"uint256","nodeType":"ElementaryTypeName","src":"1532:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1531:9:19"},"scope":4056,"src":"1380:297:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3738,"nodeType":"Block","src":"1849:46:19","statements":[{"expression":{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3727,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"1867:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3728,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"1871:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1867:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3730,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1866:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1887:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1866:22:19","trueExpression":{"arguments":[{"id":3733,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"1882:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3731,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"1876:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":4102,"src":"1876:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1876:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3726,"id":3737,"nodeType":"Return","src":"1859:29:19"}]},"documentation":{"id":3718,"nodeType":"StructuredDocumentation","src":"1683:87:19","text":" @dev Returns the difference between two numbers or zero if negative."},"id":3739,"implemented":true,"kind":"function","modifiers":[],"name":"diffOrZero","nameLocation":"1784:10:19","nodeType":"FunctionDefinition","parameters":{"id":3723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3720,"mutability":"mutable","name":"x","nameLocation":"1803:1:19","nodeType":"VariableDeclaration","scope":3739,"src":"1795:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3719,"name":"uint256","nodeType":"ElementaryTypeName","src":"1795:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3722,"mutability":"mutable","name":"y","nameLocation":"1814:1:19","nodeType":"VariableDeclaration","scope":3739,"src":"1806:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3721,"name":"uint256","nodeType":"ElementaryTypeName","src":"1806:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1794:22:19"},"returnParameters":{"id":3726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3739,"src":"1840:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3724,"name":"uint256","nodeType":"ElementaryTypeName","src":"1840:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1839:9:19"},"scope":4056,"src":"1775:120:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3763,"nodeType":"Block","src":"2165:123:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3749,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"2253:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2258:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2253:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3753,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"2267:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2271:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2267:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3756,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2266:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3757,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"2276:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2266:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2280:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2266:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2253:28:19","trueExpression":{"hexValue":"30","id":3752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2262:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3748,"id":3762,"nodeType":"Return","src":"2246:35:19"}]},"documentation":{"id":3740,"nodeType":"StructuredDocumentation","src":"1901:188:19","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":3764,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"2103:7:19","nodeType":"FunctionDefinition","parameters":{"id":3745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3742,"mutability":"mutable","name":"a","nameLocation":"2119:1:19","nodeType":"VariableDeclaration","scope":3764,"src":"2111:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3741,"name":"uint256","nodeType":"ElementaryTypeName","src":"2111:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3744,"mutability":"mutable","name":"b","nameLocation":"2130:1:19","nodeType":"VariableDeclaration","scope":3764,"src":"2122:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3743,"name":"uint256","nodeType":"ElementaryTypeName","src":"2122:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2110:22:19"},"returnParameters":{"id":3748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3764,"src":"2156:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3746,"name":"uint256","nodeType":"ElementaryTypeName","src":"2156:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2155:9:19"},"scope":4056,"src":"2094:194:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3892,"nodeType":"Block","src":"2475:854:19","statements":[{"assignments":[3773],"declarations":[{"constant":false,"id":3773,"mutability":"mutable","name":"result","nameLocation":"2493:6:19","nodeType":"VariableDeclaration","scope":3892,"src":"2485:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3772,"name":"uint256","nodeType":"ElementaryTypeName","src":"2485:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3775,"initialValue":{"hexValue":"30","id":3774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2502:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2485:18:19"},{"id":3889,"nodeType":"UncheckedBlock","src":"2513:787:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"2541:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2550:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2556:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"2550:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"2541:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3792,"nodeType":"IfStatement","src":"2537:103:19","trueBody":{"id":3791,"nodeType":"Block","src":"2560:80:19","statements":[{"expression":{"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"2578:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2587:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2593:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"2587:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"2578:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3786,"nodeType":"ExpressionStatement","src":"2578:17:19"},{"expression":{"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3787,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"2613:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2623:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"2613:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3790,"nodeType":"ExpressionStatement","src":"2613:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"2657:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2666:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2672:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"2666:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"2657:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3809,"nodeType":"IfStatement","src":"2653:103:19","trueBody":{"id":3808,"nodeType":"Block","src":"2676:80:19","statements":[{"expression":{"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"2694:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2703:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2709:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"2703:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"2694:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3803,"nodeType":"ExpressionStatement","src":"2694:17:19"},{"expression":{"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3804,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"2729:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2739:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"2729:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3807,"nodeType":"ExpressionStatement","src":"2729:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"2773:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2782:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2788:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"2782:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"2773:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3826,"nodeType":"IfStatement","src":"2769:103:19","trueBody":{"id":3825,"nodeType":"Block","src":"2792:80:19","statements":[{"expression":{"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"2810:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2819:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2825:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"2819:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"2810:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3820,"nodeType":"ExpressionStatement","src":"2810:17:19"},{"expression":{"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3821,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"2845:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2855:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"2845:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3824,"nodeType":"ExpressionStatement","src":"2845:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"2889:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2898:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2904:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"2898:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"2889:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3843,"nodeType":"IfStatement","src":"2885:100:19","trueBody":{"id":3842,"nodeType":"Block","src":"2907:78:19","statements":[{"expression":{"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"2925:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2934:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2940:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"2934:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"2925:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3837,"nodeType":"ExpressionStatement","src":"2925:16:19"},{"expression":{"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3838,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"2959:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2969:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"2959:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3841,"nodeType":"ExpressionStatement","src":"2959:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"3002:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3011:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3017:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3011:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"3002:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3860,"nodeType":"IfStatement","src":"2998:100:19","trueBody":{"id":3859,"nodeType":"Block","src":"3020:78:19","statements":[{"expression":{"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"3038:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3047:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3053:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3047:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"3038:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3854,"nodeType":"ExpressionStatement","src":"3038:16:19"},{"expression":{"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3855,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"3072:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3082:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3072:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3858,"nodeType":"ExpressionStatement","src":"3072:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"3115:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3124:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3130:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3124:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"3115:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3877,"nodeType":"IfStatement","src":"3111:100:19","trueBody":{"id":3876,"nodeType":"Block","src":"3133:78:19","statements":[{"expression":{"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"3151:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3160:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3166:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3160:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"3151:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3871,"nodeType":"ExpressionStatement","src":"3151:16:19"},{"expression":{"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3872,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"3185:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3195:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3185:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3875,"nodeType":"ExpressionStatement","src":"3185:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"3228:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3237:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3243:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3237:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"3228:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3888,"nodeType":"IfStatement","src":"3224:66:19","trueBody":{"id":3887,"nodeType":"Block","src":"3246:44:19","statements":[{"expression":{"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3883,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"3264:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3274:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3264:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3886,"nodeType":"ExpressionStatement","src":"3264:11:19"}]}}]},{"expression":{"id":3890,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"3316:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3771,"id":3891,"nodeType":"Return","src":"3309:13:19"}]},"documentation":{"id":3765,"nodeType":"StructuredDocumentation","src":"2294:114:19","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3893,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"2422:5:19","nodeType":"FunctionDefinition","parameters":{"id":3768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3767,"mutability":"mutable","name":"value","nameLocation":"2436:5:19","nodeType":"VariableDeclaration","scope":3893,"src":"2428:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3766,"name":"uint256","nodeType":"ElementaryTypeName","src":"2428:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2427:15:19"},"returnParameters":{"id":3771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3893,"src":"2466:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3769,"name":"uint256","nodeType":"ElementaryTypeName","src":"2466:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2465:9:19"},"scope":4056,"src":"2413:916:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3928,"nodeType":"Block","src":"3586:199:19","statements":[{"id":3927,"nodeType":"UncheckedBlock","src":"3596:183:19","statements":[{"assignments":[3905],"declarations":[{"constant":false,"id":3905,"mutability":"mutable","name":"result","nameLocation":"3628:6:19","nodeType":"VariableDeclaration","scope":3927,"src":"3620:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3904,"name":"uint256","nodeType":"ElementaryTypeName","src":"3620:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3909,"initialValue":{"arguments":[{"id":3907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"3643:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3906,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3893,3929],"referencedDeclaration":3893,"src":"3637:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3637:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3620:29:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3910,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"3686:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3626","typeString":"enum Math.Rounding"},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3911,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"3712:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3626","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3912,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"3724:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3626_$","typeString":"type(enum Math.Rounding)"}},"id":3913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3624,"src":"3724:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3626","typeString":"enum Math.Rounding"}},"src":"3712:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3739:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3916,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"3745:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3739:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"3754:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3739:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3712:47:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3766:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3712:55:19","trueExpression":{"hexValue":"31","id":3921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3762:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3924,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3711:57:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3686:82:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3903,"id":3926,"nodeType":"Return","src":"3663:105:19"}]}]},"documentation":{"id":3894,"nodeType":"StructuredDocumentation","src":"3335:143:19","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3929,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"3492:5:19","nodeType":"FunctionDefinition","parameters":{"id":3900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3896,"mutability":"mutable","name":"value","nameLocation":"3515:5:19","nodeType":"VariableDeclaration","scope":3929,"src":"3507:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3895,"name":"uint256","nodeType":"ElementaryTypeName","src":"3507:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3899,"mutability":"mutable","name":"rounding","nameLocation":"3539:8:19","nodeType":"VariableDeclaration","scope":3929,"src":"3530:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3626","typeString":"enum Math.Rounding"},"typeName":{"id":3898,"nodeType":"UserDefinedTypeName","pathNode":{"id":3897,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":3626,"src":"3530:8:19"},"referencedDeclaration":3626,"src":"3530:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3626","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"3497:56:19"},"returnParameters":{"id":3903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3929,"src":"3577:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3901,"name":"uint256","nodeType":"ElementaryTypeName","src":"3577:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3576:9:19"},"scope":4056,"src":"3483:302:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4015,"nodeType":"Block","src":"4099:600:19","statements":[{"assignments":[3938],"declarations":[{"constant":false,"id":3938,"mutability":"mutable","name":"result","nameLocation":"4117:6:19","nodeType":"VariableDeclaration","scope":4015,"src":"4109:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3937,"name":"uint256","nodeType":"ElementaryTypeName","src":"4109:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3940,"initialValue":{"hexValue":"30","id":3939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4126:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4109:18:19"},{"id":4012,"nodeType":"UncheckedBlock","src":"4137:533:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"4165:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4174:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"4165:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4180:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4165:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3955,"nodeType":"IfStatement","src":"4161:98:19","trueBody":{"id":3954,"nodeType":"Block","src":"4183:76:19","statements":[{"expression":{"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"4201:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4211:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"4201:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3949,"nodeType":"ExpressionStatement","src":"4201:13:19"},{"expression":{"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3950,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"4232:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4242:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"4232:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3953,"nodeType":"ExpressionStatement","src":"4232:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"4276:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4285:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"4276:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4290:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4276:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3970,"nodeType":"IfStatement","src":"4272:95:19","trueBody":{"id":3969,"nodeType":"Block","src":"4293:74:19","statements":[{"expression":{"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"4311:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4321:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"4311:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3964,"nodeType":"ExpressionStatement","src":"4311:12:19"},{"expression":{"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3965,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"4341:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4351:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"4341:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3968,"nodeType":"ExpressionStatement","src":"4341:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"4384:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4393:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4384:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4398:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4384:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3985,"nodeType":"IfStatement","src":"4380:95:19","trueBody":{"id":3984,"nodeType":"Block","src":"4401:74:19","statements":[{"expression":{"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"4419:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4429:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4419:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3979,"nodeType":"ExpressionStatement","src":"4419:12:19"},{"expression":{"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3980,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"4449:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4459:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4449:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3983,"nodeType":"ExpressionStatement","src":"4449:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"4492:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4501:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"4492:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4506:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4492:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4000,"nodeType":"IfStatement","src":"4488:95:19","trueBody":{"id":3999,"nodeType":"Block","src":"4509:74:19","statements":[{"expression":{"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"4527:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4537:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"4527:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3994,"nodeType":"ExpressionStatement","src":"4527:12:19"},{"expression":{"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3995,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"4557:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4567:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4557:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3998,"nodeType":"ExpressionStatement","src":"4557:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"4600:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4609:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"4600:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4613:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4600:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4011,"nodeType":"IfStatement","src":"4596:64:19","trueBody":{"id":4010,"nodeType":"Block","src":"4616:44:19","statements":[{"expression":{"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4006,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"4634:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4644:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4634:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4009,"nodeType":"ExpressionStatement","src":"4634:11:19"}]}}]},{"expression":{"id":4013,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"4686:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3936,"id":4014,"nodeType":"Return","src":"4679:13:19"}]},"documentation":{"id":3930,"nodeType":"StructuredDocumentation","src":"3791:240:19","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4016,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"4045:6:19","nodeType":"FunctionDefinition","parameters":{"id":3933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3932,"mutability":"mutable","name":"value","nameLocation":"4060:5:19","nodeType":"VariableDeclaration","scope":4016,"src":"4052:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3931,"name":"uint256","nodeType":"ElementaryTypeName","src":"4052:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4051:15:19"},"returnParameters":{"id":3936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4016,"src":"4090:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3934,"name":"uint256","nodeType":"ElementaryTypeName","src":"4090:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4089:9:19"},"scope":4056,"src":"4036:663:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4054,"nodeType":"Block","src":"4957:205:19","statements":[{"id":4053,"nodeType":"UncheckedBlock","src":"4967:189:19","statements":[{"assignments":[4028],"declarations":[{"constant":false,"id":4028,"mutability":"mutable","name":"result","nameLocation":"4999:6:19","nodeType":"VariableDeclaration","scope":4053,"src":"4991:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4027,"name":"uint256","nodeType":"ElementaryTypeName","src":"4991:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4032,"initialValue":{"arguments":[{"id":4030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"5015:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4029,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4016,4055],"referencedDeclaration":4016,"src":"5008:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5008:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4991:30:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4033,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"5058:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3626","typeString":"enum Math.Rounding"},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4034,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"5084:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3626","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4035,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"5096:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3626_$","typeString":"type(enum Math.Rounding)"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3624,"src":"5096:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3626","typeString":"enum Math.Rounding"}},"src":"5084:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5111:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4039,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"5117:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":4040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5126:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"5117:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4042,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5116:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5111:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"5131:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5111:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5084:52:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5143:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5084:60:19","trueExpression":{"hexValue":"31","id":4047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5139:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4050,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5083:62:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5058:87:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4026,"id":4052,"nodeType":"Return","src":"5035:110:19"}]}]},"documentation":{"id":4017,"nodeType":"StructuredDocumentation","src":"4705:143:19","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4055,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"4862:6:19","nodeType":"FunctionDefinition","parameters":{"id":4023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4019,"mutability":"mutable","name":"value","nameLocation":"4886:5:19","nodeType":"VariableDeclaration","scope":4055,"src":"4878:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4018,"name":"uint256","nodeType":"ElementaryTypeName","src":"4878:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4022,"mutability":"mutable","name":"rounding","nameLocation":"4910:8:19","nodeType":"VariableDeclaration","scope":4055,"src":"4901:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3626","typeString":"enum Math.Rounding"},"typeName":{"id":4021,"nodeType":"UserDefinedTypeName","pathNode":{"id":4020,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":3626,"src":"4901:8:19"},"referencedDeclaration":3626,"src":"4901:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3626","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"4868:56:19"},"returnParameters":{"id":4026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4055,"src":"4948:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4024,"name":"uint256","nodeType":"ElementaryTypeName","src":"4948:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4947:9:19"},"scope":4056,"src":"4853:309:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4057,"src":"180:4984:19","usedErrors":[]}],"src":"33:5132:19"},"id":19},"contracts/utils/SafeMath.sol":{"ast":{"absolutePath":"contracts/utils/SafeMath.sol","exportedSymbols":{"SafeMath":[4252]},"id":4253,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4058,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"33:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMath","contractDependencies":[],"contractKind":"library","documentation":{"id":4059,"nodeType":"StructuredDocumentation","src":"59:563:20","text":" @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":4252,"linearizedBaseContracts":[4252],"name":"SafeMath","nameLocation":"631:8:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":4084,"nodeType":"Block","src":"942:109:20","statements":[{"assignments":[4070],"declarations":[{"constant":false,"id":4070,"mutability":"mutable","name":"c","nameLocation":"960:1:20","nodeType":"VariableDeclaration","scope":4084,"src":"952:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4069,"name":"uint256","nodeType":"ElementaryTypeName","src":"952:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4074,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4071,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"964:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4072,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"968:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"964:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"952:17:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4076,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"987:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4077,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"992:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"987:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206164646974696f6e206f766572666c6f77","id":4079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"995:29:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""},"value":"SafeMath: addition overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""}],"id":4075,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"979:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"979:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4081,"nodeType":"ExpressionStatement","src":"979:46:20"},{"expression":{"id":4082,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"1043:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4068,"id":4083,"nodeType":"Return","src":"1036:8:20"}]},"documentation":{"id":4060,"nodeType":"StructuredDocumentation","src":"646:224:20","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":4085,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"884:3:20","nodeType":"FunctionDefinition","parameters":{"id":4065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4062,"mutability":"mutable","name":"a","nameLocation":"896:1:20","nodeType":"VariableDeclaration","scope":4085,"src":"888:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4061,"name":"uint256","nodeType":"ElementaryTypeName","src":"888:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4064,"mutability":"mutable","name":"b","nameLocation":"907:1:20","nodeType":"VariableDeclaration","scope":4085,"src":"899:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4063,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"887:22:20"},"returnParameters":{"id":4068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4085,"src":"933:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4066,"name":"uint256","nodeType":"ElementaryTypeName","src":"933:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"932:9:20"},"scope":4252,"src":"875:176:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4101,"nodeType":"Block","src":"1389:67:20","statements":[{"expression":{"arguments":[{"id":4096,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"1410:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4097,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"1413:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"536166654d6174683a207375627472616374696f6e206f766572666c6f77","id":4098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1416:32:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""},"value":"SafeMath: subtraction overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""}],"id":4095,"name":"sub","nodeType":"Identifier","overloadedDeclarations":[4102,4130],"referencedDeclaration":4130,"src":"1406:3:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1406:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4094,"id":4100,"nodeType":"Return","src":"1399:50:20"}]},"documentation":{"id":4086,"nodeType":"StructuredDocumentation","src":"1057:260:20","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":4102,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"1331:3:20","nodeType":"FunctionDefinition","parameters":{"id":4091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4088,"mutability":"mutable","name":"a","nameLocation":"1343:1:20","nodeType":"VariableDeclaration","scope":4102,"src":"1335:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4087,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4090,"mutability":"mutable","name":"b","nameLocation":"1354:1:20","nodeType":"VariableDeclaration","scope":4102,"src":"1346:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4089,"name":"uint256","nodeType":"ElementaryTypeName","src":"1346:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1334:22:20"},"returnParameters":{"id":4094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4102,"src":"1380:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4092,"name":"uint256","nodeType":"ElementaryTypeName","src":"1380:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1379:9:20"},"scope":4252,"src":"1322:134:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4129,"nodeType":"Block","src":"1872:92:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4115,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"1890:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4116,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"1895:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1890:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4118,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"1898:12:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4114,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1882:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1882:29:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4120,"nodeType":"ExpressionStatement","src":"1882:29:20"},{"assignments":[4122],"declarations":[{"constant":false,"id":4122,"mutability":"mutable","name":"c","nameLocation":"1929:1:20","nodeType":"VariableDeclaration","scope":4129,"src":"1921:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4121,"name":"uint256","nodeType":"ElementaryTypeName","src":"1921:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4126,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4123,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"1933:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4124,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"1937:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1933:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1921:17:20"},{"expression":{"id":4127,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"1956:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4113,"id":4128,"nodeType":"Return","src":"1949:8:20"}]},"documentation":{"id":4103,"nodeType":"StructuredDocumentation","src":"1462:280:20","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":4130,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"1756:3:20","nodeType":"FunctionDefinition","parameters":{"id":4110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4105,"mutability":"mutable","name":"a","nameLocation":"1777:1:20","nodeType":"VariableDeclaration","scope":4130,"src":"1769:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4104,"name":"uint256","nodeType":"ElementaryTypeName","src":"1769:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4107,"mutability":"mutable","name":"b","nameLocation":"1796:1:20","nodeType":"VariableDeclaration","scope":4130,"src":"1788:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4106,"name":"uint256","nodeType":"ElementaryTypeName","src":"1788:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4109,"mutability":"mutable","name":"errorMessage","nameLocation":"1821:12:20","nodeType":"VariableDeclaration","scope":4130,"src":"1807:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4108,"name":"string","nodeType":"ElementaryTypeName","src":"1807:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1759:80:20"},"returnParameters":{"id":4113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4130,"src":"1863:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4111,"name":"uint256","nodeType":"ElementaryTypeName","src":"1863:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1862:9:20"},"scope":4252,"src":"1747:217:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4164,"nodeType":"Block","src":"2278:392:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4140,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"2510:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2515:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2510:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4146,"nodeType":"IfStatement","src":"2506:45:20","trueBody":{"id":4145,"nodeType":"Block","src":"2518:33:20","statements":[{"expression":{"hexValue":"30","id":4143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2539:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4139,"id":4144,"nodeType":"Return","src":"2532:8:20"}]}},{"assignments":[4148],"declarations":[{"constant":false,"id":4148,"mutability":"mutable","name":"c","nameLocation":"2569:1:20","nodeType":"VariableDeclaration","scope":4164,"src":"2561:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4147,"name":"uint256","nodeType":"ElementaryTypeName","src":"2561:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4152,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4149,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"2573:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4150,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"2577:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2573:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2561:17:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4154,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"2596:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4155,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"2600:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2596:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4157,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"2605:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2596:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77","id":4159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2608:35:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""},"value":"SafeMath: multiplication overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""}],"id":4153,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2588:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2588:56:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4161,"nodeType":"ExpressionStatement","src":"2588:56:20"},{"expression":{"id":4162,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"2662:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4139,"id":4163,"nodeType":"Return","src":"2655:8:20"}]},"documentation":{"id":4131,"nodeType":"StructuredDocumentation","src":"1970:236:20","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":4165,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"2220:3:20","nodeType":"FunctionDefinition","parameters":{"id":4136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4133,"mutability":"mutable","name":"a","nameLocation":"2232:1:20","nodeType":"VariableDeclaration","scope":4165,"src":"2224:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4132,"name":"uint256","nodeType":"ElementaryTypeName","src":"2224:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4135,"mutability":"mutable","name":"b","nameLocation":"2243:1:20","nodeType":"VariableDeclaration","scope":4165,"src":"2235:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4134,"name":"uint256","nodeType":"ElementaryTypeName","src":"2235:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2223:22:20"},"returnParameters":{"id":4139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4165,"src":"2269:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4137,"name":"uint256","nodeType":"ElementaryTypeName","src":"2269:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2268:9:20"},"scope":4252,"src":"2211:459:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4181,"nodeType":"Block","src":"3199:63:20","statements":[{"expression":{"arguments":[{"id":4176,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"3220:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4177,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"3223:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"536166654d6174683a206469766973696f6e206279207a65726f","id":4178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3226:28:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""},"value":"SafeMath: division by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""}],"id":4175,"name":"div","nodeType":"Identifier","overloadedDeclarations":[4182,4210],"referencedDeclaration":4210,"src":"3216:3:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3216:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4174,"id":4180,"nodeType":"Return","src":"3209:46:20"}]},"documentation":{"id":4166,"nodeType":"StructuredDocumentation","src":"2676:451:20","text":" @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":4182,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3141:3:20","nodeType":"FunctionDefinition","parameters":{"id":4171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4168,"mutability":"mutable","name":"a","nameLocation":"3153:1:20","nodeType":"VariableDeclaration","scope":4182,"src":"3145:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4167,"name":"uint256","nodeType":"ElementaryTypeName","src":"3145:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4170,"mutability":"mutable","name":"b","nameLocation":"3164:1:20","nodeType":"VariableDeclaration","scope":4182,"src":"3156:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4169,"name":"uint256","nodeType":"ElementaryTypeName","src":"3156:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3144:22:20"},"returnParameters":{"id":4174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4182,"src":"3190:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4172,"name":"uint256","nodeType":"ElementaryTypeName","src":"3190:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3189:9:20"},"scope":4252,"src":"3132:130:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4209,"nodeType":"Block","src":"3869:177:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4195,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"3887:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3891:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3887:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4198,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"3894:12:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4194,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3879:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3879:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4200,"nodeType":"ExpressionStatement","src":"3879:28:20"},{"assignments":[4202],"declarations":[{"constant":false,"id":4202,"mutability":"mutable","name":"c","nameLocation":"3925:1:20","nodeType":"VariableDeclaration","scope":4209,"src":"3917:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4201,"name":"uint256","nodeType":"ElementaryTypeName","src":"3917:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4206,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4203,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"3929:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4204,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"3933:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3929:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3917:17:20"},{"expression":{"id":4207,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"4038:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4193,"id":4208,"nodeType":"Return","src":"4031:8:20"}]},"documentation":{"id":4183,"nodeType":"StructuredDocumentation","src":"3268:471:20","text":" @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":4210,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3753:3:20","nodeType":"FunctionDefinition","parameters":{"id":4190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4185,"mutability":"mutable","name":"a","nameLocation":"3774:1:20","nodeType":"VariableDeclaration","scope":4210,"src":"3766:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4184,"name":"uint256","nodeType":"ElementaryTypeName","src":"3766:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4187,"mutability":"mutable","name":"b","nameLocation":"3793:1:20","nodeType":"VariableDeclaration","scope":4210,"src":"3785:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4186,"name":"uint256","nodeType":"ElementaryTypeName","src":"3785:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4189,"mutability":"mutable","name":"errorMessage","nameLocation":"3818:12:20","nodeType":"VariableDeclaration","scope":4210,"src":"3804:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4188,"name":"string","nodeType":"ElementaryTypeName","src":"3804:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3756:80:20"},"returnParameters":{"id":4193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4210,"src":"3860:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4191,"name":"uint256","nodeType":"ElementaryTypeName","src":"3860:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3859:9:20"},"scope":4252,"src":"3744:302:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4226,"nodeType":"Block","src":"4564:61:20","statements":[{"expression":{"arguments":[{"id":4221,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"4585:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4222,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"4588:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"536166654d6174683a206d6f64756c6f206279207a65726f","id":4223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4591:26:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""},"value":"SafeMath: modulo by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""}],"id":4220,"name":"mod","nodeType":"Identifier","overloadedDeclarations":[4227,4251],"referencedDeclaration":4251,"src":"4581:3:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4581:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4219,"id":4225,"nodeType":"Return","src":"4574:44:20"}]},"documentation":{"id":4211,"nodeType":"StructuredDocumentation","src":"4052:440:20","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":4227,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4506:3:20","nodeType":"FunctionDefinition","parameters":{"id":4216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4213,"mutability":"mutable","name":"a","nameLocation":"4518:1:20","nodeType":"VariableDeclaration","scope":4227,"src":"4510:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4212,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4215,"mutability":"mutable","name":"b","nameLocation":"4529:1:20","nodeType":"VariableDeclaration","scope":4227,"src":"4521:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4214,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:20"},"returnParameters":{"id":4219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4227,"src":"4555:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4217,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:20"},"scope":4252,"src":"4497:128:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4250,"nodeType":"Block","src":"5221:68:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4240,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"5239:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5244:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5239:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4243,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"5247:12:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4239,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5231:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5231:29:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4245,"nodeType":"ExpressionStatement","src":"5231:29:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4246,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"5277:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4247,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"5281:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5277:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4238,"id":4249,"nodeType":"Return","src":"5270:12:20"}]},"documentation":{"id":4228,"nodeType":"StructuredDocumentation","src":"4631:460:20","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":4251,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"5105:3:20","nodeType":"FunctionDefinition","parameters":{"id":4235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"mutability":"mutable","name":"a","nameLocation":"5126:1:20","nodeType":"VariableDeclaration","scope":4251,"src":"5118:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4229,"name":"uint256","nodeType":"ElementaryTypeName","src":"5118:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4232,"mutability":"mutable","name":"b","nameLocation":"5145:1:20","nodeType":"VariableDeclaration","scope":4251,"src":"5137:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4231,"name":"uint256","nodeType":"ElementaryTypeName","src":"5137:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4234,"mutability":"mutable","name":"errorMessage","nameLocation":"5170:12:20","nodeType":"VariableDeclaration","scope":4251,"src":"5156:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4233,"name":"string","nodeType":"ElementaryTypeName","src":"5156:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5108:80:20"},"returnParameters":{"id":4238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4251,"src":"5212:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4236,"name":"uint256","nodeType":"ElementaryTypeName","src":"5212:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5211:9:20"},"scope":4252,"src":"5096:193:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4253,"src":"623:4668:20","usedErrors":[]}],"src":"33:5259:20"},"id":20}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e89863421b4014b96a4b62be76eb3b9f0a8afe9684664a6f389124c0964bfe5c\",\"dweb:/ipfs/Qmbk7xr1irpDuU1WdxXgxELBXxs61rHhCgod7heVcvFx16\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"IERC1967Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":\"IERC1967Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"IERC1822ProxiableUpgradeable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":\"IERC1822ProxiableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ERC1967UpgradeUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":\"ERC1967UpgradeUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x7795808e3899c805254e3ae58074b20f799b466e3f43e057e47bedee5fb771f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://319853a2a682f3f72411507242669ef5e76e0ad3457be53102439709ee8948f0\",\"dweb:/ipfs/QmRtm4Ese9u4jfxXyuWPXLwzenwFotuQjAWV7rXtZTB1E9\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"IBeaconUpgradeable":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":\"IBeaconUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x7795808e3899c805254e3ae58074b20f799b466e3f43e057e47bedee5fb771f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://319853a2a682f3f72411507242669ef5e76e0ad3457be53102439709ee8948f0\",\"dweb:/ipfs/QmRtm4Ese9u4jfxXyuWPXLwzenwFotuQjAWV7rXtZTB1E9\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xefb41f5c1a00249b7a99f0782f8c557865605426a3fb6e5fe9ae334293ae4f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90def55e5782595aabc13f57780c02d3613e5226f20ce6c1709503a63fdeb58f\",\"dweb:/ipfs/Qmb5vcymmNEZUJMaHmYxnhvGJDEsGMae4YjcHwkA74jy99\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"IERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol":{"IERC20PermitUpgradeable":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":\"IERC20PermitUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x07e881de3b9f6d2c07909f193f24b96c7fe4ea60013260f3f25aecd8bab3c2f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fed09b97ccb0ff9ba9b6a94224f1d489026bf6b4b7279bfe64fb6e8749dee4d\",\"dweb:/ipfs/QmcRAzaSP1UnGr4vrGkfJmB2L9aiTYoXfV1Lg9gqrVRWn8\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol":{"SafeERC20Upgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202701f67f95fdc3467f6f8396f7e89abe41a78d5a27404e292db25b2b964e0e0e64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 ADD 0xF6 PUSH32 0x95FDC3467F6F8396F7E89ABE41A78D5A27404E292DB25B2B964E0E0E64736F6C PUSH4 0x43000809 STOP CALLER ","sourceMap":"734:6366:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;734:6366:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202701f67f95fdc3467f6f8396f7e89abe41a78d5a27404e292db25b2b964e0e0e64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 ADD 0xF6 PUSH32 0x95FDC3467F6F8396F7E89ABE41A78D5A27404E292DB25B2B964E0E0E64736F6C PUSH4 0x43000809 STOP CALLER ","sourceMap":"734:6366:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":\"SafeERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x07e881de3b9f6d2c07909f193f24b96c7fe4ea60013260f3f25aecd8bab3c2f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fed09b97ccb0ff9ba9b6a94224f1d489026bf6b4b7279bfe64fb6e8749dee4d\",\"dweb:/ipfs/QmcRAzaSP1UnGr4vrGkfJmB2L9aiTYoXfV1Lg9gqrVRWn8\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x23b997be73d3dd46885262704f0f8cfc7273fdadfe303d37969a9561373972b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d03ebe5406134f0c4a017dee625ff615031194493bd1e88504e5c8fae55bc166\",\"dweb:/ipfs/QmUZV5bMbgk2PAkV3coouSeSainHN2jhqaQDJaA7hQRyu2\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a88cb92064a5999c821155b5bdbd5dceeefce65ac8aedba4853fe7c500c7326e64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 DUP13 0xB9 KECCAK256 PUSH5 0xA5999C8211 SSTORE 0xB5 0xBD 0xBD 0x5D 0xCE 0xEE 0xFC 0xE6 GAS 0xC8 0xAE 0xDB LOG4 DUP6 EXTCODEHASH 0xE7 0xC5 STOP 0xC7 ORIGIN PUSH15 0x64736F6C6343000809003300000000 ","sourceMap":"194:9180:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9180:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a88cb92064a5999c821155b5bdbd5dceeefce65ac8aedba4853fe7c500c7326e64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 DUP13 0xB9 KECCAK256 PUSH5 0xA5999C8211 SSTORE 0xB5 0xBD 0xBD 0x5D 0xCE 0xEE 0xFC 0xE6 GAS 0xC8 0xAE 0xDB LOG4 DUP6 EXTCODEHASH 0xE7 0xC5 STOP 0xC7 ORIGIN PUSH15 0x64736F6C6343000809003300000000 ","sourceMap":"194:9180:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"StorageSlotUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab32e57fe95e44022fe1b7d2b8406509c91bb5d1a058e29bbc254143b2f5c7d164736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB ORIGIN 0xE5 PUSH32 0xE95E44022FE1B7D2B8406509C91BB5D1A058E29BBC254143B2F5C7D164736F6C PUSH4 0x43000809 STOP CALLER ","sourceMap":"1420:2696:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1420:2696:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab32e57fe95e44022fe1b7d2b8406509c91bb5d1a058e29bbc254143b2f5c7d164736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB ORIGIN 0xE5 PUSH32 0xE95E44022FE1B7D2B8406509C91BB5D1A058E29BBC254143B2F5C7D164736F6C PUSH4 0x43000809 STOP CALLER ","sourceMap":"1420:2696:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":\"StorageSlotUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]}},\"version\":1}"}},"contracts/Staking.sol":{"Staking":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokens","type":"uint256"},{"indexed":true,"internalType":"address","name":"escrowAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"closedAt","type":"uint256"}],"name":"AllocationClosed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint32","name":"lockPeriod","type":"uint32"}],"name":"SetLockPeriod","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"minimumStake","type":"uint256"}],"name":"SetMinumumStake","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"rewardPool","type":"address"}],"name":"SetRewardPool","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokens","type":"uint256"},{"indexed":true,"internalType":"address","name":"escrowAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"createdAt","type":"uint256"}],"name":"StakeAllocated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokens","type":"uint256"}],"name":"StakeDeposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokens","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"until","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokens","type":"uint256"},{"indexed":true,"internalType":"address","name":"escrowAddress","type":"address"},{"indexed":false,"internalType":"address","name":"slasher","type":"address"}],"name":"StakeSlashed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokens","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[{"internalType":"address","name":"_escrowAddress","type":"address"},{"internalType":"uint256","name":"_tokens","type":"uint256"}],"name":"allocate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"allocations","outputs":[{"internalType":"address","name":"escrowAddress","type":"address"},{"internalType":"address","name":"staker","type":"address"},{"internalType":"uint256","name":"tokens","type":"uint256"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"closedAt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_escrowAddress","type":"address"}],"name":"closeAllocation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_escrowAddress","type":"address"}],"name":"getAllocation","outputs":[{"components":[{"internalType":"address","name":"escrowAddress","type":"address"},{"internalType":"address","name":"staker","type":"address"},{"internalType":"uint256","name":"tokens","type":"uint256"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"closedAt","type":"uint256"}],"internalType":"struct IStaking.Allocation","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_escrowAddress","type":"address"}],"name":"getAllocationState","outputs":[{"internalType":"enum IStaking.AllocationState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getListOfStakers","outputs":[{"internalType":"address[]","name":"","type":"address[]"},{"components":[{"internalType":"uint256","name":"tokensStaked","type":"uint256"},{"internalType":"uint256","name":"tokensAllocated","type":"uint256"},{"internalType":"uint256","name":"tokensLocked","type":"uint256"},{"internalType":"uint256","name":"tokensLockedUntil","type":"uint256"}],"internalType":"struct Stakes.Staker[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_staker","type":"address"}],"name":"getStakedTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_staker","type":"address"}],"name":"getStaker","outputs":[{"components":[{"internalType":"uint256","name":"tokensStaked","type":"uint256"},{"internalType":"uint256","name":"tokensAllocated","type":"uint256"},{"internalType":"uint256","name":"tokensLocked","type":"uint256"},{"internalType":"uint256","name":"tokensLockedUntil","type":"uint256"}],"internalType":"struct Stakes.Staker","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_staker","type":"address"}],"name":"hasAvailableStake","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_staker","type":"address"}],"name":"hasStake","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_minimumStake","type":"uint256"},{"internalType":"uint32","name":"_lockPeriod","type":"uint32"}],"name":"initialize","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_escrowAddress","type":"address"}],"name":"isAllocation","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lockPeriod","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minimumStake","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewardPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_lockPeriod","type":"uint32"}],"name":"setLockPeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_minimumStake","type":"uint256"}],"name":"setMinimumStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_rewardPool","type":"address"}],"name":"setRewardPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_slasher","type":"address"},{"internalType":"address","name":"_staker","type":"address"},{"internalType":"address","name":"_escrowAddress","type":"address"},{"internalType":"uint256","name":"_tokens","type":"uint256"}],"name":"slash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokens","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"stakers","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"stakes","outputs":[{"internalType":"uint256","name":"tokensStaked","type":"uint256"},{"internalType":"uint256","name":"tokensAllocated","type":"uint256"},{"internalType":"uint256","name":"tokensLocked","type":"uint256"},{"internalType":"uint256","name":"tokensLockedUntil","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokens","type":"uint256"}],"name":"unstake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1912":{"entryPoint":null,"id":1912,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_648":{"entryPoint":38,"id":648,"parameterSlots":0,"returnSlots":0},"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:608:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"188:229:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"205:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"216:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"198:6:21"},"nodeType":"YulFunctionCall","src":"198:21:21"},"nodeType":"YulExpressionStatement","src":"198:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"239:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"250:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"235:3:21"},"nodeType":"YulFunctionCall","src":"235:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"255:2:21","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"228:6:21"},"nodeType":"YulFunctionCall","src":"228:30:21"},"nodeType":"YulExpressionStatement","src":"228:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"278:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"289:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"274:3:21"},"nodeType":"YulFunctionCall","src":"274:18:21"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469","kind":"string","nodeType":"YulLiteral","src":"294:34:21","type":"","value":"Initializable: contract is initi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"267:6:21"},"nodeType":"YulFunctionCall","src":"267:62:21"},"nodeType":"YulExpressionStatement","src":"267:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"349:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"360:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"345:3:21"},"nodeType":"YulFunctionCall","src":"345:18:21"},{"hexValue":"616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"365:9:21","type":"","value":"alizing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"338:6:21"},"nodeType":"YulFunctionCall","src":"338:37:21"},"nodeType":"YulExpressionStatement","src":"338:37:21"},{"nodeType":"YulAssignment","src":"384:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"396:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"407:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"392:3:21"},"nodeType":"YulFunctionCall","src":"392:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"384:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"165:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"179:4:21","type":""}],"src":"14:403:21"},{"body":{"nodeType":"YulBlock","src":"519:87:21","statements":[{"nodeType":"YulAssignment","src":"529:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"541:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"552:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"537:3:21"},"nodeType":"YulFunctionCall","src":"537:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"529:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"571:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"586:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"594:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"582:3:21"},"nodeType":"YulFunctionCall","src":"582:17:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"564:6:21"},"nodeType":"YulFunctionCall","src":"564:36:21"},"nodeType":"YulExpressionStatement","src":"564:36:21"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"488:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"499:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"510:4:21","type":""}],"src":"422:184:21"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Initializable: contract is initi\")\n        mstore(add(headStart, 96), \"alizing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x20 PUSH3 0x26 JUMP JUMPDEST PUSH3 0xE7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF SWAP1 DUP2 AND EQ PUSH3 0xE5 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x3D95 PUSH3 0x11F PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xB3A ADD MSTORE DUP2 DUP2 PUSH2 0xBEA ADD MSTORE DUP2 DUP2 PUSH2 0x1042 ADD MSTORE DUP2 DUP2 PUSH2 0x10F2 ADD MSTORE PUSH2 0x123B ADD MSTORE PUSH2 0x3D95 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C5AC81E GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xB78B52DF GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F6 JUMPI DUP1 PUSH4 0xF489F23B EQ PUSH2 0x716 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x736 JUMPI DUP1 PUSH4 0xFD5E6DD1 EQ PUSH2 0x763 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB78B52DF EQ PUSH2 0x65B JUMPI DUP1 PUSH4 0xE73E14BF EQ PUSH2 0x67B JUMPI DUP1 PUSH4 0xEC5FFAC2 EQ PUSH2 0x6C0 JUMPI DUP1 PUSH4 0xF1D60D66 EQ PUSH2 0x6D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5B6 JUMPI DUP1 PUSH4 0x98C657DC EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0xA23C44B1 EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C5AC81E EQ PUSH2 0x54B JUMPI DUP1 PUSH4 0x70B97CB5 EQ PUSH2 0x55E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0x78238C37 EQ PUSH2 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x52D1902D GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0x63C28DB1 EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0x66666AA9 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0x68F39A07 EQ PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x3FD8B02F EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0x52A9039C EQ PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x233E9903 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x233E9903 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x3AA63C61 EQ PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE022923 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x1AF963AA EQ PUSH2 0x2C4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x378B JUMP JUMPDEST PUSH2 0x783 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP2 SWAP1 PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 MLOAD AND DUP4 MSTORE DUP1 PUSH1 0x20 DUP6 ADD MLOAD AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A4 PUSH2 0x27D CALLDATASIZE PUSH1 0x4 PUSH2 0x378B JUMP JUMPDEST PUSH1 0xCD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x259 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E4 PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0x378B JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x259 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0x37A6 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x37A6 JUMP JUMPDEST PUSH2 0x86B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x378B JUMP JUMPDEST PUSH2 0xB22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x37BF JUMP JUMPDEST PUSH2 0xD25 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0x101F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCC SLOAD PUSH2 0x3A8 SWAP1 PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x259 JUMP JUMPDEST PUSH2 0x314 PUSH2 0x3CB CALLDATASIZE PUSH1 0x4 PUSH2 0x3839 JUMP JUMPDEST PUSH2 0x102A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x433 PUSH2 0x3EB CALLDATASIZE PUSH1 0x4 PUSH2 0x378B JUMP JUMPDEST PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND SWAP5 SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 DUP8 AND DUP2 MSTORE SWAP6 SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x259 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x488 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x259 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x488 PUSH2 0x4B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x378B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCA SLOAD PUSH2 0x506 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x259 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0x546 CALLDATASIZE PUSH1 0x4 PUSH2 0x378B JUMP JUMPDEST PUSH2 0x130D JUMP JUMPDEST PUSH2 0x314 PUSH2 0x559 CALLDATASIZE PUSH1 0x4 PUSH2 0x392D JUMP JUMPDEST PUSH2 0x1393 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x573 PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP3 SWAP2 SWAP1 PUSH2 0x3969 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0x1760 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0x5B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x378B JUMP JUMPDEST PUSH2 0x1772 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x506 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x601 PUSH2 0x5FC CALLDATASIZE PUSH1 0x4 PUSH2 0x378B JUMP JUMPDEST PUSH2 0x1783 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x3A54 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62E PUSH2 0x629 CALLDATASIZE PUSH1 0x4 PUSH2 0x378B JUMP JUMPDEST PUSH2 0x178E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x3A95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0x656 CALLDATASIZE PUSH1 0x4 PUSH2 0x37A6 JUMP JUMPDEST PUSH2 0x1814 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0x676 CALLDATASIZE PUSH1 0x4 PUSH2 0x3AC0 JUMP JUMPDEST PUSH2 0x1A72 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E4 PUSH2 0x696 CALLDATASIZE PUSH1 0x4 PUSH2 0x378B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x488 PUSH1 0xCB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E4 PUSH2 0x6F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x378B JUMP JUMPDEST PUSH2 0x1A7D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0x711 CALLDATASIZE PUSH1 0x4 PUSH2 0x378B JUMP JUMPDEST PUSH2 0x1AA2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0x731 CALLDATASIZE PUSH1 0x4 PUSH2 0x3AEA JUMP JUMPDEST PUSH2 0x1B56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC9 SLOAD PUSH2 0x506 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x506 PUSH2 0x77E CALLDATASIZE PUSH1 0x4 PUSH2 0x37A6 JUMP JUMPDEST PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x7E1 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x7EA DUP3 PUSH2 0x1B9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE DUP2 SWAP1 PUSH2 0x850 SWAP1 PUSH2 0x1C66 JUMP JUMPDEST GT SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x85F PUSH2 0x1C7C JUMP JUMPDEST PUSH2 0x868 DUP2 PUSH2 0x1CFD JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 PUSH2 0x8E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206265206120706F736974697665206E756D62657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 SLOAD DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE DUP3 SWAP1 PUSH2 0x91F SWAP1 PUSH2 0x1C66 JUMP JUMPDEST LT ISZERO PUSH2 0x987 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420616D6F756E7420746F20756E7374616B650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CF DUP4 PUSH2 0x9C9 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x1D9A JUMP JUMPDEST SWAP1 PUSH2 0x1DAA JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 PUSH2 0x9E0 JUMPI POP PUSH1 0xCB SLOAD DUP2 LT ISZERO JUMPDEST PUSH2 0xA6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C207374616B652069732062656C6F7720746865206D696E696D756D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207468726573686F6C6400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP4 SLOAD DUP2 MSTORE PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH2 0xAA6 SWAP1 PUSH2 0x1DF3 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xAB7 JUMPI PUSH2 0xAB7 CALLER PUSH2 0x1E20 JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH2 0xAD1 SWAP1 DUP5 SWAP1 DUP7 SWAP1 PUSH4 0xFFFFFFFF SWAP1 DUP2 AND SWAP1 PUSH2 0x1F32 AND JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x40 MLOAD CALLER SWAP3 PUSH32 0xA5AE833D0BB1DCD632D98A8B70973E8516812898E19BF27B70071EBC8DC52C01 SWAP3 PUSH2 0xB14 SWAP3 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ ISZERO PUSH2 0xBE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC5D PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH2 0xD09 DUP2 PUSH2 0x1F8A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x868 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH2 0xD2D PUSH2 0x1C7C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xDAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420626520612076616C69642061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE PUSH1 0xCF SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP3 PUSH2 0xE46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206265206120706F736974697665206E756D62657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD DUP4 GT ISZERO PUSH2 0xEDA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536C61736820746F6B656E732065786365656420616C6C6F6361746564206F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH2 0xEE4 DUP3 DUP5 PUSH2 0x21A5 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0xEF3 SWAP1 DUP5 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SSTORE PUSH2 0xF02 DUP3 DUP5 PUSH2 0x21C0 JUMP JUMPDEST PUSH1 0xCA SLOAD PUSH2 0xF25 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x21D2 JUMP JUMPDEST PUSH1 0xCA SLOAD PUSH1 0x40 MLOAD PUSH32 0xE2FF99EF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP9 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xE2FF99EF SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFBD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 DUP10 AND SWAP5 POP DUP10 AND SWAP3 POP PUSH32 0x71A8C830F4B619FC8248691F28F33646D6D9553A9FE6F7BA80E179FD391779BA SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1028 CALLER PUSH2 0x1E20 JUMP JUMPDEST JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ ISZERO PUSH2 0x10F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1165 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1208 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x1211 DUP3 PUSH2 0x1F8A JUMP JUMPDEST PUSH2 0x121D DUP3 DUP3 PUSH1 0x1 PUSH2 0x1F92 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x12E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x138A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420626520612076616C69642061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x868 DUP2 PUSH2 0x21F6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x13B3 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x13CD JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13CD JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x1459 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x14B7 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x14BF PUSH2 0x24B4 JUMP JUMPDEST PUSH2 0x14CA DUP5 DUP5 DUP5 PUSH2 0x2554 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x152D JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0xCE DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x159B JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1570 JUMPI JUMPDEST POP POP DUP4 MLOAD SWAP4 SWAP5 POP POP POP DUP2 ISZERO ISZERO SWAP1 POP PUSH2 0x1614 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 DUP2 MSTORE DUP3 DUP5 ADD SWAP1 SWAP4 MSTORE SWAP1 SWAP2 SWAP1 PUSH2 0x1609 JUMP JUMPDEST PUSH2 0x15F6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x15CB JUMPI SWAP1 POP JUMPDEST POP SWAP4 POP SWAP4 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x162F JUMPI PUSH2 0x162F PUSH2 0x380A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x168B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1678 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x164D JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1754 JUMPI PUSH1 0xCD PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x16AF JUMPI PUSH2 0x16AF PUSH2 0x3B05 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1736 JUMPI PUSH2 0x1736 PUSH2 0x3B05 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x174C SWAP1 PUSH2 0x3B63 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1691 JUMP JUMPDEST POP SWAP2 SWAP5 SWAP2 SWAP4 POP SWAP1 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1768 PUSH2 0x1C7C JUMP JUMPDEST PUSH2 0x1028 PUSH1 0x0 PUSH2 0x263D JUMP JUMPDEST PUSH2 0x177A PUSH2 0x1C7C JUMP JUMPDEST PUSH2 0x868 DUP2 PUSH2 0x26B4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EA DUP3 PUSH2 0x27A0 JUMP JUMPDEST PUSH2 0x17B9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x187E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206265206120706F736974697665206E756D62657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xCB SLOAD PUSH2 0x18D6 DUP4 PUSH2 0x18D0 DUP5 PUSH2 0x1D9A JUMP JUMPDEST SWAP1 PUSH2 0x2936 JUMP JUMPDEST LT ISZERO PUSH2 0x1964 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C207374616B652069732062656C6F7720746865206D696E696D756D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207468726573686F6C6400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1A14 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE DUP4 DUP6 ADD DUP4 DUP2 MSTORE PUSH1 0x60 DUP6 ADD DUP5 DUP2 MSTORE CALLER DUP1 DUP7 MSTORE PUSH1 0xCD SWAP1 SWAP5 MSTORE SWAP6 DUP5 KECCAK256 DUP6 MLOAD DUP2 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH1 0x2 DUP4 ADD SSTORE SWAP5 MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH1 0xCE DUP1 SLOAD SWAP5 DUP6 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xD36CD1C74EF8D7326D8021B776C18FB5A5724B7F7BC93C2F42E43E10EF27D12A SWAP1 SWAP3 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE JUMPDEST PUSH2 0x1A1F CALLER ADDRESS DUP5 PUSH2 0x29AF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1A38 SWAP1 DUP4 PUSH2 0x29D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0xA7BB2E28CC4698AAC06DB79CF9163BFCC20719286CF59FA7D492CEDA1B8EDC2 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x121D CALLER DUP4 DUP4 PUSH2 0x29E0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A89 DUP4 PUSH2 0x27A0 JUMP JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1A9A JUMPI PUSH2 0x1A9A PUSH2 0x3A25 JUMP JUMPDEST EQ ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AAA PUSH2 0x1C7C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1B4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x868 DUP2 PUSH2 0x263D JUMP JUMPDEST PUSH2 0x1B5E PUSH2 0x1C7C JUMP JUMPDEST PUSH2 0x868 DUP2 PUSH2 0x2D93 JUMP JUMPDEST PUSH1 0xCE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1B77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x1BFC PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP6 AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP1 SWAP5 AND SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EA PUSH2 0x1C74 DUP4 PUSH2 0x2E62 JUMP JUMPDEST DUP4 MLOAD SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1028 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1D67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206265206120706F736974697665206E756D62657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0xCB DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x4AE07FF10245D5C3330B9A15E8C6B8644EA81B656FF7D5428EDDA75E77D061CD SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD DUP2 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x7EA SWAP2 SWAP1 JUMPDEST PUSH1 0x0 PUSH2 0x1DEC DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2E7F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x1E0B JUMPI POP DUP2 PUSH1 0x60 ADD MLOAD NUMBER LT JUMPDEST ISZERO PUSH2 0x1E18 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x40 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1E4E SWAP1 PUSH2 0x2ED3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1EE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B6520686173206E6F20617661696C61626C6520746F6B656E7320666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207769746864726177616C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x1EEA DUP3 DUP3 PUSH2 0x21D2 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8108595EB6BAD3ACEFA9DA467D90CC2217686D5C5AC85460F8B7849C840645FC DUP3 PUSH1 0x40 MLOAD PUSH2 0x1A66 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SLOAD DUP2 SWAP1 ISZERO PUSH2 0x1F5E JUMPI PUSH2 0x1F5B PUSH2 0x1F4F DUP6 PUSH1 0x3 ADD SLOAD NUMBER PUSH2 0x2F2E JUMP JUMPDEST DUP6 PUSH1 0x2 ADD SLOAD DUP5 DUP7 PUSH2 0x2F48 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x2 DUP5 ADD SLOAD PUSH2 0x1F6D SWAP1 DUP5 PUSH2 0x2936 JUMP JUMPDEST PUSH1 0x2 DUP6 ADD SSTORE PUSH2 0x1F7C NUMBER DUP3 PUSH2 0x2936 JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x868 PUSH2 0x1C7C JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1FCA JUMPI PUSH2 0x1FC5 DUP4 PUSH2 0x2F7F JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2010 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x205E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x205B SWAP2 DUP2 ADD SWAP1 PUSH2 0x3B9C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x20EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6E206973206E6F742055555053000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 EQ PUSH2 0x2199 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6961626C65555549440000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST POP PUSH2 0x1FC5 DUP4 DUP4 DUP4 PUSH2 0x3089 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0x21B4 SWAP1 DUP3 PUSH2 0x1DAA JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP2 SLOAD PUSH2 0x21CC SWAP1 DUP3 PUSH2 0x1DAA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0xC9 SLOAD PUSH2 0x121D SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP4 PUSH2 0x30AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 AND CALLER EQ PUSH2 0x22B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792074686520616C6C6F6361746F722063616E20636C6F736520746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20616C6C6F636174696F6E000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BD DUP4 PUSH2 0x27A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x22D3 JUMPI PUSH2 0x22D3 PUSH2 0x3A25 JUMP JUMPDEST EQ PUSH2 0x2360 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C6F636174696F6E20686173206E6F20636F6D706C657465642073746174 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST NUMBER PUSH1 0x4 DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x0 SWAP2 PUSH2 0x2379 SWAP2 PUSH2 0x2F2E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x240A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x416C6C6F636174696F6E2063616E6E6F7420626520636C6F73656420736F2065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x61726C7900000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 DUP5 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x2442 SWAP1 DUP3 PUSH2 0x21A5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP10 AND SWAP4 AND SWAP2 PUSH32 0x9EC6F3FE8A57FD60609439A97D851E335D635EEB931FCA0F26D5FC217936B3C6 SWAP2 PUSH2 0x24A5 SWAP2 DUP7 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x254B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x1028 CALLER PUSH2 0x263D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x25EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0xC9 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND OR SWAP1 SSTORE PUSH2 0x2634 DUP3 PUSH2 0x1CFD JUMP JUMPDEST PUSH2 0x1FC5 DUP2 PUSH2 0x2D93 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x2731 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420626520612076616C69642061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0xCA DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x173D73AFAD648E625C4A53878536F7A2DEBED1F51A04F21D728BCE3CF534FCC1 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 AND PUSH2 0x27DD JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x200D2ED2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x282A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x283E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2862 SWAP2 SWAP1 PUSH2 0x3BB5 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x3 ADD SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x287D JUMPI POP PUSH1 0x0 DUP4 PUSH1 0x2 ADD SLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x289A JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2898 JUMPI PUSH2 0x2898 PUSH2 0x3A25 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x28AA JUMPI POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP4 ADD SLOAD ISZERO DUP1 ISZERO PUSH2 0x28CD JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x28CB JUMPI PUSH2 0x28CB PUSH2 0x3A25 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x28DD JUMPI POP PUSH1 0x2 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP4 ADD SLOAD ISZERO DUP1 ISZERO PUSH2 0x291B JUMPI POP PUSH1 0x4 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x28FE JUMPI PUSH2 0x28FE PUSH2 0x3A25 JUMP JUMPDEST EQ DUP1 PUSH2 0x291B JUMPI POP PUSH1 0x5 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2919 JUMPI PUSH2 0x2919 PUSH2 0x3A25 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x292B JUMPI POP PUSH1 0x4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP PUSH1 0x3 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2943 DUP4 DUP6 PUSH2 0x3BD6 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1DEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0xC9 SLOAD PUSH2 0x1FC5 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP5 DUP5 PUSH2 0x3182 JUMP JUMPDEST DUP2 SLOAD PUSH2 0x21CC SWAP1 DUP3 PUSH2 0x2936 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x2A5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420626520612076616C69642061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST DUP1 PUSH2 0x2AD8 PUSH1 0xCD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x1C66 JUMP JUMPDEST LT ISZERO PUSH2 0x2B66 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420616D6F756E74206F6620746F6B656E7320696E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20746865207374616B6500000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2BD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206265206120706F736974697665206E756D62657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BDB DUP4 PUSH2 0x27A0 JUMP JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2BEC JUMPI PUSH2 0x2BEC PUSH2 0x3A25 JUMP JUMPDEST EQ PUSH2 0x2C53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C6F636174696F6E20616C72656164792065786973747300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND DUP1 DUP4 MSTORE DUP7 DUP3 AND PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP9 DUP2 MSTORE NUMBER PUSH1 0x60 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 PUSH1 0x80 DUP10 ADD DUP2 DUP2 MSTORE SWAP7 DUP2 MSTORE PUSH1 0xCF DUP6 MSTORE DUP10 DUP2 KECCAK256 DUP10 MLOAD DUP2 SLOAD SWAP1 DUP11 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 DUP3 AND OR DUP3 SSTORE SWAP5 MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP11 AND SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP8 SSTORE SWAP1 MLOAD PUSH1 0x2 DUP4 ADD DUP2 SWAP1 SSTORE SWAP1 MLOAD PUSH1 0x3 DUP4 ADD SSTORE SWAP4 MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE SWAP1 DUP4 MSTORE PUSH1 0xCD SWAP1 MSTORE SWAP3 SWAP1 KECCAK256 SWAP1 SWAP2 PUSH2 0x2D15 SWAP2 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE994FEE7FF4D4C7994071D0B9ED626D9B41E4ED5C6126806241B1906A774A2A0 DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x2D85 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT PUSH2 0x2E03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206265206120706F736974697665206E756D62657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0xCC DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000 AND PUSH4 0xFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x4CABD6339016CBA9857F365BCA7BC3C7E1976823B85052FD7281D313F52C8AE8 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EA DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x2936 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x2EBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DD SWAP2 SWAP1 PUSH2 0x3C1A JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2ECA DUP5 DUP7 PUSH2 0x3C6B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2F12 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x1DF3 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x7EA JUMPI PUSH2 0x2F24 DUP4 DUP3 PUSH2 0x31EF JUMP JUMPDEST PUSH2 0x7EA DUP4 DUP3 PUSH2 0x21C0 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT PUSH2 0x2F3E JUMPI PUSH1 0x0 PUSH2 0x1DEC JUMP JUMPDEST PUSH2 0x1DEC DUP4 DUP4 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F74 PUSH2 0x2F57 DUP6 DUP5 PUSH2 0x2936 JUMP JUMPDEST PUSH2 0x2F6E PUSH2 0x2F64 DUP7 DUP7 PUSH2 0x3214 JUMP JUMPDEST PUSH2 0x18D0 DUP10 DUP10 PUSH2 0x3214 JUMP JUMPDEST SWAP1 PUSH2 0x32C9 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE PUSH2 0x3023 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3092 DUP4 PUSH2 0x330B JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x309F JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x1FC5 JUMPI PUSH2 0x152D DUP4 DUP4 PUSH2 0x3358 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1FC5 SWAP1 DUP5 SWAP1 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x337D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x152D SWAP1 DUP6 SWAP1 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x84 ADD PUSH2 0x3100 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0x21B4 SWAP1 DUP3 PUSH2 0x2936 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SLOAD PUSH2 0x31FE SWAP1 DUP3 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x2 DUP4 ADD DUP2 SWAP1 SSTORE PUSH2 0x121D JUMPI PUSH1 0x0 PUSH1 0x3 DUP4 ADD SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3223 JUMPI POP PUSH1 0x0 PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x322F DUP4 DUP6 PUSH2 0x3C82 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x323C DUP6 DUP4 PUSH2 0x3CBF JUMP JUMPDEST EQ PUSH2 0x1DEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DEC DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x348C JUMP JUMPDEST PUSH2 0x3314 DUP2 PUSH2 0x2F7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1DEC DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3D39 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x34D4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33DF DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3559 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x3400 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3400 SWAP2 SWAP1 PUSH2 0x3CFA JUMP JUMPDEST PUSH2 0x1FC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x34C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DD SWAP2 SWAP1 PUSH2 0x3C1A JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2ECA DUP5 DUP7 PUSH2 0x3CBF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x34FE SWAP2 SWAP1 PUSH2 0x3D1C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3539 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x353E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x354F DUP7 DUP4 DUP4 DUP8 PUSH2 0x3568 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2F77 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x3605 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x35FB JUMPI DUP3 MLOAD PUSH2 0x35F4 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x35F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST POP DUP2 PUSH2 0x2F77 JUMP JUMPDEST PUSH2 0x2F77 DUP4 DUP4 PUSH2 0x371E JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x3697 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x36C0 SWAP2 SWAP1 PUSH2 0x3D1C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x36FD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3702 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3713 DUP8 DUP4 DUP4 DUP8 PUSH2 0x3568 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x372E JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DD SWAP2 SWAP1 PUSH2 0x3C1A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x379D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DEC DUP3 PUSH2 0x3762 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x37D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x37DE DUP6 PUSH2 0x3762 JUMP JUMPDEST SWAP4 POP PUSH2 0x37EC PUSH1 0x20 DUP7 ADD PUSH2 0x3762 JUMP JUMPDEST SWAP3 POP PUSH2 0x37FA PUSH1 0x40 DUP7 ADD PUSH2 0x3762 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x384C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3855 DUP4 PUSH2 0x3762 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3872 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3886 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3898 JUMPI PUSH2 0x3898 PUSH2 0x380A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x38DE JUMPI PUSH2 0x38DE PUSH2 0x380A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x38F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3942 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x394B DUP5 PUSH2 0x3762 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x3960 PUSH1 0x40 DUP6 ADD PUSH2 0x3919 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x39B8 JUMPI DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3986 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE DUP6 DUP4 ADD SWAP2 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3A18 JUMPI PUSH2 0x3A05 DUP4 DUP6 MLOAD DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE POP POP JUMP JUMPDEST SWAP3 DUP5 ADD SWAP3 PUSH1 0x80 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x39D1 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x5 DUP4 LT PUSH2 0x3A8F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3AD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3ADC DUP4 PUSH2 0x3762 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DEC DUP3 PUSH2 0x3919 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x3B95 JUMPI PUSH2 0x3B95 PUSH2 0x3B34 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x6 DUP2 LT PUSH2 0x1DEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3BE9 JUMPI PUSH2 0x3BE9 PUSH2 0x3B34 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3C09 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3BF1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x152D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x3C39 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x3BEE JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3C7D JUMPI PUSH2 0x3C7D PUSH2 0x3B34 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3CBA JUMPI PUSH2 0x3CBA PUSH2 0x3B34 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3CF5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1DEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3D2E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3BEE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x706673582212203B8E2C 0xAF OR XOR 0xF6 JUMPI 0xD 0xEC 0xA7 0x4E SWAP11 EQ CALLCODE PUSH3 0xC88B72 0xEB SWAP2 0xE6 SWAP12 PUSH24 0x3F199622A878676064736F6C634300080900330000000000 ","sourceMap":"752:17074:13:-:0;;;1198:4:6;1155:48;;3090:53:13;;;;;;;;;-1:-1:-1;3114:22:13;:20;:22::i;:::-;752:17074;;5939:280:5;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:5;;216:2:21;5998:66:5;;;198:21:21;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:21;;;338:37;392:19;;5998:66:5;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:5;6140:15;6125:30;;;;;;6174:28;;564:36:21;;;6174:28:5;;552:2:21;537:18;6174:28:5;;;;;;;6074:139;5939:280::o;422:184:21:-;752:17074:13;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@__Ownable_init_unchained_38":{"entryPoint":9396,"id":38,"parameterSlots":0,"returnSlots":0},"@__Staking_init_unchained_1957":{"entryPoint":9556,"id":1957,"parameterSlots":3,"returnSlots":0},"@_allocate_2804":{"entryPoint":10720,"id":2804,"parameterSlots":3,"returnSlots":0},"@_authorizeUpgrade_2964":{"entryPoint":8074,"id":2964,"parameterSlots":1,"returnSlots":0},"@_callOptionalReturn_1245":{"entryPoint":13181,"id":1245,"parameterSlots":2,"returnSlots":0},"@_checkOwner_69":{"entryPoint":7292,"id":69,"parameterSlots":0,"returnSlots":0},"@_closeAllocation_2916":{"entryPoint":8694,"id":2916,"parameterSlots":1,"returnSlots":0},"@_getAllocationState_2269":{"entryPoint":10144,"id":2269,"parameterSlots":1,"returnSlots":1},"@_getAllocation_2149":{"entryPoint":7070,"id":2149,"parameterSlots":1,"returnSlots":1},"@_getImplementation_209":{"entryPoint":null,"id":209,"parameterSlots":0,"returnSlots":1},"@_msgSender_1652":{"entryPoint":null,"id":1652,"parameterSlots":0,"returnSlots":1},"@_revert_1623":{"entryPoint":14110,"id":1623,"parameterSlots":2,"returnSlots":0},"@_safeTransferFrom_2955":{"entryPoint":10671,"id":2955,"parameterSlots":3,"returnSlots":0},"@_safeTransfer_2934":{"entryPoint":8658,"id":2934,"parameterSlots":2,"returnSlots":0},"@_setImplementation_233":{"entryPoint":12159,"id":233,"parameterSlots":1,"returnSlots":0},"@_setLockPeriod_2029":{"entryPoint":11667,"id":2029,"parameterSlots":1,"returnSlots":0},"@_setMinimumStake_1993":{"entryPoint":7421,"id":1993,"parameterSlots":1,"returnSlots":0},"@_setRewardPool_2068":{"entryPoint":9908,"id":2068,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_126":{"entryPoint":9789,"id":126,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCallUUPS_331":{"entryPoint":8082,"id":331,"parameterSlots":3,"returnSlots":0},"@_upgradeToAndCall_278":{"entryPoint":12425,"id":278,"parameterSlots":3,"returnSlots":0},"@_upgradeTo_248":{"entryPoint":13067,"id":248,"parameterSlots":1,"returnSlots":0},"@_withdraw_2601":{"entryPoint":7712,"id":2601,"parameterSlots":1,"returnSlots":0},"@add_4085":{"entryPoint":10550,"id":4085,"parameterSlots":2,"returnSlots":1},"@allocate_2719":{"entryPoint":6770,"id":2719,"parameterSlots":2,"returnSlots":0},"@allocate_3389":{"entryPoint":12768,"id":3389,"parameterSlots":2,"returnSlots":0},"@allocations_1833":{"entryPoint":null,"id":1833,"parameterSlots":0,"returnSlots":0},"@closeAllocation_2826":{"entryPoint":4877,"id":2826,"parameterSlots":1,"returnSlots":0},"@deposit_3349":{"entryPoint":10708,"id":3349,"parameterSlots":2,"returnSlots":0},"@diffOrZero_3739":{"entryPoint":12078,"id":3739,"parameterSlots":2,"returnSlots":1},"@div_4182":{"entryPoint":13001,"id":4182,"parameterSlots":2,"returnSlots":1},"@div_4210":{"entryPoint":13452,"id":4210,"parameterSlots":3,"returnSlots":1},"@functionCallWithValue_1448":{"entryPoint":13829,"id":1448,"parameterSlots":4,"returnSlots":1},"@functionCall_1384":{"entryPoint":13657,"id":1384,"parameterSlots":3,"returnSlots":1},"@functionDelegateCall_1511":{"entryPoint":13144,"id":1511,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_1540":{"entryPoint":13524,"id":1540,"parameterSlots":3,"returnSlots":1},"@getAddressSlot_1707":{"entryPoint":null,"id":1707,"parameterSlots":1,"returnSlots":1},"@getAllocationState_2164":{"entryPoint":6019,"id":2164,"parameterSlots":1,"returnSlots":1},"@getAllocation_2135":{"entryPoint":1923,"id":2135,"parameterSlots":1,"returnSlots":1},"@getBooleanSlot_1718":{"entryPoint":null,"id":1718,"parameterSlots":1,"returnSlots":1},"@getListOfStakers_2381":{"entryPoint":5427,"id":2381,"parameterSlots":0,"returnSlots":2},"@getStakedTokens_2284":{"entryPoint":null,"id":2284,"parameterSlots":1,"returnSlots":1},"@getStaker_2299":{"entryPoint":6030,"id":2299,"parameterSlots":1,"returnSlots":1},"@hasAvailableStake_2120":{"entryPoint":2032,"id":2120,"parameterSlots":1,"returnSlots":1},"@hasStake_2102":{"entryPoint":null,"id":2102,"parameterSlots":1,"returnSlots":1},"@initialize_1933":{"entryPoint":5011,"id":1933,"parameterSlots":3,"returnSlots":0},"@isAllocation_2085":{"entryPoint":6781,"id":2085,"parameterSlots":1,"returnSlots":1},"@isContract_1312":{"entryPoint":null,"id":1312,"parameterSlots":1,"returnSlots":1},"@lockPeriod_1820":{"entryPoint":null,"id":1820,"parameterSlots":0,"returnSlots":0},"@lockTokens_3468":{"entryPoint":7986,"id":3468,"parameterSlots":3,"returnSlots":0},"@minimumStake_1818":{"entryPoint":null,"id":1818,"parameterSlots":0,"returnSlots":0},"@mul_4165":{"entryPoint":12820,"id":4165,"parameterSlots":2,"returnSlots":1},"@owner_55":{"entryPoint":null,"id":55,"parameterSlots":0,"returnSlots":1},"@proxiableUUID_749":{"entryPoint":4641,"id":749,"parameterSlots":0,"returnSlots":1},"@release_3369":{"entryPoint":8640,"id":3369,"parameterSlots":2,"returnSlots":0},"@renounceOwnership_83":{"entryPoint":5984,"id":83,"parameterSlots":0,"returnSlots":0},"@rewardPool_1816":{"entryPoint":null,"id":1816,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_978":{"entryPoint":12674,"id":978,"parameterSlots":4,"returnSlots":0},"@safeTransfer_951":{"entryPoint":12462,"id":951,"parameterSlots":3,"returnSlots":0},"@setLockPeriod_2007":{"entryPoint":6998,"id":2007,"parameterSlots":1,"returnSlots":0},"@setMinimumStake_1971":{"entryPoint":2135,"id":1971,"parameterSlots":1,"returnSlots":0},"@setRewardPool_2043":{"entryPoint":6002,"id":2043,"parameterSlots":1,"returnSlots":0},"@slash_2702":{"entryPoint":3365,"id":2702,"parameterSlots":4,"returnSlots":0},"@stake_2472":{"entryPoint":6164,"id":2472,"parameterSlots":1,"returnSlots":0},"@stakers_1828":{"entryPoint":7015,"id":1828,"parameterSlots":0,"returnSlots":0},"@stakes_1825":{"entryPoint":null,"id":1825,"parameterSlots":0,"returnSlots":0},"@sub_4102":{"entryPoint":7594,"id":4102,"parameterSlots":2,"returnSlots":1},"@sub_4130":{"entryPoint":11903,"id":4130,"parameterSlots":3,"returnSlots":1},"@token_1813":{"entryPoint":null,"id":1813,"parameterSlots":0,"returnSlots":0},"@tokensAvailable_3553":{"entryPoint":7270,"id":3553,"parameterSlots":1,"returnSlots":1},"@tokensSecureStake_3587":{"entryPoint":7578,"id":3587,"parameterSlots":1,"returnSlots":1},"@tokensUsed_3570":{"entryPoint":11874,"id":3570,"parameterSlots":1,"returnSlots":1},"@tokensWithdrawable_3614":{"entryPoint":7667,"id":3614,"parameterSlots":1,"returnSlots":1},"@transferOwnership_106":{"entryPoint":6818,"id":106,"parameterSlots":1,"returnSlots":0},"@unallocate_3409":{"entryPoint":8613,"id":3409,"parameterSlots":2,"returnSlots":0},"@unlockTokens_3500":{"entryPoint":12783,"id":3500,"parameterSlots":2,"returnSlots":0},"@unstake_2558":{"entryPoint":2155,"id":2558,"parameterSlots":1,"returnSlots":0},"@upgradeToAndCall_792":{"entryPoint":4138,"id":792,"parameterSlots":2,"returnSlots":0},"@upgradeTo_771":{"entryPoint":2850,"id":771,"parameterSlots":1,"returnSlots":0},"@verifyCallResultFromTarget_1579":{"entryPoint":13672,"id":1579,"parameterSlots":4,"returnSlots":1},"@weightedAverage_3717":{"entryPoint":12104,"id":3717,"parameterSlots":4,"returnSlots":1},"@withdrawTokens_3535":{"entryPoint":11987,"id":3535,"parameterSlots":1,"returnSlots":1},"@withdraw_2569":{"entryPoint":4127,"id":2569,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":14178,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":14219,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_addresst_uint256":{"entryPoint":14271,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":14393,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":15040,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint32":{"entryPoint":14637,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":15610,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":15260,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_enum$_EscrowStatuses_$2979_fromMemory":{"entryPoint":15285,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":14246,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint32":{"entryPoint":15082,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint32":{"entryPoint":14617,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_struct_Staker":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":15644,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_struct$_Staker_$3329_memory_ptr_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_struct$_Staker_$3329_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":14697,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_AllocationState_$3093__to_t_uint8__fromStack_reversed":{"entryPoint":14932,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15386,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_09cc442701824c51e8cdd950e29e1fc404dd1175d116774e42c0e2968b82338c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_32ff48782182739fcc244d74f52670d6e9b17a6fb1ac4c1e48206f109a98e95c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_39674e5f26f3c7c3c2658977ec6d321fccd1e26dd33c7a6e1977b8a6cd3c068f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b37236e58a99b458bd4a777252a763bc4ff28afa484568ab09417b9f097852c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_468519957235cef46f7c921ca2d833d91a40db6eb163f5e0db878d6b92517276__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5da6c83ac3c3587989369f838fb7a279aaeb0ca15689a96f1849c2d848f08856__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_657ad636948d1d2c1317a7b7e385baea1089841d6ad67cc13d500cc7a430ad3f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6708eebd660913c2744ac9640b2ee73a7eba7a7981d51b61a65bb76e5a97917e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6e39312e5e25a8e9d8439074a2fe4bd1f738d2fd210e22911b9d228ea881b2d8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_73c4a70f74250866db4c24faa260c296b6a2f6f74024944ef1e4389f5fc3405b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dd465ba4be2e63ad02a0450b657ea531627a92660570c417c6b0e7cadb936b3d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Allocation_$3107_memory_ptr__to_t_struct$_Allocation_$3107_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_Staker_$3329_memory_ptr__to_t_struct$_Staker_$3329_memory_ptr__fromStack_reversed":{"entryPoint":14997,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":15318,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":15551,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":15490,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":15467,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":15342,"id":null,"parameterSlots":3,"returnSlots":0},"increment_t_uint256":{"entryPoint":15203,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":15156,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":14885,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":15109,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":14346,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23416:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:147:21","statements":[{"nodeType":"YulAssignment","src":"73:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:21"},"nodeType":"YulFunctionCall","src":"82:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:21"}]},{"body":{"nodeType":"YulBlock","src":"188:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"200:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"190:6:21"},"nodeType":"YulFunctionCall","src":"190:12:21"},"nodeType":"YulExpressionStatement","src":"190:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"142:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:21"},"nodeType":"YulFunctionCall","src":"131:54:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:21"},"nodeType":"YulFunctionCall","src":"121:65:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:21"},"nodeType":"YulFunctionCall","src":"114:73:21"},"nodeType":"YulIf","src":"111:93:21"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:21","type":""}],"src":"14:196:21"},{"body":{"nodeType":"YulBlock","src":"285:116:21","statements":[{"body":{"nodeType":"YulBlock","src":"331:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"340:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"343:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"333:6:21"},"nodeType":"YulFunctionCall","src":"333:12:21"},"nodeType":"YulExpressionStatement","src":"333:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"306:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"315:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"302:3:21"},"nodeType":"YulFunctionCall","src":"302:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"327:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"298:3:21"},"nodeType":"YulFunctionCall","src":"298:32:21"},"nodeType":"YulIf","src":"295:52:21"},{"nodeType":"YulAssignment","src":"356:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"385:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"366:18:21"},"nodeType":"YulFunctionCall","src":"366:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"356:6:21"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"251:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"262:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"274:6:21","type":""}],"src":"215:186:21"},{"body":{"nodeType":"YulBlock","src":"563:415:21","statements":[{"nodeType":"YulAssignment","src":"573:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"585:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"596:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"581:3:21"},"nodeType":"YulFunctionCall","src":"581:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"573:4:21"}]},{"nodeType":"YulVariableDeclaration","src":"609:52:21","value":{"kind":"number","nodeType":"YulLiteral","src":"619:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"613:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"677:9:21"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"698:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"692:5:21"},"nodeType":"YulFunctionCall","src":"692:13:21"},{"name":"_1","nodeType":"YulIdentifier","src":"707:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"688:3:21"},"nodeType":"YulFunctionCall","src":"688:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"670:6:21"},"nodeType":"YulFunctionCall","src":"670:41:21"},"nodeType":"YulExpressionStatement","src":"670:41:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"731:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"742:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"727:3:21"},"nodeType":"YulFunctionCall","src":"727:20:21"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"763:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"771:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"759:3:21"},"nodeType":"YulFunctionCall","src":"759:17:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"753:5:21"},"nodeType":"YulFunctionCall","src":"753:24:21"},{"name":"_1","nodeType":"YulIdentifier","src":"779:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"749:3:21"},"nodeType":"YulFunctionCall","src":"749:33:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"720:6:21"},"nodeType":"YulFunctionCall","src":"720:63:21"},"nodeType":"YulExpressionStatement","src":"720:63:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"803:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"814:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"799:3:21"},"nodeType":"YulFunctionCall","src":"799:20:21"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"831:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"839:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"827:3:21"},"nodeType":"YulFunctionCall","src":"827:17:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"821:5:21"},"nodeType":"YulFunctionCall","src":"821:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"792:6:21"},"nodeType":"YulFunctionCall","src":"792:54:21"},"nodeType":"YulExpressionStatement","src":"792:54:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"866:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"877:4:21","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"862:3:21"},"nodeType":"YulFunctionCall","src":"862:20:21"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"894:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"902:4:21","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"890:3:21"},"nodeType":"YulFunctionCall","src":"890:17:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"884:5:21"},"nodeType":"YulFunctionCall","src":"884:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"855:6:21"},"nodeType":"YulFunctionCall","src":"855:54:21"},"nodeType":"YulExpressionStatement","src":"855:54:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"929:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"940:4:21","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"925:3:21"},"nodeType":"YulFunctionCall","src":"925:20:21"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"957:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"965:4:21","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"953:3:21"},"nodeType":"YulFunctionCall","src":"953:17:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"947:5:21"},"nodeType":"YulFunctionCall","src":"947:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"918:6:21"},"nodeType":"YulFunctionCall","src":"918:54:21"},"nodeType":"YulExpressionStatement","src":"918:54:21"}]},"name":"abi_encode_tuple_t_struct$_Allocation_$3107_memory_ptr__to_t_struct$_Allocation_$3107_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"532:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"543:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"554:4:21","type":""}],"src":"406:572:21"},{"body":{"nodeType":"YulBlock","src":"1168:206:21","statements":[{"nodeType":"YulAssignment","src":"1178:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1190:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1201:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1186:3:21"},"nodeType":"YulFunctionCall","src":"1186:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1178:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1221:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"1232:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1214:6:21"},"nodeType":"YulFunctionCall","src":"1214:25:21"},"nodeType":"YulExpressionStatement","src":"1214:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1259:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1270:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1255:3:21"},"nodeType":"YulFunctionCall","src":"1255:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"1275:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1248:6:21"},"nodeType":"YulFunctionCall","src":"1248:34:21"},"nodeType":"YulExpressionStatement","src":"1248:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1302:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1313:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1298:3:21"},"nodeType":"YulFunctionCall","src":"1298:18:21"},{"name":"value2","nodeType":"YulIdentifier","src":"1318:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1291:6:21"},"nodeType":"YulFunctionCall","src":"1291:34:21"},"nodeType":"YulExpressionStatement","src":"1291:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1345:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1356:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1341:3:21"},"nodeType":"YulFunctionCall","src":"1341:18:21"},{"name":"value3","nodeType":"YulIdentifier","src":"1361:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1334:6:21"},"nodeType":"YulFunctionCall","src":"1334:34:21"},"nodeType":"YulExpressionStatement","src":"1334:34:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1113:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1124:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1132:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1140:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1148:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1159:4:21","type":""}],"src":"983:391:21"},{"body":{"nodeType":"YulBlock","src":"1474:92:21","statements":[{"nodeType":"YulAssignment","src":"1484:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1496:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1507:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1492:3:21"},"nodeType":"YulFunctionCall","src":"1492:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1484:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1526:9:21"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1551:6:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1544:6:21"},"nodeType":"YulFunctionCall","src":"1544:14:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1537:6:21"},"nodeType":"YulFunctionCall","src":"1537:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1519:6:21"},"nodeType":"YulFunctionCall","src":"1519:41:21"},"nodeType":"YulExpressionStatement","src":"1519:41:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1443:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1454:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1465:4:21","type":""}],"src":"1379:187:21"},{"body":{"nodeType":"YulBlock","src":"1641:110:21","statements":[{"body":{"nodeType":"YulBlock","src":"1687:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1696:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1699:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1689:6:21"},"nodeType":"YulFunctionCall","src":"1689:12:21"},"nodeType":"YulExpressionStatement","src":"1689:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1662:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1671:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1658:3:21"},"nodeType":"YulFunctionCall","src":"1658:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1683:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1654:3:21"},"nodeType":"YulFunctionCall","src":"1654:32:21"},"nodeType":"YulIf","src":"1651:52:21"},{"nodeType":"YulAssignment","src":"1712:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1735:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1722:12:21"},"nodeType":"YulFunctionCall","src":"1722:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1712:6:21"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1607:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1618:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1630:6:21","type":""}],"src":"1571:180:21"},{"body":{"nodeType":"YulBlock","src":"1877:282:21","statements":[{"body":{"nodeType":"YulBlock","src":"1924:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1933:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1936:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1926:6:21"},"nodeType":"YulFunctionCall","src":"1926:12:21"},"nodeType":"YulExpressionStatement","src":"1926:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1898:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1907:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1894:3:21"},"nodeType":"YulFunctionCall","src":"1894:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1919:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1890:3:21"},"nodeType":"YulFunctionCall","src":"1890:33:21"},"nodeType":"YulIf","src":"1887:53:21"},{"nodeType":"YulAssignment","src":"1949:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1978:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1959:18:21"},"nodeType":"YulFunctionCall","src":"1959:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1949:6:21"}]},{"nodeType":"YulAssignment","src":"1997:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2030:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2041:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2026:3:21"},"nodeType":"YulFunctionCall","src":"2026:18:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2007:18:21"},"nodeType":"YulFunctionCall","src":"2007:38:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1997:6:21"}]},{"nodeType":"YulAssignment","src":"2054:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2087:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2098:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2083:3:21"},"nodeType":"YulFunctionCall","src":"2083:18:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2064:18:21"},"nodeType":"YulFunctionCall","src":"2064:38:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2054:6:21"}]},{"nodeType":"YulAssignment","src":"2111:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2138:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2149:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2134:3:21"},"nodeType":"YulFunctionCall","src":"2134:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2121:12:21"},"nodeType":"YulFunctionCall","src":"2121:32:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2111:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1819:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1830:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1842:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1850:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1858:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1866:6:21","type":""}],"src":"1756:403:21"},{"body":{"nodeType":"YulBlock","src":"2263:93:21","statements":[{"nodeType":"YulAssignment","src":"2273:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2285:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2296:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2281:3:21"},"nodeType":"YulFunctionCall","src":"2281:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2273:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2315:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2330:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2338:10:21","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2326:3:21"},"nodeType":"YulFunctionCall","src":"2326:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2308:6:21"},"nodeType":"YulFunctionCall","src":"2308:42:21"},"nodeType":"YulExpressionStatement","src":"2308:42:21"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2232:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2243:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2254:4:21","type":""}],"src":"2164:192:21"},{"body":{"nodeType":"YulBlock","src":"2393:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2410:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2413:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2403:6:21"},"nodeType":"YulFunctionCall","src":"2403:88:21"},"nodeType":"YulExpressionStatement","src":"2403:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2507:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2510:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2500:6:21"},"nodeType":"YulFunctionCall","src":"2500:15:21"},"nodeType":"YulExpressionStatement","src":"2500:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2531:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2534:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2524:6:21"},"nodeType":"YulFunctionCall","src":"2524:15:21"},"nodeType":"YulExpressionStatement","src":"2524:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2361:184:21"},{"body":{"nodeType":"YulBlock","src":"2646:958:21","statements":[{"body":{"nodeType":"YulBlock","src":"2692:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2701:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2704:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2694:6:21"},"nodeType":"YulFunctionCall","src":"2694:12:21"},"nodeType":"YulExpressionStatement","src":"2694:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2667:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2676:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2663:3:21"},"nodeType":"YulFunctionCall","src":"2663:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2688:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2659:3:21"},"nodeType":"YulFunctionCall","src":"2659:32:21"},"nodeType":"YulIf","src":"2656:52:21"},{"nodeType":"YulAssignment","src":"2717:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2746:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2727:18:21"},"nodeType":"YulFunctionCall","src":"2727:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2717:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"2765:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2796:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2807:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2792:3:21"},"nodeType":"YulFunctionCall","src":"2792:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2779:12:21"},"nodeType":"YulFunctionCall","src":"2779:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2769:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2820:28:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2830:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2824:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2875:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2884:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2887:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2877:6:21"},"nodeType":"YulFunctionCall","src":"2877:12:21"},"nodeType":"YulExpressionStatement","src":"2877:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2863:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"2871:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2860:2:21"},"nodeType":"YulFunctionCall","src":"2860:14:21"},"nodeType":"YulIf","src":"2857:34:21"},{"nodeType":"YulVariableDeclaration","src":"2900:32:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2914:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2925:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2910:3:21"},"nodeType":"YulFunctionCall","src":"2910:22:21"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2904:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2980:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2989:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2992:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2982:6:21"},"nodeType":"YulFunctionCall","src":"2982:12:21"},"nodeType":"YulExpressionStatement","src":"2982:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2959:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"2963:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2955:3:21"},"nodeType":"YulFunctionCall","src":"2955:13:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2970:7:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2951:3:21"},"nodeType":"YulFunctionCall","src":"2951:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2944:6:21"},"nodeType":"YulFunctionCall","src":"2944:35:21"},"nodeType":"YulIf","src":"2941:55:21"},{"nodeType":"YulVariableDeclaration","src":"3005:26:21","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3028:2:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3015:12:21"},"nodeType":"YulFunctionCall","src":"3015:16:21"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3009:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3054:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3056:16:21"},"nodeType":"YulFunctionCall","src":"3056:18:21"},"nodeType":"YulExpressionStatement","src":"3056:18:21"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"3046:2:21"},{"name":"_1","nodeType":"YulIdentifier","src":"3050:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3043:2:21"},"nodeType":"YulFunctionCall","src":"3043:10:21"},"nodeType":"YulIf","src":"3040:36:21"},{"nodeType":"YulVariableDeclaration","src":"3085:76:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3095:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"3089:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3170:23:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3190:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3184:5:21"},"nodeType":"YulFunctionCall","src":"3184:9:21"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3174:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3202:71:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3224:6:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"3248:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"3252:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3244:3:21"},"nodeType":"YulFunctionCall","src":"3244:13:21"},{"name":"_4","nodeType":"YulIdentifier","src":"3259:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3240:3:21"},"nodeType":"YulFunctionCall","src":"3240:22:21"},{"kind":"number","nodeType":"YulLiteral","src":"3264:2:21","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3236:3:21"},"nodeType":"YulFunctionCall","src":"3236:31:21"},{"name":"_4","nodeType":"YulIdentifier","src":"3269:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3232:3:21"},"nodeType":"YulFunctionCall","src":"3232:40:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3220:3:21"},"nodeType":"YulFunctionCall","src":"3220:53:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3206:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3334:16:21"},"nodeType":"YulFunctionCall","src":"3334:18:21"},"nodeType":"YulExpressionStatement","src":"3334:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3291:10:21"},{"name":"_1","nodeType":"YulIdentifier","src":"3303:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3288:2:21"},"nodeType":"YulFunctionCall","src":"3288:18:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3311:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3323:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3308:2:21"},"nodeType":"YulFunctionCall","src":"3308:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3285:2:21"},"nodeType":"YulFunctionCall","src":"3285:46:21"},"nodeType":"YulIf","src":"3282:72:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3370:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3374:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3363:6:21"},"nodeType":"YulFunctionCall","src":"3363:22:21"},"nodeType":"YulExpressionStatement","src":"3363:22:21"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3401:6:21"},{"name":"_3","nodeType":"YulIdentifier","src":"3409:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3394:6:21"},"nodeType":"YulFunctionCall","src":"3394:18:21"},"nodeType":"YulExpressionStatement","src":"3394:18:21"},{"body":{"nodeType":"YulBlock","src":"3458:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3467:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3470:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3460:6:21"},"nodeType":"YulFunctionCall","src":"3460:12:21"},"nodeType":"YulExpressionStatement","src":"3460:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3435:2:21"},{"name":"_3","nodeType":"YulIdentifier","src":"3439:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3431:3:21"},"nodeType":"YulFunctionCall","src":"3431:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"3444:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3427:3:21"},"nodeType":"YulFunctionCall","src":"3427:20:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3449:7:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3424:2:21"},"nodeType":"YulFunctionCall","src":"3424:33:21"},"nodeType":"YulIf","src":"3421:53:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3500:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3508:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3496:3:21"},"nodeType":"YulFunctionCall","src":"3496:15:21"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3517:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"3521:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3513:3:21"},"nodeType":"YulFunctionCall","src":"3513:11:21"},{"name":"_3","nodeType":"YulIdentifier","src":"3526:2:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3483:12:21"},"nodeType":"YulFunctionCall","src":"3483:46:21"},"nodeType":"YulExpressionStatement","src":"3483:46:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3553:6:21"},{"name":"_3","nodeType":"YulIdentifier","src":"3561:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3549:3:21"},"nodeType":"YulFunctionCall","src":"3549:15:21"},{"kind":"number","nodeType":"YulLiteral","src":"3566:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3545:3:21"},"nodeType":"YulFunctionCall","src":"3545:24:21"},{"kind":"number","nodeType":"YulLiteral","src":"3571:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3538:6:21"},"nodeType":"YulFunctionCall","src":"3538:35:21"},"nodeType":"YulExpressionStatement","src":"3538:35:21"},{"nodeType":"YulAssignment","src":"3582:16:21","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3592:6:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3582:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2604:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2615:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2627:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2635:6:21","type":""}],"src":"2550:1054:21"},{"body":{"nodeType":"YulBlock","src":"3822:329:21","statements":[{"nodeType":"YulAssignment","src":"3832:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3844:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3855:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3840:3:21"},"nodeType":"YulFunctionCall","src":"3840:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3832:4:21"}]},{"nodeType":"YulVariableDeclaration","src":"3868:52:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3878:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3872:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3936:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3951:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"3959:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3947:3:21"},"nodeType":"YulFunctionCall","src":"3947:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3929:6:21"},"nodeType":"YulFunctionCall","src":"3929:34:21"},"nodeType":"YulExpressionStatement","src":"3929:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3983:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3994:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3979:3:21"},"nodeType":"YulFunctionCall","src":"3979:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4003:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"4011:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3999:3:21"},"nodeType":"YulFunctionCall","src":"3999:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3972:6:21"},"nodeType":"YulFunctionCall","src":"3972:43:21"},"nodeType":"YulExpressionStatement","src":"3972:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4035:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4046:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4031:3:21"},"nodeType":"YulFunctionCall","src":"4031:18:21"},{"name":"value2","nodeType":"YulIdentifier","src":"4051:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4024:6:21"},"nodeType":"YulFunctionCall","src":"4024:34:21"},"nodeType":"YulExpressionStatement","src":"4024:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4078:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4089:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4074:3:21"},"nodeType":"YulFunctionCall","src":"4074:18:21"},{"name":"value3","nodeType":"YulIdentifier","src":"4094:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4067:6:21"},"nodeType":"YulFunctionCall","src":"4067:34:21"},"nodeType":"YulExpressionStatement","src":"4067:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4121:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4132:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4117:3:21"},"nodeType":"YulFunctionCall","src":"4117:19:21"},{"name":"value4","nodeType":"YulIdentifier","src":"4138:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4110:6:21"},"nodeType":"YulFunctionCall","src":"4110:35:21"},"nodeType":"YulExpressionStatement","src":"4110:35:21"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3759:9:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3770:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3778:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3786:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3794:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3802:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3813:4:21","type":""}],"src":"3609:542:21"},{"body":{"nodeType":"YulBlock","src":"4257:76:21","statements":[{"nodeType":"YulAssignment","src":"4267:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4279:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4290:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4275:3:21"},"nodeType":"YulFunctionCall","src":"4275:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4267:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4309:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"4320:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4302:6:21"},"nodeType":"YulFunctionCall","src":"4302:25:21"},"nodeType":"YulExpressionStatement","src":"4302:25:21"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4226:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4237:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4248:4:21","type":""}],"src":"4156:177:21"},{"body":{"nodeType":"YulBlock","src":"4439:76:21","statements":[{"nodeType":"YulAssignment","src":"4449:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4461:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4472:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4457:3:21"},"nodeType":"YulFunctionCall","src":"4457:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4449:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4491:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"4502:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4484:6:21"},"nodeType":"YulFunctionCall","src":"4484:25:21"},"nodeType":"YulExpressionStatement","src":"4484:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4408:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4419:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4430:4:21","type":""}],"src":"4338:177:21"},{"body":{"nodeType":"YulBlock","src":"4621:125:21","statements":[{"nodeType":"YulAssignment","src":"4631:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4643:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4654:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4639:3:21"},"nodeType":"YulFunctionCall","src":"4639:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4631:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4673:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4688:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4696:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4684:3:21"},"nodeType":"YulFunctionCall","src":"4684:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4666:6:21"},"nodeType":"YulFunctionCall","src":"4666:74:21"},"nodeType":"YulExpressionStatement","src":"4666:74:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4590:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4601:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4612:4:21","type":""}],"src":"4520:226:21"},{"body":{"nodeType":"YulBlock","src":"4799:115:21","statements":[{"nodeType":"YulAssignment","src":"4809:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4831:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4818:12:21"},"nodeType":"YulFunctionCall","src":"4818:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4809:5:21"}]},{"body":{"nodeType":"YulBlock","src":"4892:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4901:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4904:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4894:6:21"},"nodeType":"YulFunctionCall","src":"4894:12:21"},"nodeType":"YulExpressionStatement","src":"4894:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4860:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4871:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"4878:10:21","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4867:3:21"},"nodeType":"YulFunctionCall","src":"4867:22:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4857:2:21"},"nodeType":"YulFunctionCall","src":"4857:33:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4850:6:21"},"nodeType":"YulFunctionCall","src":"4850:41:21"},"nodeType":"YulIf","src":"4847:61:21"}]},"name":"abi_decode_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4778:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4789:5:21","type":""}],"src":"4751:163:21"},{"body":{"nodeType":"YulBlock","src":"5022:223:21","statements":[{"body":{"nodeType":"YulBlock","src":"5068:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5077:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5080:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5070:6:21"},"nodeType":"YulFunctionCall","src":"5070:12:21"},"nodeType":"YulExpressionStatement","src":"5070:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5043:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5052:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5039:3:21"},"nodeType":"YulFunctionCall","src":"5039:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"5064:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5035:3:21"},"nodeType":"YulFunctionCall","src":"5035:32:21"},"nodeType":"YulIf","src":"5032:52:21"},{"nodeType":"YulAssignment","src":"5093:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5122:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5103:18:21"},"nodeType":"YulFunctionCall","src":"5103:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5093:6:21"}]},{"nodeType":"YulAssignment","src":"5141:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5168:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5179:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5164:3:21"},"nodeType":"YulFunctionCall","src":"5164:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5151:12:21"},"nodeType":"YulFunctionCall","src":"5151:32:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5141:6:21"}]},{"nodeType":"YulAssignment","src":"5192:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5224:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5235:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5220:3:21"},"nodeType":"YulFunctionCall","src":"5220:18:21"}],"functionName":{"name":"abi_decode_uint32","nodeType":"YulIdentifier","src":"5202:17:21"},"nodeType":"YulFunctionCall","src":"5202:37:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5192:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4972:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4983:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4995:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5003:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5011:6:21","type":""}],"src":"4919:326:21"},{"body":{"nodeType":"YulBlock","src":"5300:209:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5317:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5328:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5322:5:21"},"nodeType":"YulFunctionCall","src":"5322:12:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5310:6:21"},"nodeType":"YulFunctionCall","src":"5310:25:21"},"nodeType":"YulExpressionStatement","src":"5310:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5355:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"5360:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5351:3:21"},"nodeType":"YulFunctionCall","src":"5351:14:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5377:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5384:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5373:3:21"},"nodeType":"YulFunctionCall","src":"5373:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5367:5:21"},"nodeType":"YulFunctionCall","src":"5367:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5344:6:21"},"nodeType":"YulFunctionCall","src":"5344:47:21"},"nodeType":"YulExpressionStatement","src":"5344:47:21"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5411:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"5416:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5407:3:21"},"nodeType":"YulFunctionCall","src":"5407:14:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5433:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5440:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5429:3:21"},"nodeType":"YulFunctionCall","src":"5429:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5423:5:21"},"nodeType":"YulFunctionCall","src":"5423:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5400:6:21"},"nodeType":"YulFunctionCall","src":"5400:47:21"},"nodeType":"YulExpressionStatement","src":"5400:47:21"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5467:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"5472:4:21","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5463:3:21"},"nodeType":"YulFunctionCall","src":"5463:14:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5489:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5496:4:21","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:21"},"nodeType":"YulFunctionCall","src":"5485:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5479:5:21"},"nodeType":"YulFunctionCall","src":"5479:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5456:6:21"},"nodeType":"YulFunctionCall","src":"5456:47:21"},"nodeType":"YulExpressionStatement","src":"5456:47:21"}]},"name":"abi_encode_struct_Staker","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5284:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5291:3:21","type":""}],"src":"5250:259:21"},{"body":{"nodeType":"YulBlock","src":"5791:992:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5801:32:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5819:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5830:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5815:3:21"},"nodeType":"YulFunctionCall","src":"5815:18:21"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"5805:6:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5849:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5860:2:21","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5842:6:21"},"nodeType":"YulFunctionCall","src":"5842:21:21"},"nodeType":"YulExpressionStatement","src":"5842:21:21"},{"nodeType":"YulVariableDeclaration","src":"5872:17:21","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"5883:6:21"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"5876:3:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5898:27:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5918:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5912:5:21"},"nodeType":"YulFunctionCall","src":"5912:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5902:6:21","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"5941:6:21"},{"name":"length","nodeType":"YulIdentifier","src":"5949:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5934:6:21"},"nodeType":"YulFunctionCall","src":"5934:22:21"},"nodeType":"YulExpressionStatement","src":"5934:22:21"},{"nodeType":"YulAssignment","src":"5965:25:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5976:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5987:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5972:3:21"},"nodeType":"YulFunctionCall","src":"5972:18:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5965:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"5999:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6009:4:21","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6003:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6022:29:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6040:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"6048:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6036:3:21"},"nodeType":"YulFunctionCall","src":"6036:15:21"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"6026:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6060:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6069:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6064:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"6128:169:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6149:3:21"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6164:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6158:5:21"},"nodeType":"YulFunctionCall","src":"6158:13:21"},{"kind":"number","nodeType":"YulLiteral","src":"6173:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6154:3:21"},"nodeType":"YulFunctionCall","src":"6154:62:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6142:6:21"},"nodeType":"YulFunctionCall","src":"6142:75:21"},"nodeType":"YulExpressionStatement","src":"6142:75:21"},{"nodeType":"YulAssignment","src":"6230:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6241:3:21"},{"name":"_1","nodeType":"YulIdentifier","src":"6246:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6237:3:21"},"nodeType":"YulFunctionCall","src":"6237:12:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6230:3:21"}]},{"nodeType":"YulAssignment","src":"6262:25:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6276:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"6284:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6272:3:21"},"nodeType":"YulFunctionCall","src":"6272:15:21"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6262:6:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6090:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"6093:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6087:2:21"},"nodeType":"YulFunctionCall","src":"6087:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6101:18:21","statements":[{"nodeType":"YulAssignment","src":"6103:14:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6112:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"6115:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6108:3:21"},"nodeType":"YulFunctionCall","src":"6108:9:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6103:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"6083:3:21","statements":[]},"src":"6079:218:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6317:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"6328:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6313:3:21"},"nodeType":"YulFunctionCall","src":"6313:18:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6337:3:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"6342:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6333:3:21"},"nodeType":"YulFunctionCall","src":"6333:19:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6306:6:21"},"nodeType":"YulFunctionCall","src":"6306:47:21"},"nodeType":"YulExpressionStatement","src":"6306:47:21"},{"nodeType":"YulVariableDeclaration","src":"6362:16:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"6375:3:21"},"variables":[{"name":"pos_1","nodeType":"YulTypedName","src":"6366:5:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6387:29:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6409:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6403:5:21"},"nodeType":"YulFunctionCall","src":"6403:13:21"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"6391:8:21","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6432:3:21"},{"name":"length_1","nodeType":"YulIdentifier","src":"6437:8:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6425:6:21"},"nodeType":"YulFunctionCall","src":"6425:21:21"},"nodeType":"YulExpressionStatement","src":"6425:21:21"},{"nodeType":"YulAssignment","src":"6455:21:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6468:3:21"},{"name":"_1","nodeType":"YulIdentifier","src":"6473:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6464:3:21"},"nodeType":"YulFunctionCall","src":"6464:12:21"},"variableNames":[{"name":"pos_1","nodeType":"YulIdentifier","src":"6455:5:21"}]},{"nodeType":"YulVariableDeclaration","src":"6485:31:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6505:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"6513:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6501:3:21"},"nodeType":"YulFunctionCall","src":"6501:15:21"},"variables":[{"name":"srcPtr_1","nodeType":"YulTypedName","src":"6489:8:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6525:12:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6536:1:21","type":"","value":"0"},"variables":[{"name":"i_1","nodeType":"YulTypedName","src":"6529:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"6603:152:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"srcPtr_1","nodeType":"YulIdentifier","src":"6648:8:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6642:5:21"},"nodeType":"YulFunctionCall","src":"6642:15:21"},{"name":"pos_1","nodeType":"YulIdentifier","src":"6659:5:21"}],"functionName":{"name":"abi_encode_struct_Staker","nodeType":"YulIdentifier","src":"6617:24:21"},"nodeType":"YulFunctionCall","src":"6617:48:21"},"nodeType":"YulExpressionStatement","src":"6617:48:21"},{"nodeType":"YulAssignment","src":"6678:25:21","value":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"6691:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"6698:4:21","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6687:3:21"},"nodeType":"YulFunctionCall","src":"6687:16:21"},"variableNames":[{"name":"pos_1","nodeType":"YulIdentifier","src":"6678:5:21"}]},{"nodeType":"YulAssignment","src":"6716:29:21","value":{"arguments":[{"name":"srcPtr_1","nodeType":"YulIdentifier","src":"6732:8:21"},{"name":"_1","nodeType":"YulIdentifier","src":"6742:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6728:3:21"},"nodeType":"YulFunctionCall","src":"6728:17:21"},"variableNames":[{"name":"srcPtr_1","nodeType":"YulIdentifier","src":"6716:8:21"}]}]},"condition":{"arguments":[{"name":"i_1","nodeType":"YulIdentifier","src":"6557:3:21"},{"name":"length_1","nodeType":"YulIdentifier","src":"6562:8:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6554:2:21"},"nodeType":"YulFunctionCall","src":"6554:17:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6572:22:21","statements":[{"nodeType":"YulAssignment","src":"6574:18:21","value":{"arguments":[{"name":"i_1","nodeType":"YulIdentifier","src":"6585:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"6590:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6581:3:21"},"nodeType":"YulFunctionCall","src":"6581:11:21"},"variableNames":[{"name":"i_1","nodeType":"YulIdentifier","src":"6574:3:21"}]}]},"pre":{"nodeType":"YulBlock","src":"6550:3:21","statements":[]},"src":"6546:209:21"},{"nodeType":"YulAssignment","src":"6764:13:21","value":{"name":"pos_1","nodeType":"YulIdentifier","src":"6772:5:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6764:4:21"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_struct$_Staker_$3329_memory_ptr_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_struct$_Staker_$3329_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5752:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5763:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5771:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5782:4:21","type":""}],"src":"5514:1269:21"},{"body":{"nodeType":"YulBlock","src":"6820:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6837:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6840:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6830:6:21"},"nodeType":"YulFunctionCall","src":"6830:88:21"},"nodeType":"YulExpressionStatement","src":"6830:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6934:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6937:4:21","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6927:6:21"},"nodeType":"YulFunctionCall","src":"6927:15:21"},"nodeType":"YulExpressionStatement","src":"6927:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6958:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6961:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6951:6:21"},"nodeType":"YulFunctionCall","src":"6951:15:21"},"nodeType":"YulExpressionStatement","src":"6951:15:21"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"6788:184:21"},{"body":{"nodeType":"YulBlock","src":"7096:286:21","statements":[{"nodeType":"YulAssignment","src":"7106:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7118:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7129:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7114:3:21"},"nodeType":"YulFunctionCall","src":"7114:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7106:4:21"}]},{"body":{"nodeType":"YulBlock","src":"7174:168:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7195:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7198:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7188:6:21"},"nodeType":"YulFunctionCall","src":"7188:88:21"},"nodeType":"YulExpressionStatement","src":"7188:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7296:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7299:4:21","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7289:6:21"},"nodeType":"YulFunctionCall","src":"7289:15:21"},"nodeType":"YulExpressionStatement","src":"7289:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7324:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7327:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7317:6:21"},"nodeType":"YulFunctionCall","src":"7317:15:21"},"nodeType":"YulExpressionStatement","src":"7317:15:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7154:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7162:1:21","type":"","value":"5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7151:2:21"},"nodeType":"YulFunctionCall","src":"7151:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7144:6:21"},"nodeType":"YulFunctionCall","src":"7144:21:21"},"nodeType":"YulIf","src":"7141:201:21"},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7358:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"7369:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7351:6:21"},"nodeType":"YulFunctionCall","src":"7351:25:21"},"nodeType":"YulExpressionStatement","src":"7351:25:21"}]},"name":"abi_encode_tuple_t_enum$_AllocationState_$3093__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7065:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7076:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7087:4:21","type":""}],"src":"6977:405:21"},{"body":{"nodeType":"YulBlock","src":"7536:95:21","statements":[{"nodeType":"YulAssignment","src":"7546:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7558:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7569:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7554:3:21"},"nodeType":"YulFunctionCall","src":"7554:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7546:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7607:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"7615:9:21"}],"functionName":{"name":"abi_encode_struct_Staker","nodeType":"YulIdentifier","src":"7582:24:21"},"nodeType":"YulFunctionCall","src":"7582:43:21"},"nodeType":"YulExpressionStatement","src":"7582:43:21"}]},"name":"abi_encode_tuple_t_struct$_Staker_$3329_memory_ptr__to_t_struct$_Staker_$3329_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7505:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7516:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7527:4:21","type":""}],"src":"7387:244:21"},{"body":{"nodeType":"YulBlock","src":"7723:167:21","statements":[{"body":{"nodeType":"YulBlock","src":"7769:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7778:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7781:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7771:6:21"},"nodeType":"YulFunctionCall","src":"7771:12:21"},"nodeType":"YulExpressionStatement","src":"7771:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7744:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"7753:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7740:3:21"},"nodeType":"YulFunctionCall","src":"7740:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"7765:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7736:3:21"},"nodeType":"YulFunctionCall","src":"7736:32:21"},"nodeType":"YulIf","src":"7733:52:21"},{"nodeType":"YulAssignment","src":"7794:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7823:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7804:18:21"},"nodeType":"YulFunctionCall","src":"7804:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7794:6:21"}]},{"nodeType":"YulAssignment","src":"7842:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7869:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7880:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7865:3:21"},"nodeType":"YulFunctionCall","src":"7865:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7852:12:21"},"nodeType":"YulFunctionCall","src":"7852:32:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7842:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7681:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7692:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7704:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7712:6:21","type":""}],"src":"7636:254:21"},{"body":{"nodeType":"YulBlock","src":"7964:115:21","statements":[{"body":{"nodeType":"YulBlock","src":"8010:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8019:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8022:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8012:6:21"},"nodeType":"YulFunctionCall","src":"8012:12:21"},"nodeType":"YulExpressionStatement","src":"8012:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7985:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"7994:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7981:3:21"},"nodeType":"YulFunctionCall","src":"7981:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"8006:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7977:3:21"},"nodeType":"YulFunctionCall","src":"7977:32:21"},"nodeType":"YulIf","src":"7974:52:21"},{"nodeType":"YulAssignment","src":"8035:38:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8063:9:21"}],"functionName":{"name":"abi_decode_uint32","nodeType":"YulIdentifier","src":"8045:17:21"},"nodeType":"YulFunctionCall","src":"8045:28:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8035:6:21"}]}]},"name":"abi_decode_tuple_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7930:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7941:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7953:6:21","type":""}],"src":"7895:184:21"},{"body":{"nodeType":"YulBlock","src":"8258:175:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8275:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8286:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8268:6:21"},"nodeType":"YulFunctionCall","src":"8268:21:21"},"nodeType":"YulExpressionStatement","src":"8268:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8309:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8320:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8305:3:21"},"nodeType":"YulFunctionCall","src":"8305:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"8325:2:21","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8298:6:21"},"nodeType":"YulFunctionCall","src":"8298:30:21"},"nodeType":"YulExpressionStatement","src":"8298:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8348:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8359:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8344:3:21"},"nodeType":"YulFunctionCall","src":"8344:18:21"},{"hexValue":"4d757374206265206120706f736974697665206e756d626572","kind":"string","nodeType":"YulLiteral","src":"8364:27:21","type":"","value":"Must be a positive number"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8337:6:21"},"nodeType":"YulFunctionCall","src":"8337:55:21"},"nodeType":"YulExpressionStatement","src":"8337:55:21"},{"nodeType":"YulAssignment","src":"8401:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8413:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8424:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8409:3:21"},"nodeType":"YulFunctionCall","src":"8409:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8401:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_6708eebd660913c2744ac9640b2ee73a7eba7a7981d51b61a65bb76e5a97917e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8235:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8249:4:21","type":""}],"src":"8084:349:21"},{"body":{"nodeType":"YulBlock","src":"8612:180:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8629:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8640:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8622:6:21"},"nodeType":"YulFunctionCall","src":"8622:21:21"},"nodeType":"YulExpressionStatement","src":"8622:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8663:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8674:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8659:3:21"},"nodeType":"YulFunctionCall","src":"8659:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"8679:2:21","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8652:6:21"},"nodeType":"YulFunctionCall","src":"8652:30:21"},"nodeType":"YulExpressionStatement","src":"8652:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8702:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8713:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8698:3:21"},"nodeType":"YulFunctionCall","src":"8698:18:21"},{"hexValue":"496e73756666696369656e7420616d6f756e7420746f20756e7374616b65","kind":"string","nodeType":"YulLiteral","src":"8718:32:21","type":"","value":"Insufficient amount to unstake"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8691:6:21"},"nodeType":"YulFunctionCall","src":"8691:60:21"},"nodeType":"YulExpressionStatement","src":"8691:60:21"},{"nodeType":"YulAssignment","src":"8760:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8772:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8783:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8768:3:21"},"nodeType":"YulFunctionCall","src":"8768:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8760:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_5da6c83ac3c3587989369f838fb7a279aaeb0ca15689a96f1849c2d848f08856__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8589:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8603:4:21","type":""}],"src":"8438:354:21"},{"body":{"nodeType":"YulBlock","src":"8971:232:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8988:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8999:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8981:6:21"},"nodeType":"YulFunctionCall","src":"8981:21:21"},"nodeType":"YulExpressionStatement","src":"8981:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9022:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9033:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9018:3:21"},"nodeType":"YulFunctionCall","src":"9018:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"9038:2:21","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9011:6:21"},"nodeType":"YulFunctionCall","src":"9011:30:21"},"nodeType":"YulExpressionStatement","src":"9011:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9061:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9072:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9057:3:21"},"nodeType":"YulFunctionCall","src":"9057:18:21"},{"hexValue":"546f74616c207374616b652069732062656c6f7720746865206d696e696d756d","kind":"string","nodeType":"YulLiteral","src":"9077:34:21","type":"","value":"Total stake is below the minimum"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9050:6:21"},"nodeType":"YulFunctionCall","src":"9050:62:21"},"nodeType":"YulExpressionStatement","src":"9050:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9132:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9143:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9128:3:21"},"nodeType":"YulFunctionCall","src":"9128:18:21"},{"hexValue":"207468726573686f6c64","kind":"string","nodeType":"YulLiteral","src":"9148:12:21","type":"","value":" threshold"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9121:6:21"},"nodeType":"YulFunctionCall","src":"9121:40:21"},"nodeType":"YulExpressionStatement","src":"9121:40:21"},{"nodeType":"YulAssignment","src":"9170:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9182:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9193:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9178:3:21"},"nodeType":"YulFunctionCall","src":"9178:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9170:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b37236e58a99b458bd4a777252a763bc4ff28afa484568ab09417b9f097852c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8948:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8962:4:21","type":""}],"src":"8797:406:21"},{"body":{"nodeType":"YulBlock","src":"9337:119:21","statements":[{"nodeType":"YulAssignment","src":"9347:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9359:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9370:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9355:3:21"},"nodeType":"YulFunctionCall","src":"9355:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9347:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9389:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"9400:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9382:6:21"},"nodeType":"YulFunctionCall","src":"9382:25:21"},"nodeType":"YulExpressionStatement","src":"9382:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9427:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9438:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9423:3:21"},"nodeType":"YulFunctionCall","src":"9423:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"9443:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9416:6:21"},"nodeType":"YulFunctionCall","src":"9416:34:21"},"nodeType":"YulExpressionStatement","src":"9416:34:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9298:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9309:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9317:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9328:4:21","type":""}],"src":"9208:248:21"},{"body":{"nodeType":"YulBlock","src":"9635:234:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9652:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9663:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9645:6:21"},"nodeType":"YulFunctionCall","src":"9645:21:21"},"nodeType":"YulExpressionStatement","src":"9645:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9686:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9697:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9682:3:21"},"nodeType":"YulFunctionCall","src":"9682:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"9702:2:21","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9675:6:21"},"nodeType":"YulFunctionCall","src":"9675:30:21"},"nodeType":"YulExpressionStatement","src":"9675:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9725:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9736:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9721:3:21"},"nodeType":"YulFunctionCall","src":"9721:18:21"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nodeType":"YulLiteral","src":"9741:34:21","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9714:6:21"},"nodeType":"YulFunctionCall","src":"9714:62:21"},"nodeType":"YulExpressionStatement","src":"9714:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9796:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9807:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9792:3:21"},"nodeType":"YulFunctionCall","src":"9792:18:21"},{"hexValue":"64656c656761746563616c6c","kind":"string","nodeType":"YulLiteral","src":"9812:14:21","type":"","value":"delegatecall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9785:6:21"},"nodeType":"YulFunctionCall","src":"9785:42:21"},"nodeType":"YulExpressionStatement","src":"9785:42:21"},{"nodeType":"YulAssignment","src":"9836:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9848:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9859:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9844:3:21"},"nodeType":"YulFunctionCall","src":"9844:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9836:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9612:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9626:4:21","type":""}],"src":"9461:408:21"},{"body":{"nodeType":"YulBlock","src":"10048:234:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10065:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10076:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10058:6:21"},"nodeType":"YulFunctionCall","src":"10058:21:21"},"nodeType":"YulExpressionStatement","src":"10058:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10099:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10110:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10095:3:21"},"nodeType":"YulFunctionCall","src":"10095:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"10115:2:21","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10088:6:21"},"nodeType":"YulFunctionCall","src":"10088:30:21"},"nodeType":"YulExpressionStatement","src":"10088:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10138:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10149:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10134:3:21"},"nodeType":"YulFunctionCall","src":"10134:18:21"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nodeType":"YulLiteral","src":"10154:34:21","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10127:6:21"},"nodeType":"YulFunctionCall","src":"10127:62:21"},"nodeType":"YulExpressionStatement","src":"10127:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10209:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10220:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10205:3:21"},"nodeType":"YulFunctionCall","src":"10205:18:21"},{"hexValue":"6163746976652070726f7879","kind":"string","nodeType":"YulLiteral","src":"10225:14:21","type":"","value":"active proxy"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10198:6:21"},"nodeType":"YulFunctionCall","src":"10198:42:21"},"nodeType":"YulExpressionStatement","src":"10198:42:21"},{"nodeType":"YulAssignment","src":"10249:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10261:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10272:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10257:3:21"},"nodeType":"YulFunctionCall","src":"10257:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10249:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10025:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10039:4:21","type":""}],"src":"9874:408:21"},{"body":{"nodeType":"YulBlock","src":"10461:173:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10478:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10489:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10471:6:21"},"nodeType":"YulFunctionCall","src":"10471:21:21"},"nodeType":"YulExpressionStatement","src":"10471:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10512:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10523:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10508:3:21"},"nodeType":"YulFunctionCall","src":"10508:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"10528:2:21","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10501:6:21"},"nodeType":"YulFunctionCall","src":"10501:30:21"},"nodeType":"YulExpressionStatement","src":"10501:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10551:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10562:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10547:3:21"},"nodeType":"YulFunctionCall","src":"10547:18:21"},{"hexValue":"4d75737420626520612076616c69642061646472657373","kind":"string","nodeType":"YulLiteral","src":"10567:25:21","type":"","value":"Must be a valid address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10540:6:21"},"nodeType":"YulFunctionCall","src":"10540:53:21"},"nodeType":"YulExpressionStatement","src":"10540:53:21"},{"nodeType":"YulAssignment","src":"10602:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10614:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10625:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10610:3:21"},"nodeType":"YulFunctionCall","src":"10610:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10602:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_468519957235cef46f7c921ca2d833d91a40db6eb163f5e0db878d6b92517276__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10438:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10452:4:21","type":""}],"src":"10287:347:21"},{"body":{"nodeType":"YulBlock","src":"10813:224:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10830:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10841:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10823:6:21"},"nodeType":"YulFunctionCall","src":"10823:21:21"},"nodeType":"YulExpressionStatement","src":"10823:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10864:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10875:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10860:3:21"},"nodeType":"YulFunctionCall","src":"10860:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"10880:2:21","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10853:6:21"},"nodeType":"YulFunctionCall","src":"10853:30:21"},"nodeType":"YulExpressionStatement","src":"10853:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10903:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10914:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10899:3:21"},"nodeType":"YulFunctionCall","src":"10899:18:21"},{"hexValue":"536c61736820746f6b656e732065786365656420616c6c6f6361746564206f6e","kind":"string","nodeType":"YulLiteral","src":"10919:34:21","type":"","value":"Slash tokens exceed allocated on"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10892:6:21"},"nodeType":"YulFunctionCall","src":"10892:62:21"},"nodeType":"YulExpressionStatement","src":"10892:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10974:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10985:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10970:3:21"},"nodeType":"YulFunctionCall","src":"10970:18:21"},{"hexValue":"6573","kind":"string","nodeType":"YulLiteral","src":"10990:4:21","type":"","value":"es"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10963:6:21"},"nodeType":"YulFunctionCall","src":"10963:32:21"},"nodeType":"YulExpressionStatement","src":"10963:32:21"},{"nodeType":"YulAssignment","src":"11004:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11016:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11027:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11012:3:21"},"nodeType":"YulFunctionCall","src":"11012:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11004:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_39674e5f26f3c7c3c2658977ec6d321fccd1e26dd33c7a6e1977b8a6cd3c068f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10790:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10804:4:21","type":""}],"src":"10639:398:21"},{"body":{"nodeType":"YulBlock","src":"11227:294:21","statements":[{"nodeType":"YulAssignment","src":"11237:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11249:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11260:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11245:3:21"},"nodeType":"YulFunctionCall","src":"11245:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11237:4:21"}]},{"nodeType":"YulVariableDeclaration","src":"11273:52:21","value":{"kind":"number","nodeType":"YulLiteral","src":"11283:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11277:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11341:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11356:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"11364:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11352:3:21"},"nodeType":"YulFunctionCall","src":"11352:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11334:6:21"},"nodeType":"YulFunctionCall","src":"11334:34:21"},"nodeType":"YulExpressionStatement","src":"11334:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11388:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11399:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11384:3:21"},"nodeType":"YulFunctionCall","src":"11384:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11408:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"11416:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11404:3:21"},"nodeType":"YulFunctionCall","src":"11404:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11377:6:21"},"nodeType":"YulFunctionCall","src":"11377:43:21"},"nodeType":"YulExpressionStatement","src":"11377:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11440:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11451:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11436:3:21"},"nodeType":"YulFunctionCall","src":"11436:18:21"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11460:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"11468:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11456:3:21"},"nodeType":"YulFunctionCall","src":"11456:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11429:6:21"},"nodeType":"YulFunctionCall","src":"11429:43:21"},"nodeType":"YulExpressionStatement","src":"11429:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11492:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11503:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11488:3:21"},"nodeType":"YulFunctionCall","src":"11488:18:21"},{"name":"value3","nodeType":"YulIdentifier","src":"11508:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11481:6:21"},"nodeType":"YulFunctionCall","src":"11481:34:21"},"nodeType":"YulExpressionStatement","src":"11481:34:21"}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11172:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11183:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11191:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11199:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11207:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11218:4:21","type":""}],"src":"11042:479:21"},{"body":{"nodeType":"YulBlock","src":"11655:168:21","statements":[{"nodeType":"YulAssignment","src":"11665:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11677:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11688:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11673:3:21"},"nodeType":"YulFunctionCall","src":"11673:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11665:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11707:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"11718:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11700:6:21"},"nodeType":"YulFunctionCall","src":"11700:25:21"},"nodeType":"YulExpressionStatement","src":"11700:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11745:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11756:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11741:3:21"},"nodeType":"YulFunctionCall","src":"11741:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11765:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"11773:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11761:3:21"},"nodeType":"YulFunctionCall","src":"11761:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11734:6:21"},"nodeType":"YulFunctionCall","src":"11734:83:21"},"nodeType":"YulExpressionStatement","src":"11734:83:21"}]},"name":"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11616:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11627:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11635:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11646:4:21","type":""}],"src":"11526:297:21"},{"body":{"nodeType":"YulBlock","src":"12002:246:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12019:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12030:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12012:6:21"},"nodeType":"YulFunctionCall","src":"12012:21:21"},"nodeType":"YulExpressionStatement","src":"12012:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12053:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12064:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12049:3:21"},"nodeType":"YulFunctionCall","src":"12049:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"12069:2:21","type":"","value":"56"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12042:6:21"},"nodeType":"YulFunctionCall","src":"12042:30:21"},"nodeType":"YulExpressionStatement","src":"12042:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12092:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12103:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12088:3:21"},"nodeType":"YulFunctionCall","src":"12088:18:21"},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c","kind":"string","nodeType":"YulLiteral","src":"12108:34:21","type":"","value":"UUPSUpgradeable: must not be cal"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12081:6:21"},"nodeType":"YulFunctionCall","src":"12081:62:21"},"nodeType":"YulExpressionStatement","src":"12081:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12163:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12174:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12159:3:21"},"nodeType":"YulFunctionCall","src":"12159:18:21"},{"hexValue":"6c6564207468726f7567682064656c656761746563616c6c","kind":"string","nodeType":"YulLiteral","src":"12179:26:21","type":"","value":"led through delegatecall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12152:6:21"},"nodeType":"YulFunctionCall","src":"12152:54:21"},"nodeType":"YulExpressionStatement","src":"12152:54:21"},{"nodeType":"YulAssignment","src":"12215:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12227:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12238:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12223:3:21"},"nodeType":"YulFunctionCall","src":"12223:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12215:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11979:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11993:4:21","type":""}],"src":"11828:420:21"},{"body":{"nodeType":"YulBlock","src":"12427:236:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12444:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12455:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12437:6:21"},"nodeType":"YulFunctionCall","src":"12437:21:21"},"nodeType":"YulExpressionStatement","src":"12437:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12478:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12489:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12474:3:21"},"nodeType":"YulFunctionCall","src":"12474:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"12494:2:21","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12467:6:21"},"nodeType":"YulFunctionCall","src":"12467:30:21"},"nodeType":"YulExpressionStatement","src":"12467:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12517:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12528:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12513:3:21"},"nodeType":"YulFunctionCall","src":"12513:18:21"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"12533:34:21","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12506:6:21"},"nodeType":"YulFunctionCall","src":"12506:62:21"},"nodeType":"YulExpressionStatement","src":"12506:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12588:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12599:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12584:3:21"},"nodeType":"YulFunctionCall","src":"12584:18:21"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"12604:16:21","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12577:6:21"},"nodeType":"YulFunctionCall","src":"12577:44:21"},"nodeType":"YulExpressionStatement","src":"12577:44:21"},{"nodeType":"YulAssignment","src":"12630:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12642:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12653:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12638:3:21"},"nodeType":"YulFunctionCall","src":"12638:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12630:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12404:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12418:4:21","type":""}],"src":"12253:410:21"},{"body":{"nodeType":"YulBlock","src":"12775:87:21","statements":[{"nodeType":"YulAssignment","src":"12785:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12797:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12808:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12793:3:21"},"nodeType":"YulFunctionCall","src":"12793:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12785:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12827:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12842:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"12850:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12838:3:21"},"nodeType":"YulFunctionCall","src":"12838:17:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12820:6:21"},"nodeType":"YulFunctionCall","src":"12820:36:21"},"nodeType":"YulExpressionStatement","src":"12820:36:21"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12744:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12755:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12766:4:21","type":""}],"src":"12668:194:21"},{"body":{"nodeType":"YulBlock","src":"12899:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12916:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12919:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12909:6:21"},"nodeType":"YulFunctionCall","src":"12909:88:21"},"nodeType":"YulExpressionStatement","src":"12909:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13013:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13016:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13006:6:21"},"nodeType":"YulFunctionCall","src":"13006:15:21"},"nodeType":"YulExpressionStatement","src":"13006:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13037:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13040:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13030:6:21"},"nodeType":"YulFunctionCall","src":"13030:15:21"},"nodeType":"YulExpressionStatement","src":"13030:15:21"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"12867:184:21"},{"body":{"nodeType":"YulBlock","src":"13088:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13105:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13108:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13098:6:21"},"nodeType":"YulFunctionCall","src":"13098:88:21"},"nodeType":"YulExpressionStatement","src":"13098:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13202:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13205:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13195:6:21"},"nodeType":"YulFunctionCall","src":"13195:15:21"},"nodeType":"YulExpressionStatement","src":"13195:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13226:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13229:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13219:6:21"},"nodeType":"YulFunctionCall","src":"13219:15:21"},"nodeType":"YulExpressionStatement","src":"13219:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"13056:184:21"},{"body":{"nodeType":"YulBlock","src":"13292:148:21","statements":[{"body":{"nodeType":"YulBlock","src":"13383:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13385:16:21"},"nodeType":"YulFunctionCall","src":"13385:18:21"},"nodeType":"YulExpressionStatement","src":"13385:18:21"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13308:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"13315:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13305:2:21"},"nodeType":"YulFunctionCall","src":"13305:77:21"},"nodeType":"YulIf","src":"13302:103:21"},{"nodeType":"YulAssignment","src":"13414:20:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13425:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"13432:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13421:3:21"},"nodeType":"YulFunctionCall","src":"13421:13:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13414:3:21"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13274:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"13284:3:21","type":""}],"src":"13245:195:21"},{"body":{"nodeType":"YulBlock","src":"13619:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13636:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13647:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13629:6:21"},"nodeType":"YulFunctionCall","src":"13629:21:21"},"nodeType":"YulExpressionStatement","src":"13629:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13670:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13681:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13666:3:21"},"nodeType":"YulFunctionCall","src":"13666:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"13686:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13659:6:21"},"nodeType":"YulFunctionCall","src":"13659:30:21"},"nodeType":"YulExpressionStatement","src":"13659:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13709:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13720:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13705:3:21"},"nodeType":"YulFunctionCall","src":"13705:18:21"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"13725:34:21","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13698:6:21"},"nodeType":"YulFunctionCall","src":"13698:62:21"},"nodeType":"YulExpressionStatement","src":"13698:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13780:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13791:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13776:3:21"},"nodeType":"YulFunctionCall","src":"13776:18:21"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"13796:8:21","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13769:6:21"},"nodeType":"YulFunctionCall","src":"13769:36:21"},"nodeType":"YulExpressionStatement","src":"13769:36:21"},{"nodeType":"YulAssignment","src":"13814:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13826:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13837:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13822:3:21"},"nodeType":"YulFunctionCall","src":"13822:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13814:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13596:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13610:4:21","type":""}],"src":"13445:402:21"},{"body":{"nodeType":"YulBlock","src":"14026:182:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14043:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14054:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14036:6:21"},"nodeType":"YulFunctionCall","src":"14036:21:21"},"nodeType":"YulExpressionStatement","src":"14036:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14077:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14088:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14073:3:21"},"nodeType":"YulFunctionCall","src":"14073:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"14093:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14066:6:21"},"nodeType":"YulFunctionCall","src":"14066:30:21"},"nodeType":"YulExpressionStatement","src":"14066:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14116:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14127:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14112:3:21"},"nodeType":"YulFunctionCall","src":"14112:18:21"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"14132:34:21","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14105:6:21"},"nodeType":"YulFunctionCall","src":"14105:62:21"},"nodeType":"YulExpressionStatement","src":"14105:62:21"},{"nodeType":"YulAssignment","src":"14176:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14188:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14199:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14184:3:21"},"nodeType":"YulFunctionCall","src":"14184:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14176:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14003:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14017:4:21","type":""}],"src":"13852:356:21"},{"body":{"nodeType":"YulBlock","src":"14387:234:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14404:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14415:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14397:6:21"},"nodeType":"YulFunctionCall","src":"14397:21:21"},"nodeType":"YulExpressionStatement","src":"14397:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14438:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14449:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14434:3:21"},"nodeType":"YulFunctionCall","src":"14434:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"14454:2:21","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14427:6:21"},"nodeType":"YulFunctionCall","src":"14427:30:21"},"nodeType":"YulExpressionStatement","src":"14427:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14477:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14488:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14473:3:21"},"nodeType":"YulFunctionCall","src":"14473:18:21"},{"hexValue":"5374616b6520686173206e6f20617661696c61626c6520746f6b656e7320666f","kind":"string","nodeType":"YulLiteral","src":"14493:34:21","type":"","value":"Stake has no available tokens fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14466:6:21"},"nodeType":"YulFunctionCall","src":"14466:62:21"},"nodeType":"YulExpressionStatement","src":"14466:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14548:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14559:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14544:3:21"},"nodeType":"YulFunctionCall","src":"14544:18:21"},{"hexValue":"72207769746864726177616c","kind":"string","nodeType":"YulLiteral","src":"14564:14:21","type":"","value":"r withdrawal"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14537:6:21"},"nodeType":"YulFunctionCall","src":"14537:42:21"},"nodeType":"YulExpressionStatement","src":"14537:42:21"},{"nodeType":"YulAssignment","src":"14588:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14600:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14611:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14596:3:21"},"nodeType":"YulFunctionCall","src":"14596:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14588:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_6e39312e5e25a8e9d8439074a2fe4bd1f738d2fd210e22911b9d228ea881b2d8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14364:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14378:4:21","type":""}],"src":"14213:408:21"},{"body":{"nodeType":"YulBlock","src":"14707:103:21","statements":[{"body":{"nodeType":"YulBlock","src":"14753:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14762:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14765:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14755:6:21"},"nodeType":"YulFunctionCall","src":"14755:12:21"},"nodeType":"YulExpressionStatement","src":"14755:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14728:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"14737:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14724:3:21"},"nodeType":"YulFunctionCall","src":"14724:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"14749:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14720:3:21"},"nodeType":"YulFunctionCall","src":"14720:32:21"},"nodeType":"YulIf","src":"14717:52:21"},{"nodeType":"YulAssignment","src":"14778:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14794:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14788:5:21"},"nodeType":"YulFunctionCall","src":"14788:16:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14778:6:21"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14673:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14684:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14696:6:21","type":""}],"src":"14626:184:21"},{"body":{"nodeType":"YulBlock","src":"14989:236:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15006:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15017:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14999:6:21"},"nodeType":"YulFunctionCall","src":"14999:21:21"},"nodeType":"YulExpressionStatement","src":"14999:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15040:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15051:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15036:3:21"},"nodeType":"YulFunctionCall","src":"15036:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"15056:2:21","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15029:6:21"},"nodeType":"YulFunctionCall","src":"15029:30:21"},"nodeType":"YulExpressionStatement","src":"15029:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15079:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15090:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15075:3:21"},"nodeType":"YulFunctionCall","src":"15075:18:21"},{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e74617469","kind":"string","nodeType":"YulLiteral","src":"15095:34:21","type":"","value":"ERC1967Upgrade: new implementati"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15068:6:21"},"nodeType":"YulFunctionCall","src":"15068:62:21"},"nodeType":"YulExpressionStatement","src":"15068:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15150:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15161:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15146:3:21"},"nodeType":"YulFunctionCall","src":"15146:18:21"},{"hexValue":"6f6e206973206e6f742055555053","kind":"string","nodeType":"YulLiteral","src":"15166:16:21","type":"","value":"on is not UUPS"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15139:6:21"},"nodeType":"YulFunctionCall","src":"15139:44:21"},"nodeType":"YulExpressionStatement","src":"15139:44:21"},{"nodeType":"YulAssignment","src":"15192:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15204:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15215:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15200:3:21"},"nodeType":"YulFunctionCall","src":"15200:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15192:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14966:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14980:4:21","type":""}],"src":"14815:410:21"},{"body":{"nodeType":"YulBlock","src":"15404:231:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15421:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15432:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15414:6:21"},"nodeType":"YulFunctionCall","src":"15414:21:21"},"nodeType":"YulExpressionStatement","src":"15414:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15455:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15466:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15451:3:21"},"nodeType":"YulFunctionCall","src":"15451:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"15471:2:21","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15444:6:21"},"nodeType":"YulFunctionCall","src":"15444:30:21"},"nodeType":"YulExpressionStatement","src":"15444:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15494:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15505:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15490:3:21"},"nodeType":"YulFunctionCall","src":"15490:18:21"},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f78","kind":"string","nodeType":"YulLiteral","src":"15510:34:21","type":"","value":"ERC1967Upgrade: unsupported prox"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15483:6:21"},"nodeType":"YulFunctionCall","src":"15483:62:21"},"nodeType":"YulExpressionStatement","src":"15483:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15565:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15576:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15561:3:21"},"nodeType":"YulFunctionCall","src":"15561:18:21"},{"hexValue":"6961626c6555554944","kind":"string","nodeType":"YulLiteral","src":"15581:11:21","type":"","value":"iableUUID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15554:6:21"},"nodeType":"YulFunctionCall","src":"15554:39:21"},"nodeType":"YulExpressionStatement","src":"15554:39:21"},{"nodeType":"YulAssignment","src":"15602:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15614:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15625:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15610:3:21"},"nodeType":"YulFunctionCall","src":"15610:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15602:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15381:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15395:4:21","type":""}],"src":"15230:405:21"},{"body":{"nodeType":"YulBlock","src":"15814:233:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15831:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15842:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15824:6:21"},"nodeType":"YulFunctionCall","src":"15824:21:21"},"nodeType":"YulExpressionStatement","src":"15824:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15865:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15876:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15861:3:21"},"nodeType":"YulFunctionCall","src":"15861:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"15881:2:21","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15854:6:21"},"nodeType":"YulFunctionCall","src":"15854:30:21"},"nodeType":"YulExpressionStatement","src":"15854:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15904:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15915:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15900:3:21"},"nodeType":"YulFunctionCall","src":"15900:18:21"},{"hexValue":"4f6e6c792074686520616c6c6f6361746f722063616e20636c6f736520746865","kind":"string","nodeType":"YulLiteral","src":"15920:34:21","type":"","value":"Only the allocator can close the"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15893:6:21"},"nodeType":"YulFunctionCall","src":"15893:62:21"},"nodeType":"YulExpressionStatement","src":"15893:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15975:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15986:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15971:3:21"},"nodeType":"YulFunctionCall","src":"15971:18:21"},{"hexValue":"20616c6c6f636174696f6e","kind":"string","nodeType":"YulLiteral","src":"15991:13:21","type":"","value":" allocation"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15964:6:21"},"nodeType":"YulFunctionCall","src":"15964:41:21"},"nodeType":"YulExpressionStatement","src":"15964:41:21"},{"nodeType":"YulAssignment","src":"16014:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16026:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16037:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16022:3:21"},"nodeType":"YulFunctionCall","src":"16022:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16014:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_657ad636948d1d2c1317a7b7e385baea1089841d6ad67cc13d500cc7a430ad3f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15791:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15805:4:21","type":""}],"src":"15640:407:21"},{"body":{"nodeType":"YulBlock","src":"16226:223:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16243:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16254:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16236:6:21"},"nodeType":"YulFunctionCall","src":"16236:21:21"},"nodeType":"YulExpressionStatement","src":"16236:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16277:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16288:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16273:3:21"},"nodeType":"YulFunctionCall","src":"16273:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"16293:2:21","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16266:6:21"},"nodeType":"YulFunctionCall","src":"16266:30:21"},"nodeType":"YulExpressionStatement","src":"16266:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16316:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16327:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16312:3:21"},"nodeType":"YulFunctionCall","src":"16312:18:21"},{"hexValue":"416c6c6f636174696f6e20686173206e6f20636f6d706c657465642073746174","kind":"string","nodeType":"YulLiteral","src":"16332:34:21","type":"","value":"Allocation has no completed stat"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16305:6:21"},"nodeType":"YulFunctionCall","src":"16305:62:21"},"nodeType":"YulExpressionStatement","src":"16305:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16387:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16398:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16383:3:21"},"nodeType":"YulFunctionCall","src":"16383:18:21"},{"hexValue":"65","kind":"string","nodeType":"YulLiteral","src":"16403:3:21","type":"","value":"e"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16376:6:21"},"nodeType":"YulFunctionCall","src":"16376:31:21"},"nodeType":"YulExpressionStatement","src":"16376:31:21"},{"nodeType":"YulAssignment","src":"16416:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16428:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16439:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16424:3:21"},"nodeType":"YulFunctionCall","src":"16424:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16416:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_dd465ba4be2e63ad02a0450b657ea531627a92660570c417c6b0e7cadb936b3d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16203:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16217:4:21","type":""}],"src":"16052:397:21"},{"body":{"nodeType":"YulBlock","src":"16628:226:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16645:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16656:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16638:6:21"},"nodeType":"YulFunctionCall","src":"16638:21:21"},"nodeType":"YulExpressionStatement","src":"16638:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16679:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16690:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16675:3:21"},"nodeType":"YulFunctionCall","src":"16675:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"16695:2:21","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16668:6:21"},"nodeType":"YulFunctionCall","src":"16668:30:21"},"nodeType":"YulExpressionStatement","src":"16668:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16718:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16729:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16714:3:21"},"nodeType":"YulFunctionCall","src":"16714:18:21"},{"hexValue":"416c6c6f636174696f6e2063616e6e6f7420626520636c6f73656420736f2065","kind":"string","nodeType":"YulLiteral","src":"16734:34:21","type":"","value":"Allocation cannot be closed so e"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16707:6:21"},"nodeType":"YulFunctionCall","src":"16707:62:21"},"nodeType":"YulExpressionStatement","src":"16707:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16789:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16800:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16785:3:21"},"nodeType":"YulFunctionCall","src":"16785:18:21"},{"hexValue":"61726c79","kind":"string","nodeType":"YulLiteral","src":"16805:6:21","type":"","value":"arly"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16778:6:21"},"nodeType":"YulFunctionCall","src":"16778:34:21"},"nodeType":"YulExpressionStatement","src":"16778:34:21"},{"nodeType":"YulAssignment","src":"16821:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16833:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16844:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16829:3:21"},"nodeType":"YulFunctionCall","src":"16829:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16821:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_09cc442701824c51e8cdd950e29e1fc404dd1175d116774e42c0e2968b82338c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16605:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16619:4:21","type":""}],"src":"16454:400:21"},{"body":{"nodeType":"YulBlock","src":"17033:233:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17050:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17061:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17043:6:21"},"nodeType":"YulFunctionCall","src":"17043:21:21"},"nodeType":"YulExpressionStatement","src":"17043:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17084:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17095:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17080:3:21"},"nodeType":"YulFunctionCall","src":"17080:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"17100:2:21","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17073:6:21"},"nodeType":"YulFunctionCall","src":"17073:30:21"},"nodeType":"YulExpressionStatement","src":"17073:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17123:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17134:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17119:3:21"},"nodeType":"YulFunctionCall","src":"17119:18:21"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"17139:34:21","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17112:6:21"},"nodeType":"YulFunctionCall","src":"17112:62:21"},"nodeType":"YulExpressionStatement","src":"17112:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17194:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17205:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17190:3:21"},"nodeType":"YulFunctionCall","src":"17190:18:21"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"17210:13:21","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17183:6:21"},"nodeType":"YulFunctionCall","src":"17183:41:21"},"nodeType":"YulExpressionStatement","src":"17183:41:21"},{"nodeType":"YulAssignment","src":"17233:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17245:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17256:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17241:3:21"},"nodeType":"YulFunctionCall","src":"17241:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17233:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17010:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17024:4:21","type":""}],"src":"16859:407:21"},{"body":{"nodeType":"YulBlock","src":"17371:179:21","statements":[{"body":{"nodeType":"YulBlock","src":"17417:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17426:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17429:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17419:6:21"},"nodeType":"YulFunctionCall","src":"17419:12:21"},"nodeType":"YulExpressionStatement","src":"17419:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17392:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"17401:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17388:3:21"},"nodeType":"YulFunctionCall","src":"17388:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"17413:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17384:3:21"},"nodeType":"YulFunctionCall","src":"17384:32:21"},"nodeType":"YulIf","src":"17381:52:21"},{"nodeType":"YulVariableDeclaration","src":"17442:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17461:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17455:5:21"},"nodeType":"YulFunctionCall","src":"17455:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"17446:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"17504:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17513:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17516:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17506:6:21"},"nodeType":"YulFunctionCall","src":"17506:12:21"},"nodeType":"YulExpressionStatement","src":"17506:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17493:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"17500:1:21","type":"","value":"6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17490:2:21"},"nodeType":"YulFunctionCall","src":"17490:12:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17483:6:21"},"nodeType":"YulFunctionCall","src":"17483:20:21"},"nodeType":"YulIf","src":"17480:40:21"},{"nodeType":"YulAssignment","src":"17529:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"17539:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17529:6:21"}]}]},"name":"abi_decode_tuple_t_enum$_EscrowStatuses_$2979_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17337:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17348:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17360:6:21","type":""}],"src":"17271:279:21"},{"body":{"nodeType":"YulBlock","src":"17603:80:21","statements":[{"body":{"nodeType":"YulBlock","src":"17630:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17632:16:21"},"nodeType":"YulFunctionCall","src":"17632:18:21"},"nodeType":"YulExpressionStatement","src":"17632:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17619:1:21"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17626:1:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17622:3:21"},"nodeType":"YulFunctionCall","src":"17622:6:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17616:2:21"},"nodeType":"YulFunctionCall","src":"17616:13:21"},"nodeType":"YulIf","src":"17613:39:21"},{"nodeType":"YulAssignment","src":"17661:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17672:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"17675:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17668:3:21"},"nodeType":"YulFunctionCall","src":"17668:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"17661:3:21"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17586:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"17589:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"17595:3:21","type":""}],"src":"17555:128:21"},{"body":{"nodeType":"YulBlock","src":"17862:177:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17879:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17890:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17872:6:21"},"nodeType":"YulFunctionCall","src":"17872:21:21"},"nodeType":"YulExpressionStatement","src":"17872:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17913:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17924:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17909:3:21"},"nodeType":"YulFunctionCall","src":"17909:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"17929:2:21","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17902:6:21"},"nodeType":"YulFunctionCall","src":"17902:30:21"},"nodeType":"YulExpressionStatement","src":"17902:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17952:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17963:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17948:3:21"},"nodeType":"YulFunctionCall","src":"17948:18:21"},{"hexValue":"536166654d6174683a206164646974696f6e206f766572666c6f77","kind":"string","nodeType":"YulLiteral","src":"17968:29:21","type":"","value":"SafeMath: addition overflow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17941:6:21"},"nodeType":"YulFunctionCall","src":"17941:57:21"},"nodeType":"YulExpressionStatement","src":"17941:57:21"},{"nodeType":"YulAssignment","src":"18007:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18019:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18030:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18015:3:21"},"nodeType":"YulFunctionCall","src":"18015:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18007:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17839:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17853:4:21","type":""}],"src":"17688:351:21"},{"body":{"nodeType":"YulBlock","src":"18218:232:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18235:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18246:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18228:6:21"},"nodeType":"YulFunctionCall","src":"18228:21:21"},"nodeType":"YulExpressionStatement","src":"18228:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18269:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18280:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18265:3:21"},"nodeType":"YulFunctionCall","src":"18265:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"18285:2:21","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18258:6:21"},"nodeType":"YulFunctionCall","src":"18258:30:21"},"nodeType":"YulExpressionStatement","src":"18258:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18308:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18319:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18304:3:21"},"nodeType":"YulFunctionCall","src":"18304:18:21"},{"hexValue":"496e73756666696369656e7420616d6f756e74206f6620746f6b656e7320696e","kind":"string","nodeType":"YulLiteral","src":"18324:34:21","type":"","value":"Insufficient amount of tokens in"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18297:6:21"},"nodeType":"YulFunctionCall","src":"18297:62:21"},"nodeType":"YulExpressionStatement","src":"18297:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18379:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18390:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18375:3:21"},"nodeType":"YulFunctionCall","src":"18375:18:21"},{"hexValue":"20746865207374616b65","kind":"string","nodeType":"YulLiteral","src":"18395:12:21","type":"","value":" the stake"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18368:6:21"},"nodeType":"YulFunctionCall","src":"18368:40:21"},"nodeType":"YulExpressionStatement","src":"18368:40:21"},{"nodeType":"YulAssignment","src":"18417:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18429:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18440:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18425:3:21"},"nodeType":"YulFunctionCall","src":"18425:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18417:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_32ff48782182739fcc244d74f52670d6e9b17a6fb1ac4c1e48206f109a98e95c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18195:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18209:4:21","type":""}],"src":"18044:406:21"},{"body":{"nodeType":"YulBlock","src":"18629:175:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18646:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18657:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18639:6:21"},"nodeType":"YulFunctionCall","src":"18639:21:21"},"nodeType":"YulExpressionStatement","src":"18639:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18680:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18691:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18676:3:21"},"nodeType":"YulFunctionCall","src":"18676:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"18696:2:21","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18669:6:21"},"nodeType":"YulFunctionCall","src":"18669:30:21"},"nodeType":"YulExpressionStatement","src":"18669:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18719:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18730:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18715:3:21"},"nodeType":"YulFunctionCall","src":"18715:18:21"},{"hexValue":"416c6c6f636174696f6e20616c726561647920657869737473","kind":"string","nodeType":"YulLiteral","src":"18735:27:21","type":"","value":"Allocation already exists"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18708:6:21"},"nodeType":"YulFunctionCall","src":"18708:55:21"},"nodeType":"YulExpressionStatement","src":"18708:55:21"},{"nodeType":"YulAssignment","src":"18772:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18784:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18795:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18780:3:21"},"nodeType":"YulFunctionCall","src":"18780:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18772:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_73c4a70f74250866db4c24faa260c296b6a2f6f74024944ef1e4389f5fc3405b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18606:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18620:4:21","type":""}],"src":"18455:349:21"},{"body":{"nodeType":"YulBlock","src":"18862:205:21","statements":[{"nodeType":"YulVariableDeclaration","src":"18872:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"18881:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"18876:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"18941:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18966:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"18971:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18962:3:21"},"nodeType":"YulFunctionCall","src":"18962:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18985:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"18990:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18981:3:21"},"nodeType":"YulFunctionCall","src":"18981:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18975:5:21"},"nodeType":"YulFunctionCall","src":"18975:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18955:6:21"},"nodeType":"YulFunctionCall","src":"18955:39:21"},"nodeType":"YulExpressionStatement","src":"18955:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18902:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"18905:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18899:2:21"},"nodeType":"YulFunctionCall","src":"18899:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18913:19:21","statements":[{"nodeType":"YulAssignment","src":"18915:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18924:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"18927:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18920:3:21"},"nodeType":"YulFunctionCall","src":"18920:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"18915:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"18895:3:21","statements":[]},"src":"18891:113:21"},{"body":{"nodeType":"YulBlock","src":"19030:31:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"19043:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"19048:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19039:3:21"},"nodeType":"YulFunctionCall","src":"19039:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"19057:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19032:6:21"},"nodeType":"YulFunctionCall","src":"19032:27:21"},"nodeType":"YulExpressionStatement","src":"19032:27:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19019:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"19022:6:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19016:2:21"},"nodeType":"YulFunctionCall","src":"19016:13:21"},"nodeType":"YulIf","src":"19013:48:21"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"18840:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"18845:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"18850:6:21","type":""}],"src":"18809:258:21"},{"body":{"nodeType":"YulBlock","src":"19193:321:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19210:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19221:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19203:6:21"},"nodeType":"YulFunctionCall","src":"19203:21:21"},"nodeType":"YulExpressionStatement","src":"19203:21:21"},{"nodeType":"YulVariableDeclaration","src":"19233:27:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19253:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19247:5:21"},"nodeType":"YulFunctionCall","src":"19247:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"19237:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19280:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19291:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19276:3:21"},"nodeType":"YulFunctionCall","src":"19276:18:21"},{"name":"length","nodeType":"YulIdentifier","src":"19296:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19269:6:21"},"nodeType":"YulFunctionCall","src":"19269:34:21"},"nodeType":"YulExpressionStatement","src":"19269:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19338:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"19346:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19334:3:21"},"nodeType":"YulFunctionCall","src":"19334:15:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19355:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19366:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19351:3:21"},"nodeType":"YulFunctionCall","src":"19351:18:21"},{"name":"length","nodeType":"YulIdentifier","src":"19371:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"19312:21:21"},"nodeType":"YulFunctionCall","src":"19312:66:21"},"nodeType":"YulExpressionStatement","src":"19312:66:21"},{"nodeType":"YulAssignment","src":"19387:121:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19403:9:21"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19422:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"19430:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19418:3:21"},"nodeType":"YulFunctionCall","src":"19418:15:21"},{"kind":"number","nodeType":"YulLiteral","src":"19435:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19414:3:21"},"nodeType":"YulFunctionCall","src":"19414:88:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19399:3:21"},"nodeType":"YulFunctionCall","src":"19399:104:21"},{"kind":"number","nodeType":"YulLiteral","src":"19505:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19395:3:21"},"nodeType":"YulFunctionCall","src":"19395:113:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19387:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19162:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19173:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19184:4:21","type":""}],"src":"19072:442:21"},{"body":{"nodeType":"YulBlock","src":"19568:76:21","statements":[{"body":{"nodeType":"YulBlock","src":"19590:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19592:16:21"},"nodeType":"YulFunctionCall","src":"19592:18:21"},"nodeType":"YulExpressionStatement","src":"19592:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19584:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"19587:1:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19581:2:21"},"nodeType":"YulFunctionCall","src":"19581:8:21"},"nodeType":"YulIf","src":"19578:34:21"},{"nodeType":"YulAssignment","src":"19621:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19633:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"19636:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19629:3:21"},"nodeType":"YulFunctionCall","src":"19629:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"19621:4:21"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19550:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"19553:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"19559:4:21","type":""}],"src":"19519:125:21"},{"body":{"nodeType":"YulBlock","src":"19823:235:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19840:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19851:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19833:6:21"},"nodeType":"YulFunctionCall","src":"19833:21:21"},"nodeType":"YulExpressionStatement","src":"19833:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19874:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19885:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19870:3:21"},"nodeType":"YulFunctionCall","src":"19870:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"19890:2:21","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19863:6:21"},"nodeType":"YulFunctionCall","src":"19863:30:21"},"nodeType":"YulExpressionStatement","src":"19863:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19913:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19924:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19909:3:21"},"nodeType":"YulFunctionCall","src":"19909:18:21"},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e","kind":"string","nodeType":"YulLiteral","src":"19929:34:21","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19902:6:21"},"nodeType":"YulFunctionCall","src":"19902:62:21"},"nodeType":"YulExpressionStatement","src":"19902:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19984:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19995:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19980:3:21"},"nodeType":"YulFunctionCall","src":"19980:18:21"},{"hexValue":"6f74206120636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"20000:15:21","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19973:6:21"},"nodeType":"YulFunctionCall","src":"19973:43:21"},"nodeType":"YulExpressionStatement","src":"19973:43:21"},{"nodeType":"YulAssignment","src":"20025:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20037:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20048:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20033:3:21"},"nodeType":"YulFunctionCall","src":"20033:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20025:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19800:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19814:4:21","type":""}],"src":"19649:409:21"},{"body":{"nodeType":"YulBlock","src":"20192:168:21","statements":[{"nodeType":"YulAssignment","src":"20202:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20214:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20225:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20210:3:21"},"nodeType":"YulFunctionCall","src":"20210:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20202:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20244:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20259:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"20267:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20255:3:21"},"nodeType":"YulFunctionCall","src":"20255:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20237:6:21"},"nodeType":"YulFunctionCall","src":"20237:74:21"},"nodeType":"YulExpressionStatement","src":"20237:74:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20331:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20342:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20327:3:21"},"nodeType":"YulFunctionCall","src":"20327:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"20347:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20320:6:21"},"nodeType":"YulFunctionCall","src":"20320:34:21"},"nodeType":"YulExpressionStatement","src":"20320:34:21"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20153:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20164:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20172:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20183:4:21","type":""}],"src":"20063:297:21"},{"body":{"nodeType":"YulBlock","src":"20522:241:21","statements":[{"nodeType":"YulAssignment","src":"20532:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20544:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20555:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20540:3:21"},"nodeType":"YulFunctionCall","src":"20540:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20532:4:21"}]},{"nodeType":"YulVariableDeclaration","src":"20567:52:21","value":{"kind":"number","nodeType":"YulLiteral","src":"20577:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"20571:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20635:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20650:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"20658:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20646:3:21"},"nodeType":"YulFunctionCall","src":"20646:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20628:6:21"},"nodeType":"YulFunctionCall","src":"20628:34:21"},"nodeType":"YulExpressionStatement","src":"20628:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20682:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20693:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20678:3:21"},"nodeType":"YulFunctionCall","src":"20678:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20702:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"20710:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20698:3:21"},"nodeType":"YulFunctionCall","src":"20698:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20671:6:21"},"nodeType":"YulFunctionCall","src":"20671:43:21"},"nodeType":"YulExpressionStatement","src":"20671:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20734:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20745:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20730:3:21"},"nodeType":"YulFunctionCall","src":"20730:18:21"},{"name":"value2","nodeType":"YulIdentifier","src":"20750:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20723:6:21"},"nodeType":"YulFunctionCall","src":"20723:34:21"},"nodeType":"YulExpressionStatement","src":"20723:34:21"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20475:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20486:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20494:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20502:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20513:4:21","type":""}],"src":"20365:398:21"},{"body":{"nodeType":"YulBlock","src":"20820:176:21","statements":[{"body":{"nodeType":"YulBlock","src":"20939:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20941:16:21"},"nodeType":"YulFunctionCall","src":"20941:18:21"},"nodeType":"YulExpressionStatement","src":"20941:18:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20851:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20844:6:21"},"nodeType":"YulFunctionCall","src":"20844:9:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20837:6:21"},"nodeType":"YulFunctionCall","src":"20837:17:21"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20859:1:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20866:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"20934:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"20862:3:21"},"nodeType":"YulFunctionCall","src":"20862:74:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20856:2:21"},"nodeType":"YulFunctionCall","src":"20856:81:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20833:3:21"},"nodeType":"YulFunctionCall","src":"20833:105:21"},"nodeType":"YulIf","src":"20830:131:21"},{"nodeType":"YulAssignment","src":"20970:20:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20985:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"20988:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"20981:3:21"},"nodeType":"YulFunctionCall","src":"20981:9:21"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"20970:7:21"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20799:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"20802:1:21","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"20808:7:21","type":""}],"src":"20768:228:21"},{"body":{"nodeType":"YulBlock","src":"21047:228:21","statements":[{"body":{"nodeType":"YulBlock","src":"21078:168:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21099:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21102:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21092:6:21"},"nodeType":"YulFunctionCall","src":"21092:88:21"},"nodeType":"YulExpressionStatement","src":"21092:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21200:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21203:4:21","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21193:6:21"},"nodeType":"YulFunctionCall","src":"21193:15:21"},"nodeType":"YulExpressionStatement","src":"21193:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21228:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21231:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21221:6:21"},"nodeType":"YulFunctionCall","src":"21221:15:21"},"nodeType":"YulExpressionStatement","src":"21221:15:21"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21067:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21060:6:21"},"nodeType":"YulFunctionCall","src":"21060:9:21"},"nodeType":"YulIf","src":"21057:189:21"},{"nodeType":"YulAssignment","src":"21255:14:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21264:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"21267:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"21260:3:21"},"nodeType":"YulFunctionCall","src":"21260:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"21255:1:21"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21032:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"21035:1:21","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"21041:1:21","type":""}],"src":"21001:274:21"},{"body":{"nodeType":"YulBlock","src":"21454:223:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21471:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21482:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21464:6:21"},"nodeType":"YulFunctionCall","src":"21464:21:21"},"nodeType":"YulExpressionStatement","src":"21464:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21505:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21516:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21501:3:21"},"nodeType":"YulFunctionCall","src":"21501:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"21521:2:21","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21494:6:21"},"nodeType":"YulFunctionCall","src":"21494:30:21"},"nodeType":"YulExpressionStatement","src":"21494:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21544:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21555:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21540:3:21"},"nodeType":"YulFunctionCall","src":"21540:18:21"},{"hexValue":"536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f","kind":"string","nodeType":"YulLiteral","src":"21560:34:21","type":"","value":"SafeMath: multiplication overflo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21533:6:21"},"nodeType":"YulFunctionCall","src":"21533:62:21"},"nodeType":"YulExpressionStatement","src":"21533:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21615:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21626:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21611:3:21"},"nodeType":"YulFunctionCall","src":"21611:18:21"},{"hexValue":"77","kind":"string","nodeType":"YulLiteral","src":"21631:3:21","type":"","value":"w"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21604:6:21"},"nodeType":"YulFunctionCall","src":"21604:31:21"},"nodeType":"YulExpressionStatement","src":"21604:31:21"},{"nodeType":"YulAssignment","src":"21644:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21656:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21667:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21652:3:21"},"nodeType":"YulFunctionCall","src":"21652:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21644:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21431:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21445:4:21","type":""}],"src":"21280:397:21"},{"body":{"nodeType":"YulBlock","src":"21760:199:21","statements":[{"body":{"nodeType":"YulBlock","src":"21806:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21815:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21818:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21808:6:21"},"nodeType":"YulFunctionCall","src":"21808:12:21"},"nodeType":"YulExpressionStatement","src":"21808:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21781:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"21790:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21777:3:21"},"nodeType":"YulFunctionCall","src":"21777:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"21802:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21773:3:21"},"nodeType":"YulFunctionCall","src":"21773:32:21"},"nodeType":"YulIf","src":"21770:52:21"},{"nodeType":"YulVariableDeclaration","src":"21831:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21850:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21844:5:21"},"nodeType":"YulFunctionCall","src":"21844:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"21835:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"21913:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21922:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21925:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21915:6:21"},"nodeType":"YulFunctionCall","src":"21915:12:21"},"nodeType":"YulExpressionStatement","src":"21915:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21882:5:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21903:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21896:6:21"},"nodeType":"YulFunctionCall","src":"21896:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21889:6:21"},"nodeType":"YulFunctionCall","src":"21889:21:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21879:2:21"},"nodeType":"YulFunctionCall","src":"21879:32:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21872:6:21"},"nodeType":"YulFunctionCall","src":"21872:40:21"},"nodeType":"YulIf","src":"21869:60:21"},{"nodeType":"YulAssignment","src":"21938:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"21948:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21938:6:21"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21726:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21737:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21749:6:21","type":""}],"src":"21682:277:21"},{"body":{"nodeType":"YulBlock","src":"22138:232:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22155:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22166:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22148:6:21"},"nodeType":"YulFunctionCall","src":"22148:21:21"},"nodeType":"YulExpressionStatement","src":"22148:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22189:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22200:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22185:3:21"},"nodeType":"YulFunctionCall","src":"22185:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"22205:2:21","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22178:6:21"},"nodeType":"YulFunctionCall","src":"22178:30:21"},"nodeType":"YulExpressionStatement","src":"22178:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22228:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22239:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22224:3:21"},"nodeType":"YulFunctionCall","src":"22224:18:21"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"22244:34:21","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22217:6:21"},"nodeType":"YulFunctionCall","src":"22217:62:21"},"nodeType":"YulExpressionStatement","src":"22217:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22299:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22310:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22295:3:21"},"nodeType":"YulFunctionCall","src":"22295:18:21"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"22315:12:21","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22288:6:21"},"nodeType":"YulFunctionCall","src":"22288:40:21"},"nodeType":"YulExpressionStatement","src":"22288:40:21"},{"nodeType":"YulAssignment","src":"22337:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22349:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22360:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22345:3:21"},"nodeType":"YulFunctionCall","src":"22345:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22337:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22115:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22129:4:21","type":""}],"src":"21964:406:21"},{"body":{"nodeType":"YulBlock","src":"22512:137:21","statements":[{"nodeType":"YulVariableDeclaration","src":"22522:27:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22542:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22536:5:21"},"nodeType":"YulFunctionCall","src":"22536:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"22526:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22584:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"22592:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22580:3:21"},"nodeType":"YulFunctionCall","src":"22580:17:21"},{"name":"pos","nodeType":"YulIdentifier","src":"22599:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"22604:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"22558:21:21"},"nodeType":"YulFunctionCall","src":"22558:53:21"},"nodeType":"YulExpressionStatement","src":"22558:53:21"},{"nodeType":"YulAssignment","src":"22620:23:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22631:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"22636:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22627:3:21"},"nodeType":"YulFunctionCall","src":"22627:16:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22620:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22488:3:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22493:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22504:3:21","type":""}],"src":"22375:274:21"},{"body":{"nodeType":"YulBlock","src":"22828:179:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22845:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22856:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22838:6:21"},"nodeType":"YulFunctionCall","src":"22838:21:21"},"nodeType":"YulExpressionStatement","src":"22838:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22879:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22890:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22875:3:21"},"nodeType":"YulFunctionCall","src":"22875:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"22895:2:21","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22868:6:21"},"nodeType":"YulFunctionCall","src":"22868:30:21"},"nodeType":"YulExpressionStatement","src":"22868:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22918:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22929:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22914:3:21"},"nodeType":"YulFunctionCall","src":"22914:18:21"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"22934:31:21","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22907:6:21"},"nodeType":"YulFunctionCall","src":"22907:59:21"},"nodeType":"YulExpressionStatement","src":"22907:59:21"},{"nodeType":"YulAssignment","src":"22975:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22987:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22998:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22983:3:21"},"nodeType":"YulFunctionCall","src":"22983:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22975:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22805:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22819:4:21","type":""}],"src":"22654:353:21"},{"body":{"nodeType":"YulBlock","src":"23186:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23203:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23214:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23196:6:21"},"nodeType":"YulFunctionCall","src":"23196:21:21"},"nodeType":"YulExpressionStatement","src":"23196:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23237:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23248:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23233:3:21"},"nodeType":"YulFunctionCall","src":"23233:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"23253:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23226:6:21"},"nodeType":"YulFunctionCall","src":"23226:30:21"},"nodeType":"YulExpressionStatement","src":"23226:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23276:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23287:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23272:3:21"},"nodeType":"YulFunctionCall","src":"23272:18:21"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"23292:34:21","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23265:6:21"},"nodeType":"YulFunctionCall","src":"23265:62:21"},"nodeType":"YulExpressionStatement","src":"23265:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23347:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23358:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23343:3:21"},"nodeType":"YulFunctionCall","src":"23343:18:21"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"23363:8:21","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23336:6:21"},"nodeType":"YulFunctionCall","src":"23336:36:21"},"nodeType":"YulExpressionStatement","src":"23336:36:21"},{"nodeType":"YulAssignment","src":"23381:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23393:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23404:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23389:3:21"},"nodeType":"YulFunctionCall","src":"23389:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23381:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23163:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23177:4:21","type":""}],"src":"23012:402:21"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_struct$_Allocation_$3107_memory_ptr__to_t_struct$_Allocation_$3107_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(mload(value0), _1))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), _1))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_uint32(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_uint32(add(headStart, 64))\n    }\n    function abi_encode_struct_Staker(value, pos)\n    {\n        mstore(pos, mload(value))\n        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n        mstore(add(pos, 0x40), mload(add(value, 0x40)))\n        mstore(add(pos, 0x60), mload(add(value, 0x60)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_struct$_Staker_$3329_memory_ptr_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_struct$_Staker_$3329_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 64)\n        mstore(headStart, 64)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 96)\n        let _1 := 0x20\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        mstore(add(headStart, _1), sub(pos, headStart))\n        let pos_1 := pos\n        let length_1 := mload(value1)\n        mstore(pos, length_1)\n        pos_1 := add(pos, _1)\n        let srcPtr_1 := add(value1, _1)\n        let i_1 := 0\n        for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n        {\n            abi_encode_struct_Staker(mload(srcPtr_1), pos_1)\n            pos_1 := add(pos_1, 0x80)\n            srcPtr_1 := add(srcPtr_1, _1)\n        }\n        tail := pos_1\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_AllocationState_$3093__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 5))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_struct$_Staker_$3329_memory_ptr__to_t_struct$_Staker_$3329_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        abi_encode_struct_Staker(value0, headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint32(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_6708eebd660913c2744ac9640b2ee73a7eba7a7981d51b61a65bb76e5a97917e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Must be a positive number\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5da6c83ac3c3587989369f838fb7a279aaeb0ca15689a96f1849c2d848f08856__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Insufficient amount to unstake\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3b37236e58a99b458bd4a777252a763bc4ff28afa484568ab09417b9f097852c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Total stake is below the minimum\")\n        mstore(add(headStart, 96), \" threshold\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"active proxy\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_468519957235cef46f7c921ca2d833d91a40db6eb163f5e0db878d6b92517276__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Must be a valid address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_39674e5f26f3c7c3c2658977ec6d321fccd1e26dd33c7a6e1977b8a6cd3c068f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Slash tokens exceed allocated on\")\n        mstore(add(headStart, 96), \"es\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"UUPSUpgradeable: must not be cal\")\n        mstore(add(headStart, 96), \"led through delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6e39312e5e25a8e9d8439074a2fe4bd1f738d2fd210e22911b9d228ea881b2d8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Stake has no available tokens fo\")\n        mstore(add(headStart, 96), \"r withdrawal\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: new implementati\")\n        mstore(add(headStart, 96), \"on is not UUPS\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: unsupported prox\")\n        mstore(add(headStart, 96), \"iableUUID\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_657ad636948d1d2c1317a7b7e385baea1089841d6ad67cc13d500cc7a430ad3f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Only the allocator can close the\")\n        mstore(add(headStart, 96), \" allocation\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_dd465ba4be2e63ad02a0450b657ea531627a92660570c417c6b0e7cadb936b3d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Allocation has no completed stat\")\n        mstore(add(headStart, 96), \"e\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_09cc442701824c51e8cdd950e29e1fc404dd1175d116774e42c0e2968b82338c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Allocation cannot be closed so e\")\n        mstore(add(headStart, 96), \"arly\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_enum$_EscrowStatuses_$2979_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(lt(value, 6)) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_32ff48782182739fcc244d74f52670d6e9b17a6fb1ac4c1e48206f109a98e95c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Insufficient amount of tokens in\")\n        mstore(add(headStart, 96), \" the stake\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_73c4a70f74250866db4c24faa260c296b6a2f6f74024944ef1e4389f5fc3405b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Allocation already exists\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"SafeMath: multiplication overflo\")\n        mstore(add(headStart, 96), \"w\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"687":[{"length":32,"start":2874},{"length":32,"start":3050},{"length":32,"start":4162},{"length":32,"start":4338},{"length":32,"start":4667}]},"linkReferences":{},"object":"6080604052600436106101d85760003560e01c80636c5ac81e11610102578063b78b52df11610095578063f2fde38b11610064578063f2fde38b146106f6578063f489f23b14610716578063fc0c546a14610736578063fd5e6dd11461076357600080fd5b8063b78b52df1461065b578063e73e14bf1461067b578063ec5ffac2146106c0578063f1d60d66146106d657600080fd5b80638da5cb5b116100d15780638da5cb5b146105b657806398c657dc146105e1578063a23c44b11461060e578063a694fc3a1461063b57600080fd5b80636c5ac81e1461054b57806370b97cb51461055e578063715018a61461058157806378238c371461059657600080fd5b80633ccfd60b1161017a57806352d1902d1161014957806352d1902d1461047357806363c28db11461049657806366666aa9146104d957806368f39a071461052b57600080fd5b80633ccfd60b146103765780633fd8b02f1461038b5780634f1ef286146103bd57806352a9039c146103d057600080fd5b8063233e9903116101b6578063233e9903146102f45780632e17de78146103165780633659cfe6146103365780633aa63c611461035657600080fd5b80630e022923146101dd57806316934fc4146102625780631af963aa146102c4575b600080fd5b3480156101e957600080fd5b506101fd6101f836600461378b565b610783565b6040516102599190600060a08201905073ffffffffffffffffffffffffffffffffffffffff8084511683528060208501511660208401525060408301516040830152606083015160608301526080830151608083015292915050565b60405180910390f35b34801561026e57600080fd5b506102a461027d36600461378b565b60cd6020526000908152604090208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610259565b3480156102d057600080fd5b506102e46102df36600461378b565b6107f0565b6040519015158152602001610259565b34801561030057600080fd5b5061031461030f3660046137a6565b610857565b005b34801561032257600080fd5b506103146103313660046137a6565b61086b565b34801561034257600080fd5b5061031461035136600461378b565b610b22565b34801561036257600080fd5b506103146103713660046137bf565b610d25565b34801561038257600080fd5b5061031461101f565b34801561039757600080fd5b5060cc546103a89063ffffffff1681565b60405163ffffffff9091168152602001610259565b6103146103cb366004613839565b61102a565b3480156103dc57600080fd5b506104336103eb36600461378b565b60cf602052600090815260409020805460018201546002830154600384015460049094015473ffffffffffffffffffffffffffffffffffffffff938416949390921692909185565b6040805173ffffffffffffffffffffffffffffffffffffffff9687168152959094166020860152928401919091526060830152608082015260a001610259565b34801561047f57600080fd5b50610488611221565b604051908152602001610259565b3480156104a257600080fd5b506104886104b136600461378b565b73ffffffffffffffffffffffffffffffffffffffff16600090815260cd602052604090205490565b3480156104e557600080fd5b5060ca546105069073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610259565b34801561053757600080fd5b5061031461054636600461378b565b61130d565b61031461055936600461392d565b611393565b34801561056a57600080fd5b50610573611533565b604051610259929190613969565b34801561058d57600080fd5b50610314611760565b3480156105a257600080fd5b506103146105b136600461378b565b611772565b3480156105c257600080fd5b5060335473ffffffffffffffffffffffffffffffffffffffff16610506565b3480156105ed57600080fd5b506106016105fc36600461378b565b611783565b6040516102599190613a54565b34801561061a57600080fd5b5061062e61062936600461378b565b61178e565b6040516102599190613a95565b34801561064757600080fd5b506103146106563660046137a6565b611814565b34801561066757600080fd5b50610314610676366004613ac0565b611a72565b34801561068757600080fd5b506102e461069636600461378b565b73ffffffffffffffffffffffffffffffffffffffff16600090815260cd6020526040902054151590565b3480156106cc57600080fd5b5061048860cb5481565b3480156106e257600080fd5b506102e46106f136600461378b565b611a7d565b34801561070257600080fd5b5061031461071136600461378b565b611aa2565b34801561072257600080fd5b50610314610731366004613aea565b611b56565b34801561074257600080fd5b5060c9546105069073ffffffffffffffffffffffffffffffffffffffff1681565b34801561076f57600080fd5b5061050661077e3660046137a6565b611b67565b6107e16040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081525090565b6107ea82611b9e565b92915050565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260cd60209081526040808320815160808101835281548152600182015493810193909352600281015491830191909152600301546060820152819061085090611c66565b1192915050565b61085f611c7c565b61086881611cfd565b50565b33600090815260cd60205260409020816108e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4d757374206265206120706f736974697665206e756d6265720000000000000060448201526064015b60405180910390fd5b60408051608081018252825481526001830154602082015260028301549181019190915260038201546060820152829061091f90611c66565b1015610987576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f496e73756666696369656e7420616d6f756e7420746f20756e7374616b65000060448201526064016108dd565b60006109cf836109c984604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050611d9a565b90611daa565b90508015806109e0575060cb548110155b610a6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f546f74616c207374616b652069732062656c6f7720746865206d696e696d756d60448201527f207468726573686f6c640000000000000000000000000000000000000000000060648201526084016108dd565b60408051608081018252835481526001840154602082015260028401549181019190915260038301546060820152600090610aa690611df3565b90508015610ab757610ab733611e20565b60cc54610ad1908490869063ffffffff90811690611f3216565b6002830154600384015460405133927fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c0192610b1492918252602082015260400190565b60405180910390a250505050565b3073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161415610be8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c000000000000000000000000000000000000000060648201526084016108dd565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610c5d7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610d00576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f7879000000000000000000000000000000000000000060648201526084016108dd565b610d0981611f8a565b6040805160008082526020820190925261086891839190611f92565b610d2d611c7c565b73ffffffffffffffffffffffffffffffffffffffff8216610daa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4d75737420626520612076616c6964206164647265737300000000000000000060448201526064016108dd565b73ffffffffffffffffffffffffffffffffffffffff808416600090815260cd60209081526040808320938616835260cf909152902082610e46576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4d757374206265206120706f736974697665206e756d6265720000000000000060448201526064016108dd565b8060020154831115610eda576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f536c61736820746f6b656e732065786365656420616c6c6f6361746564206f6e60448201527f657300000000000000000000000000000000000000000000000000000000000060648201526084016108dd565b610ee482846121a5565b6002810154610ef39084611daa565b6002820155610f0282846121c0565b60ca54610f259073ffffffffffffffffffffffffffffffffffffffff16846121d2565b60ca546040517fe2ff99ef00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015287811660248301528881166044830152606482018690529091169063e2ff99ef90608401600060405180830381600087803b158015610fa957600080fd5b505af1158015610fbd573d6000803e3d6000fd5b50506040805186815273ffffffffffffffffffffffffffffffffffffffff8a811660208301528089169450891692507f71a8c830f4b619fc8248691f28f33646d6d9553a9fe6f7ba80e179fd391779ba910160405180910390a3505050505050565b61102833611e20565b565b3073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614156110f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c000000000000000000000000000000000000000060648201526084016108dd565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166111657f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614611208576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f7879000000000000000000000000000000000000000060648201526084016108dd565b61121182611f8a565b61121d82826001611f92565b5050565b60003073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146112e8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016108dd565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b73ffffffffffffffffffffffffffffffffffffffff811661138a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4d75737420626520612076616c6964206164647265737300000000000000000060448201526064016108dd565b610868816121f6565b600054610100900460ff16158080156113b35750600054600160ff909116105b806113cd5750303b1580156113cd575060005460ff166001145b611459576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016108dd565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905580156114b757600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b6114bf6124b4565b6114ca848484612554565b801561152d57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b606080600060ce80548060200260200160405190810160405280929190818152602001828054801561159b57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611570575b50508351939450505081151590506116145760408051600080825260208201818152828401909352909190611609565b6115f66040518060800160405280600081526020016000815260200160008152602001600081525090565b8152602001906001900390816115cb5790505b509350935050509091565b60008167ffffffffffffffff81111561162f5761162f61380a565b60405190808252806020026020018201604052801561168b57816020015b6116786040518060800160405280600081526020016000815260200160008152602001600081525090565b81526020019060019003908161164d5790505b50905060005b828110156117545760cd60008583815181106116af576116af613b05565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505082828151811061173657611736613b05565b6020026020010181905250808061174c90613b63565b915050611691565b50919491935090915050565b611768611c7c565b611028600061263d565b61177a611c7c565b610868816126b4565b60006107ea826127a0565b6117b96040518060800160405280600081526020016000815260200160008152602001600081525090565b5073ffffffffffffffffffffffffffffffffffffffff16600090815260cd6020908152604091829020825160808101845281548152600182015492810192909252600281015492820192909252600390910154606082015290565b6000811161187e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4d757374206265206120706f736974697665206e756d6265720000000000000060448201526064016108dd565b33600090815260cd6020908152604091829020825160808101845281548152600182015492810192909252600281015492820192909252600390910154606082015260cb546118d6836118d084611d9a565b90612936565b1015611964576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f546f74616c207374616b652069732062656c6f7720746865206d696e696d756d60448201527f207468726573686f6c640000000000000000000000000000000000000000000060648201526084016108dd565b8051611a1457506040805160808101825260008082526020808301828152838501838152606085018481523380865260cd90945295842085518155915160018084019190915590516002830155945160039091015560ce805494850181559091527fd36cd1c74ef8d7326d8021b776c18fb5a5724b7f7bc93c2f42e43e10ef27d12a90920180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169092179091555b611a1f3330846129af565b33600090815260cd60205260409020611a3890836129d4565b60405182815233907f0a7bb2e28cc4698aac06db79cf9163bfcc20719286cf59fa7d492ceda1b8edc2906020015b60405180910390a25050565b61121d3383836129e0565b600080611a89836127a0565b6004811115611a9a57611a9a613a25565b141592915050565b611aaa611c7c565b73ffffffffffffffffffffffffffffffffffffffff8116611b4d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016108dd565b6108688161263d565b611b5e611c7c565b61086881612d93565b60ce8181548110611b7757600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b611bfc6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081525090565b5073ffffffffffffffffffffffffffffffffffffffff908116600090815260cf6020908152604091829020825160a0810184528154851681526001820154909416918401919091526002810154918301919091526003810154606083015260040154608082015290565b60006107ea611c7483612e62565b835190611daa565b60335473ffffffffffffffffffffffffffffffffffffffff163314611028576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016108dd565b60008111611d67576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4d757374206265206120706f736974697665206e756d6265720000000000000060448201526064016108dd565b60cb81905560405181907f4ae07ff10245d5c3330b9a15e8c6b8644ea81b656ff7d5428edda75e77d061cd90600090a250565b604081015181516000916107ea91905b6000611dec83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612e7f565b9392505050565b6000816060015160001480611e0b5750816060015143105b15611e1857506000919050565b506040015190565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260cd60205260408120611e4e90612ed3565b905060008111611ee0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f5374616b6520686173206e6f20617661696c61626c6520746f6b656e7320666f60448201527f72207769746864726177616c000000000000000000000000000000000000000060648201526084016108dd565b611eea82826121d2565b8173ffffffffffffffffffffffffffffffffffffffff167f8108595eb6bad3acefa9da467d90cc2217686d5c5ac85460f8b7849c840645fc82604051611a6691815260200190565b6002830154819015611f5e57611f5b611f4f856003015443612f2e565b85600201548486612f48565b90505b6002840154611f6d9084612936565b6002850155611f7c4382612936565b846003018190555050505050565b610868611c7c565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611fca57611fc583612f7f565b505050565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561201057600080fd5b505afa92505050801561205e575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261205b91810190613b9c565b60015b6120ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f74205555505300000000000000000000000000000000000060648201526084016108dd565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114612199576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c6555554944000000000000000000000000000000000000000000000060648201526084016108dd565b50611fc5838383613089565b60018201546121b49082611daa565b82600101819055505050565b81546121cc9082611daa565b90915550565b60c95461121d9073ffffffffffffffffffffffffffffffffffffffff1683836130ae565b73ffffffffffffffffffffffffffffffffffffffff808216600090815260cf60205260409020600181015490911633146122b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4f6e6c792074686520616c6c6f6361746f722063616e20636c6f73652074686560448201527f20616c6c6f636174696f6e00000000000000000000000000000000000000000060648201526084016108dd565b60006122bd836127a0565b905060048160048111156122d3576122d3613a25565b14612360576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f416c6c6f636174696f6e20686173206e6f20636f6d706c65746564207374617460448201527f650000000000000000000000000000000000000000000000000000000000000060648201526084016108dd565b4360048301819055600383015460009161237991612f2e565b90506000811161240a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f416c6c6f636174696f6e2063616e6e6f7420626520636c6f73656420736f206560448201527f61726c790000000000000000000000000000000000000000000000000000000060648201526084016108dd565b6002830154600184015473ffffffffffffffffffffffffffffffffffffffff16600090815260cd6020526040902061244290826121a5565b600060028501556001840154600485015460405173ffffffffffffffffffffffffffffffffffffffff8089169316917f9ec6f3fe8a57fd60609439a97d851e335d635eeb931fca0f26d5fc217936b3c6916124a591868252602082015260400190565b60405180910390a35050505050565b600054610100900460ff1661254b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016108dd565b6110283361263d565b600054610100900460ff166125eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016108dd565b60c980547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff851617905561263482611cfd565b611fc581612d93565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b73ffffffffffffffffffffffffffffffffffffffff8116612731576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4d75737420626520612076616c6964206164647265737300000000000000000060448201526064016108dd565b60ca80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f173d73afad648e625c4a53878536f7a2debed1f51a04f21d728bce3cf534fcc190600090a250565b73ffffffffffffffffffffffffffffffffffffffff808216600090815260cf60205260408120600181015491929091166127dd5750600092915050565b600083905060008173ffffffffffffffffffffffffffffffffffffffff1663200d2ed26040518163ffffffff1660e01b815260040160206040518083038186803b15801561282a57600080fd5b505afa15801561283e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128629190613bb5565b9050826003015460001415801561287d575060008360020154115b801561289a5750600181600581111561289857612898613a25565b145b156128aa57506001949350505050565b60048301541580156128cd575060008160058111156128cb576128cb613a25565b145b156128dd57506002949350505050565b600483015415801561291b575060048160058111156128fe576128fe613a25565b148061291b5750600581600581111561291957612919613a25565b145b1561292b57506004949350505050565b506003949350505050565b6000806129438385613bd6565b905083811015611dec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016108dd565b60c954611fc59073ffffffffffffffffffffffffffffffffffffffff16848484613182565b81546121cc9082612936565b73ffffffffffffffffffffffffffffffffffffffff8216612a5d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4d75737420626520612076616c6964206164647265737300000000000000000060448201526064016108dd565b80612ad860cd60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050611c66565b1015612b66576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f496e73756666696369656e7420616d6f756e74206f6620746f6b656e7320696e60448201527f20746865207374616b650000000000000000000000000000000000000000000060648201526084016108dd565b60008111612bd0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4d757374206265206120706f736974697665206e756d6265720000000000000060448201526064016108dd565b6000612bdb836127a0565b6004811115612bec57612bec613a25565b14612c53576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f416c6c6f636174696f6e20616c7265616479206578697374730000000000000060448201526064016108dd565b6040805160a08101825273ffffffffffffffffffffffffffffffffffffffff8085168083528682166020808501828152858701888152436060880190815260006080890181815296815260cf855289812089518154908a167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216178255945160018201805491909a1695169490941790975590516002830181905590516003830155935160049091015590835260cd90529290209091612d1591906131e0565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fe994fee7ff4d4c7994071d0b9ed626d9b41e4ed5c6126806241b1906a774a2a083604001518460600151604051612d85929190918252602082015260400190565b60405180910390a350505050565b60008163ffffffff1611612e03576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4d757374206265206120706f736974697665206e756d6265720000000000000060448201526064016108dd565b60cc80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff83169081179091556040517f4cabd6339016cba9857f365bca7bc3c7e1976823b85052fd7281d313f52c8ae890600090a250565b60006107ea8260400151836020015161293690919063ffffffff16565b60008184841115612ebd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dd9190613c1a565b506000612eca8486613c6b565b95945050505050565b600080612f1283604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050611df3565b905080156107ea57612f2483826131ef565b6107ea83826121c0565b6000818311612f3e576000611dec565b611dec8383611daa565b6000612f74612f578584612936565b612f6e612f648686613214565b6118d08989613214565b906132c9565b90505b949350505050565b73ffffffffffffffffffffffffffffffffffffffff81163b613023576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e74726163740000000000000000000000000000000000000060648201526084016108dd565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6130928361330b565b60008251118061309f5750805b15611fc55761152d8383613358565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052611fc59084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261337d565b60405173ffffffffffffffffffffffffffffffffffffffff8085166024830152831660448201526064810182905261152d9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401613100565b60018201546121b49082612936565b60028201546131fe9082611daa565b6002830181905561121d57600060038301555050565b600082613223575060006107ea565b600061322f8385613c82565b90508261323c8583613cbf565b14611dec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60448201527f770000000000000000000000000000000000000000000000000000000000000060648201526084016108dd565b6000611dec83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061348c565b61331481612f7f565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060611dec8383604051806060016040528060278152602001613d39602791396134d4565b60006133df826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166135599092919063ffffffff16565b90508051600014806134005750808060200190518101906134009190613cfa565b611fc5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016108dd565b600081836134c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dd9190613c1a565b506000612eca8486613cbf565b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516134fe9190613d1c565b600060405180830381855af49150503d8060008114613539576040519150601f19603f3d011682016040523d82523d6000602084013e61353e565b606091505b509150915061354f86838387613568565b9695505050505050565b6060612f778484600085613605565b606083156135fb5782516135f45773ffffffffffffffffffffffffffffffffffffffff85163b6135f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016108dd565b5081612f77565b612f77838361371e565b606082471015613697576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016108dd565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516136c09190613d1c565b60006040518083038185875af1925050503d80600081146136fd576040519150601f19603f3d011682016040523d82523d6000602084013e613702565b606091505b509150915061371387838387613568565b979650505050505050565b81511561372e5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dd9190613c1a565b803573ffffffffffffffffffffffffffffffffffffffff8116811461378657600080fd5b919050565b60006020828403121561379d57600080fd5b611dec82613762565b6000602082840312156137b857600080fd5b5035919050565b600080600080608085870312156137d557600080fd5b6137de85613762565b93506137ec60208601613762565b92506137fa60408601613762565b9396929550929360600135925050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806040838503121561384c57600080fd5b61385583613762565b9150602083013567ffffffffffffffff8082111561387257600080fd5b818501915085601f83011261388657600080fd5b8135818111156138985761389861380a565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156138de576138de61380a565b816040528281528860208487010111156138f757600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b803563ffffffff8116811461378657600080fd5b60008060006060848603121561394257600080fd5b61394b84613762565b92506020840135915061396060408501613919565b90509250925092565b604080825283519082018190526000906020906060840190828701845b828110156139b857815173ffffffffffffffffffffffffffffffffffffffff1684529284019290840190600101613986565b5050508381038285015284518082528583019183019060005b81811015613a1857613a05838551805182526020810151602083015260408101516040830152606081015160608301525050565b92840192608092909201916001016139d1565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6020810160058310613a8f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b81518152602080830151908201526040808301519082015260608083015190820152608081016107ea565b60008060408385031215613ad357600080fd5b613adc83613762565b946020939093013593505050565b600060208284031215613afc57600080fd5b611dec82613919565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613b9557613b95613b34565b5060010190565b600060208284031215613bae57600080fd5b5051919050565b600060208284031215613bc757600080fd5b815160068110611dec57600080fd5b60008219821115613be957613be9613b34565b500190565b60005b83811015613c09578181015183820152602001613bf1565b8381111561152d5750506000910152565b6020815260008251806020840152613c39816040850160208701613bee565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600082821015613c7d57613c7d613b34565b500390565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613cba57613cba613b34565b500290565b600082613cf5577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600060208284031215613d0c57600080fd5b81518015158114611dec57600080fd5b60008251613d2e818460208701613bee565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212203b8e2caf1718f6570deca74e9a14f262c88b72eb91e69b773f199622a878676064736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C5AC81E GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xB78B52DF GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F6 JUMPI DUP1 PUSH4 0xF489F23B EQ PUSH2 0x716 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x736 JUMPI DUP1 PUSH4 0xFD5E6DD1 EQ PUSH2 0x763 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB78B52DF EQ PUSH2 0x65B JUMPI DUP1 PUSH4 0xE73E14BF EQ PUSH2 0x67B JUMPI DUP1 PUSH4 0xEC5FFAC2 EQ PUSH2 0x6C0 JUMPI DUP1 PUSH4 0xF1D60D66 EQ PUSH2 0x6D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5B6 JUMPI DUP1 PUSH4 0x98C657DC EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0xA23C44B1 EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C5AC81E EQ PUSH2 0x54B JUMPI DUP1 PUSH4 0x70B97CB5 EQ PUSH2 0x55E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0x78238C37 EQ PUSH2 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x52D1902D GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0x63C28DB1 EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0x66666AA9 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0x68F39A07 EQ PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x3FD8B02F EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0x52A9039C EQ PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x233E9903 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x233E9903 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x3AA63C61 EQ PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE022923 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x1AF963AA EQ PUSH2 0x2C4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x378B JUMP JUMPDEST PUSH2 0x783 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP2 SWAP1 PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 MLOAD AND DUP4 MSTORE DUP1 PUSH1 0x20 DUP6 ADD MLOAD AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A4 PUSH2 0x27D CALLDATASIZE PUSH1 0x4 PUSH2 0x378B JUMP JUMPDEST PUSH1 0xCD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x259 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E4 PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0x378B JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x259 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0x37A6 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x37A6 JUMP JUMPDEST PUSH2 0x86B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x378B JUMP JUMPDEST PUSH2 0xB22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x37BF JUMP JUMPDEST PUSH2 0xD25 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0x101F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCC SLOAD PUSH2 0x3A8 SWAP1 PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x259 JUMP JUMPDEST PUSH2 0x314 PUSH2 0x3CB CALLDATASIZE PUSH1 0x4 PUSH2 0x3839 JUMP JUMPDEST PUSH2 0x102A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x433 PUSH2 0x3EB CALLDATASIZE PUSH1 0x4 PUSH2 0x378B JUMP JUMPDEST PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND SWAP5 SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 DUP8 AND DUP2 MSTORE SWAP6 SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x259 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x488 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x259 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x488 PUSH2 0x4B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x378B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCA SLOAD PUSH2 0x506 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x259 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0x546 CALLDATASIZE PUSH1 0x4 PUSH2 0x378B JUMP JUMPDEST PUSH2 0x130D JUMP JUMPDEST PUSH2 0x314 PUSH2 0x559 CALLDATASIZE PUSH1 0x4 PUSH2 0x392D JUMP JUMPDEST PUSH2 0x1393 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x573 PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP3 SWAP2 SWAP1 PUSH2 0x3969 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0x1760 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0x5B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x378B JUMP JUMPDEST PUSH2 0x1772 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x506 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x601 PUSH2 0x5FC CALLDATASIZE PUSH1 0x4 PUSH2 0x378B JUMP JUMPDEST PUSH2 0x1783 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x3A54 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62E PUSH2 0x629 CALLDATASIZE PUSH1 0x4 PUSH2 0x378B JUMP JUMPDEST PUSH2 0x178E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x3A95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0x656 CALLDATASIZE PUSH1 0x4 PUSH2 0x37A6 JUMP JUMPDEST PUSH2 0x1814 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0x676 CALLDATASIZE PUSH1 0x4 PUSH2 0x3AC0 JUMP JUMPDEST PUSH2 0x1A72 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E4 PUSH2 0x696 CALLDATASIZE PUSH1 0x4 PUSH2 0x378B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x488 PUSH1 0xCB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E4 PUSH2 0x6F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x378B JUMP JUMPDEST PUSH2 0x1A7D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0x711 CALLDATASIZE PUSH1 0x4 PUSH2 0x378B JUMP JUMPDEST PUSH2 0x1AA2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0x731 CALLDATASIZE PUSH1 0x4 PUSH2 0x3AEA JUMP JUMPDEST PUSH2 0x1B56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC9 SLOAD PUSH2 0x506 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x506 PUSH2 0x77E CALLDATASIZE PUSH1 0x4 PUSH2 0x37A6 JUMP JUMPDEST PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x7E1 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x7EA DUP3 PUSH2 0x1B9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE DUP2 SWAP1 PUSH2 0x850 SWAP1 PUSH2 0x1C66 JUMP JUMPDEST GT SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x85F PUSH2 0x1C7C JUMP JUMPDEST PUSH2 0x868 DUP2 PUSH2 0x1CFD JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 PUSH2 0x8E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206265206120706F736974697665206E756D62657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 SLOAD DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE DUP3 SWAP1 PUSH2 0x91F SWAP1 PUSH2 0x1C66 JUMP JUMPDEST LT ISZERO PUSH2 0x987 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420616D6F756E7420746F20756E7374616B650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CF DUP4 PUSH2 0x9C9 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x1D9A JUMP JUMPDEST SWAP1 PUSH2 0x1DAA JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 PUSH2 0x9E0 JUMPI POP PUSH1 0xCB SLOAD DUP2 LT ISZERO JUMPDEST PUSH2 0xA6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C207374616B652069732062656C6F7720746865206D696E696D756D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207468726573686F6C6400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP4 SLOAD DUP2 MSTORE PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH2 0xAA6 SWAP1 PUSH2 0x1DF3 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xAB7 JUMPI PUSH2 0xAB7 CALLER PUSH2 0x1E20 JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH2 0xAD1 SWAP1 DUP5 SWAP1 DUP7 SWAP1 PUSH4 0xFFFFFFFF SWAP1 DUP2 AND SWAP1 PUSH2 0x1F32 AND JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x40 MLOAD CALLER SWAP3 PUSH32 0xA5AE833D0BB1DCD632D98A8B70973E8516812898E19BF27B70071EBC8DC52C01 SWAP3 PUSH2 0xB14 SWAP3 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ ISZERO PUSH2 0xBE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC5D PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH2 0xD09 DUP2 PUSH2 0x1F8A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x868 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH2 0xD2D PUSH2 0x1C7C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xDAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420626520612076616C69642061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE PUSH1 0xCF SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP3 PUSH2 0xE46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206265206120706F736974697665206E756D62657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD DUP4 GT ISZERO PUSH2 0xEDA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536C61736820746F6B656E732065786365656420616C6C6F6361746564206F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH2 0xEE4 DUP3 DUP5 PUSH2 0x21A5 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0xEF3 SWAP1 DUP5 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SSTORE PUSH2 0xF02 DUP3 DUP5 PUSH2 0x21C0 JUMP JUMPDEST PUSH1 0xCA SLOAD PUSH2 0xF25 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x21D2 JUMP JUMPDEST PUSH1 0xCA SLOAD PUSH1 0x40 MLOAD PUSH32 0xE2FF99EF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP9 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xE2FF99EF SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFBD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 DUP10 AND SWAP5 POP DUP10 AND SWAP3 POP PUSH32 0x71A8C830F4B619FC8248691F28F33646D6D9553A9FE6F7BA80E179FD391779BA SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1028 CALLER PUSH2 0x1E20 JUMP JUMPDEST JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ ISZERO PUSH2 0x10F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1165 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1208 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x1211 DUP3 PUSH2 0x1F8A JUMP JUMPDEST PUSH2 0x121D DUP3 DUP3 PUSH1 0x1 PUSH2 0x1F92 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x12E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x138A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420626520612076616C69642061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x868 DUP2 PUSH2 0x21F6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x13B3 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x13CD JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13CD JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x1459 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x14B7 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x14BF PUSH2 0x24B4 JUMP JUMPDEST PUSH2 0x14CA DUP5 DUP5 DUP5 PUSH2 0x2554 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x152D JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0xCE DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x159B JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1570 JUMPI JUMPDEST POP POP DUP4 MLOAD SWAP4 SWAP5 POP POP POP DUP2 ISZERO ISZERO SWAP1 POP PUSH2 0x1614 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 DUP2 MSTORE DUP3 DUP5 ADD SWAP1 SWAP4 MSTORE SWAP1 SWAP2 SWAP1 PUSH2 0x1609 JUMP JUMPDEST PUSH2 0x15F6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x15CB JUMPI SWAP1 POP JUMPDEST POP SWAP4 POP SWAP4 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x162F JUMPI PUSH2 0x162F PUSH2 0x380A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x168B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1678 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x164D JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1754 JUMPI PUSH1 0xCD PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x16AF JUMPI PUSH2 0x16AF PUSH2 0x3B05 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1736 JUMPI PUSH2 0x1736 PUSH2 0x3B05 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x174C SWAP1 PUSH2 0x3B63 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1691 JUMP JUMPDEST POP SWAP2 SWAP5 SWAP2 SWAP4 POP SWAP1 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1768 PUSH2 0x1C7C JUMP JUMPDEST PUSH2 0x1028 PUSH1 0x0 PUSH2 0x263D JUMP JUMPDEST PUSH2 0x177A PUSH2 0x1C7C JUMP JUMPDEST PUSH2 0x868 DUP2 PUSH2 0x26B4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EA DUP3 PUSH2 0x27A0 JUMP JUMPDEST PUSH2 0x17B9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x187E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206265206120706F736974697665206E756D62657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xCB SLOAD PUSH2 0x18D6 DUP4 PUSH2 0x18D0 DUP5 PUSH2 0x1D9A JUMP JUMPDEST SWAP1 PUSH2 0x2936 JUMP JUMPDEST LT ISZERO PUSH2 0x1964 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C207374616B652069732062656C6F7720746865206D696E696D756D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207468726573686F6C6400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1A14 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE DUP4 DUP6 ADD DUP4 DUP2 MSTORE PUSH1 0x60 DUP6 ADD DUP5 DUP2 MSTORE CALLER DUP1 DUP7 MSTORE PUSH1 0xCD SWAP1 SWAP5 MSTORE SWAP6 DUP5 KECCAK256 DUP6 MLOAD DUP2 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH1 0x2 DUP4 ADD SSTORE SWAP5 MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH1 0xCE DUP1 SLOAD SWAP5 DUP6 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xD36CD1C74EF8D7326D8021B776C18FB5A5724B7F7BC93C2F42E43E10EF27D12A SWAP1 SWAP3 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE JUMPDEST PUSH2 0x1A1F CALLER ADDRESS DUP5 PUSH2 0x29AF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1A38 SWAP1 DUP4 PUSH2 0x29D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0xA7BB2E28CC4698AAC06DB79CF9163BFCC20719286CF59FA7D492CEDA1B8EDC2 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x121D CALLER DUP4 DUP4 PUSH2 0x29E0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A89 DUP4 PUSH2 0x27A0 JUMP JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1A9A JUMPI PUSH2 0x1A9A PUSH2 0x3A25 JUMP JUMPDEST EQ ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AAA PUSH2 0x1C7C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1B4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x868 DUP2 PUSH2 0x263D JUMP JUMPDEST PUSH2 0x1B5E PUSH2 0x1C7C JUMP JUMPDEST PUSH2 0x868 DUP2 PUSH2 0x2D93 JUMP JUMPDEST PUSH1 0xCE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1B77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x1BFC PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP6 AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP1 SWAP5 AND SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EA PUSH2 0x1C74 DUP4 PUSH2 0x2E62 JUMP JUMPDEST DUP4 MLOAD SWAP1 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1028 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1D67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206265206120706F736974697665206E756D62657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0xCB DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x4AE07FF10245D5C3330B9A15E8C6B8644EA81B656FF7D5428EDDA75E77D061CD SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD DUP2 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x7EA SWAP2 SWAP1 JUMPDEST PUSH1 0x0 PUSH2 0x1DEC DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2E7F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x1E0B JUMPI POP DUP2 PUSH1 0x60 ADD MLOAD NUMBER LT JUMPDEST ISZERO PUSH2 0x1E18 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x40 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1E4E SWAP1 PUSH2 0x2ED3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1EE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B6520686173206E6F20617661696C61626C6520746F6B656E7320666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207769746864726177616C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x1EEA DUP3 DUP3 PUSH2 0x21D2 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8108595EB6BAD3ACEFA9DA467D90CC2217686D5C5AC85460F8B7849C840645FC DUP3 PUSH1 0x40 MLOAD PUSH2 0x1A66 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SLOAD DUP2 SWAP1 ISZERO PUSH2 0x1F5E JUMPI PUSH2 0x1F5B PUSH2 0x1F4F DUP6 PUSH1 0x3 ADD SLOAD NUMBER PUSH2 0x2F2E JUMP JUMPDEST DUP6 PUSH1 0x2 ADD SLOAD DUP5 DUP7 PUSH2 0x2F48 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x2 DUP5 ADD SLOAD PUSH2 0x1F6D SWAP1 DUP5 PUSH2 0x2936 JUMP JUMPDEST PUSH1 0x2 DUP6 ADD SSTORE PUSH2 0x1F7C NUMBER DUP3 PUSH2 0x2936 JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x868 PUSH2 0x1C7C JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1FCA JUMPI PUSH2 0x1FC5 DUP4 PUSH2 0x2F7F JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2010 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x205E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x205B SWAP2 DUP2 ADD SWAP1 PUSH2 0x3B9C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x20EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6E206973206E6F742055555053000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 EQ PUSH2 0x2199 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6961626C65555549440000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST POP PUSH2 0x1FC5 DUP4 DUP4 DUP4 PUSH2 0x3089 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0x21B4 SWAP1 DUP3 PUSH2 0x1DAA JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP2 SLOAD PUSH2 0x21CC SWAP1 DUP3 PUSH2 0x1DAA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0xC9 SLOAD PUSH2 0x121D SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP4 PUSH2 0x30AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 AND CALLER EQ PUSH2 0x22B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792074686520616C6C6F6361746F722063616E20636C6F736520746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20616C6C6F636174696F6E000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BD DUP4 PUSH2 0x27A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x22D3 JUMPI PUSH2 0x22D3 PUSH2 0x3A25 JUMP JUMPDEST EQ PUSH2 0x2360 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C6F636174696F6E20686173206E6F20636F6D706C657465642073746174 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST NUMBER PUSH1 0x4 DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x0 SWAP2 PUSH2 0x2379 SWAP2 PUSH2 0x2F2E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x240A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x416C6C6F636174696F6E2063616E6E6F7420626520636C6F73656420736F2065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x61726C7900000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 DUP5 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x2442 SWAP1 DUP3 PUSH2 0x21A5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP10 AND SWAP4 AND SWAP2 PUSH32 0x9EC6F3FE8A57FD60609439A97D851E335D635EEB931FCA0F26D5FC217936B3C6 SWAP2 PUSH2 0x24A5 SWAP2 DUP7 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x254B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x1028 CALLER PUSH2 0x263D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x25EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0xC9 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND OR SWAP1 SSTORE PUSH2 0x2634 DUP3 PUSH2 0x1CFD JUMP JUMPDEST PUSH2 0x1FC5 DUP2 PUSH2 0x2D93 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x2731 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420626520612076616C69642061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0xCA DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x173D73AFAD648E625C4A53878536F7A2DEBED1F51A04F21D728BCE3CF534FCC1 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 AND PUSH2 0x27DD JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x200D2ED2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x282A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x283E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2862 SWAP2 SWAP1 PUSH2 0x3BB5 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x3 ADD SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x287D JUMPI POP PUSH1 0x0 DUP4 PUSH1 0x2 ADD SLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x289A JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2898 JUMPI PUSH2 0x2898 PUSH2 0x3A25 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x28AA JUMPI POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP4 ADD SLOAD ISZERO DUP1 ISZERO PUSH2 0x28CD JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x28CB JUMPI PUSH2 0x28CB PUSH2 0x3A25 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x28DD JUMPI POP PUSH1 0x2 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP4 ADD SLOAD ISZERO DUP1 ISZERO PUSH2 0x291B JUMPI POP PUSH1 0x4 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x28FE JUMPI PUSH2 0x28FE PUSH2 0x3A25 JUMP JUMPDEST EQ DUP1 PUSH2 0x291B JUMPI POP PUSH1 0x5 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2919 JUMPI PUSH2 0x2919 PUSH2 0x3A25 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x292B JUMPI POP PUSH1 0x4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP PUSH1 0x3 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2943 DUP4 DUP6 PUSH2 0x3BD6 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1DEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0xC9 SLOAD PUSH2 0x1FC5 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP5 DUP5 PUSH2 0x3182 JUMP JUMPDEST DUP2 SLOAD PUSH2 0x21CC SWAP1 DUP3 PUSH2 0x2936 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x2A5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420626520612076616C69642061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST DUP1 PUSH2 0x2AD8 PUSH1 0xCD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x1C66 JUMP JUMPDEST LT ISZERO PUSH2 0x2B66 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420616D6F756E74206F6620746F6B656E7320696E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20746865207374616B6500000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2BD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206265206120706F736974697665206E756D62657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BDB DUP4 PUSH2 0x27A0 JUMP JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2BEC JUMPI PUSH2 0x2BEC PUSH2 0x3A25 JUMP JUMPDEST EQ PUSH2 0x2C53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C6F636174696F6E20616C72656164792065786973747300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND DUP1 DUP4 MSTORE DUP7 DUP3 AND PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP9 DUP2 MSTORE NUMBER PUSH1 0x60 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 PUSH1 0x80 DUP10 ADD DUP2 DUP2 MSTORE SWAP7 DUP2 MSTORE PUSH1 0xCF DUP6 MSTORE DUP10 DUP2 KECCAK256 DUP10 MLOAD DUP2 SLOAD SWAP1 DUP11 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 DUP3 AND OR DUP3 SSTORE SWAP5 MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP11 AND SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP8 SSTORE SWAP1 MLOAD PUSH1 0x2 DUP4 ADD DUP2 SWAP1 SSTORE SWAP1 MLOAD PUSH1 0x3 DUP4 ADD SSTORE SWAP4 MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE SWAP1 DUP4 MSTORE PUSH1 0xCD SWAP1 MSTORE SWAP3 SWAP1 KECCAK256 SWAP1 SWAP2 PUSH2 0x2D15 SWAP2 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE994FEE7FF4D4C7994071D0B9ED626D9B41E4ED5C6126806241B1906A774A2A0 DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x2D85 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT PUSH2 0x2E03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206265206120706F736974697665206E756D62657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0xCC DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000 AND PUSH4 0xFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x4CABD6339016CBA9857F365BCA7BC3C7E1976823B85052FD7281D313F52C8AE8 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EA DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x2936 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x2EBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DD SWAP2 SWAP1 PUSH2 0x3C1A JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2ECA DUP5 DUP7 PUSH2 0x3C6B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2F12 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x1DF3 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x7EA JUMPI PUSH2 0x2F24 DUP4 DUP3 PUSH2 0x31EF JUMP JUMPDEST PUSH2 0x7EA DUP4 DUP3 PUSH2 0x21C0 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT PUSH2 0x2F3E JUMPI PUSH1 0x0 PUSH2 0x1DEC JUMP JUMPDEST PUSH2 0x1DEC DUP4 DUP4 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F74 PUSH2 0x2F57 DUP6 DUP5 PUSH2 0x2936 JUMP JUMPDEST PUSH2 0x2F6E PUSH2 0x2F64 DUP7 DUP7 PUSH2 0x3214 JUMP JUMPDEST PUSH2 0x18D0 DUP10 DUP10 PUSH2 0x3214 JUMP JUMPDEST SWAP1 PUSH2 0x32C9 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE PUSH2 0x3023 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3092 DUP4 PUSH2 0x330B JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x309F JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x1FC5 JUMPI PUSH2 0x152D DUP4 DUP4 PUSH2 0x3358 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1FC5 SWAP1 DUP5 SWAP1 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x337D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x152D SWAP1 DUP6 SWAP1 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x84 ADD PUSH2 0x3100 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0x21B4 SWAP1 DUP3 PUSH2 0x2936 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SLOAD PUSH2 0x31FE SWAP1 DUP3 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x2 DUP4 ADD DUP2 SWAP1 SSTORE PUSH2 0x121D JUMPI PUSH1 0x0 PUSH1 0x3 DUP4 ADD SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3223 JUMPI POP PUSH1 0x0 PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x322F DUP4 DUP6 PUSH2 0x3C82 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x323C DUP6 DUP4 PUSH2 0x3CBF JUMP JUMPDEST EQ PUSH2 0x1DEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DEC DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x348C JUMP JUMPDEST PUSH2 0x3314 DUP2 PUSH2 0x2F7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1DEC DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3D39 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x34D4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33DF DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3559 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x3400 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3400 SWAP2 SWAP1 PUSH2 0x3CFA JUMP JUMPDEST PUSH2 0x1FC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x34C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DD SWAP2 SWAP1 PUSH2 0x3C1A JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2ECA DUP5 DUP7 PUSH2 0x3CBF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x34FE SWAP2 SWAP1 PUSH2 0x3D1C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3539 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x353E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x354F DUP7 DUP4 DUP4 DUP8 PUSH2 0x3568 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2F77 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x3605 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x35FB JUMPI DUP3 MLOAD PUSH2 0x35F4 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x35F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST POP DUP2 PUSH2 0x2F77 JUMP JUMPDEST PUSH2 0x2F77 DUP4 DUP4 PUSH2 0x371E JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x3697 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x36C0 SWAP2 SWAP1 PUSH2 0x3D1C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x36FD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3702 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3713 DUP8 DUP4 DUP4 DUP8 PUSH2 0x3568 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x372E JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DD SWAP2 SWAP1 PUSH2 0x3C1A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x379D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DEC DUP3 PUSH2 0x3762 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x37D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x37DE DUP6 PUSH2 0x3762 JUMP JUMPDEST SWAP4 POP PUSH2 0x37EC PUSH1 0x20 DUP7 ADD PUSH2 0x3762 JUMP JUMPDEST SWAP3 POP PUSH2 0x37FA PUSH1 0x40 DUP7 ADD PUSH2 0x3762 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x384C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3855 DUP4 PUSH2 0x3762 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3872 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3886 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3898 JUMPI PUSH2 0x3898 PUSH2 0x380A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x38DE JUMPI PUSH2 0x38DE PUSH2 0x380A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x38F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3942 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x394B DUP5 PUSH2 0x3762 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x3960 PUSH1 0x40 DUP6 ADD PUSH2 0x3919 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x39B8 JUMPI DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3986 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE DUP6 DUP4 ADD SWAP2 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3A18 JUMPI PUSH2 0x3A05 DUP4 DUP6 MLOAD DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE POP POP JUMP JUMPDEST SWAP3 DUP5 ADD SWAP3 PUSH1 0x80 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x39D1 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x5 DUP4 LT PUSH2 0x3A8F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3AD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3ADC DUP4 PUSH2 0x3762 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DEC DUP3 PUSH2 0x3919 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x3B95 JUMPI PUSH2 0x3B95 PUSH2 0x3B34 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x6 DUP2 LT PUSH2 0x1DEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3BE9 JUMPI PUSH2 0x3BE9 PUSH2 0x3B34 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3C09 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3BF1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x152D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x3C39 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x3BEE JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3C7D JUMPI PUSH2 0x3C7D PUSH2 0x3B34 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3CBA JUMPI PUSH2 0x3CBA PUSH2 0x3B34 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3CF5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1DEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3D2E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3BEE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x706673582212203B8E2C 0xAF OR XOR 0xF6 JUMPI 0xD 0xEC 0xA7 0x4E SWAP11 EQ CALLCODE PUSH3 0xC88B72 0xEB SWAP2 0xE6 SWAP12 PUSH24 0x3F199622A878676064736F6C634300080900330000000000 ","sourceMap":"752:17074:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6643:166;;;;;;;;;;-1:-1:-1;6643:166:13;;;;;:::i;:::-;;:::i;:::-;;;;;;554:4:21;596:3;585:9;581:19;573:27;;619:42;707:2;698:6;692:13;688:22;677:9;670:41;779:2;771:4;763:6;759:17;753:24;749:33;742:4;731:9;727:20;720:63;;839:4;831:6;827:17;821:24;814:4;803:9;799:20;792:54;902:4;894:6;890:17;884:24;877:4;866:9;862:20;855:54;965:4;957:6;953:17;947:24;940:4;929:9;925:20;918:54;406:572;;;;;6643:166:13;;;;;;;;1202:47;;;;;;;;;;-1:-1:-1;1202:47:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1214:25:21;;;1270:2;1255:18;;1248:34;;;;1298:18;;;1291:34;1356:2;1341:18;;1334:34;1201:3;1186:19;1202:47:13;983:391:21;6313:157:13;;;;;;;;;;-1:-1:-1;6313:157:13;;;;;:::i;:::-;;:::i;:::-;;;1544:14:21;;1537:22;1519:41;;1507:2;1492:18;6313:157:13;1379:187:21;3779:138:13;;;;;;;;;;-1:-1:-1;3779:138:13;;;;;:::i;:::-;;:::i;:::-;;11057:836;;;;;;;;;;-1:-1:-1;11057:836:13;;;;;:::i;:::-;;:::i;3408:195:6:-;;;;;;;;;;-1:-1:-1;3408:195:6;;;;;:::i;:::-;;:::i;12803:977:13:-;;;;;;;;;;-1:-1:-1;12803:977:13;;;;;:::i;:::-;;:::i;11979:76::-;;;;;;;;;;;;;:::i;1133:24::-;;;;;;;;;;-1:-1:-1;1133:24:13;;;;;;;;;;;2338:10:21;2326:23;;;2308:42;;2296:2;2281:18;1133:24:13;2164:192:21;3922:220:6;;;;;;:::i;:::-;;:::i;1359:58:13:-;;;;;;;;;;-1:-1:-1;1359:58:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3878:42:21;3947:15;;;3929:34;;3999:15;;;;3994:2;3979:18;;3972:43;4031:18;;;4024:34;;;;4089:2;4074:18;;4067:34;4132:3;4117:19;;4110:35;3855:3;3840:19;1359:58:13;3609:542:21;3027:131:6;;;;;;;;;;;;;:::i;:::-;;;4302:25:21;;;4290:2;4275:18;3027:131:6;4156:177:21;8949:149:13;;;;;;;;;;-1:-1:-1;8949:149:13;;;;;:::i;:::-;9063:15;;9037:7;9063:15;;;:6;:15;;;;;:28;;8949:149;968:34;;;;;;;;;;-1:-1:-1;968:34:13;;;;;;;;;;;4696:42:21;4684:55;;;4666:74;;4654:2;4639:18;968:34:13;4520:226:21;15652:191:13;;;;;;;;;;-1:-1:-1;15652:191:13;;;;;:::i;:::-;;:::i;3149:260::-;;;;;;:::i;:::-;;:::i;9499:613::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;2085:101:0:-;;;;;;;;;;;;;:::i;4979:116:13:-;;;;;;;;;;-1:-1:-1;4979:116:13;;;;;:::i;:::-;;:::i;1462:85:0:-;;;;;;;;;;-1:-1:-1;1534:6:0;;;;1462:85;;7307:174:13;;;;;;;;;;-1:-1:-1;7307:174:13;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;9244:143::-;;;;;;;;;;-1:-1:-1;9244:143:13;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;10230:668::-;;;;;;;;;;-1:-1:-1;10230:668:13;;;;;:::i;:::-;;:::i;14016:162::-;;;;;;;;;;-1:-1:-1;14016:162:13;;;;;:::i;:::-;;:::i;5990:129::-;;;;;;;;;;-1:-1:-1;5990:129:13;;;;;:::i;:::-;6080:15;;6057:4;6080:15;;;:6;:15;;;;;:28;:32;;;5990:129;1066:27;;;;;;;;;;;;;;;;5635:181;;;;;;;;;;-1:-1:-1;5635:181:13;;;;;:::i;:::-;;:::i;2335:198:0:-;;;;;;;;;;-1:-1:-1;2335:198:0;;;;;:::i;:::-;;:::i;4392:115:13:-;;;;;;;;;;-1:-1:-1;4392:115:13;;;;;:::i;:::-;;:::i;914:20::-;;;;;;;;;;-1:-1:-1;914:20:13;;;;;;;;1279:24;;;;;;;;;;-1:-1:-1;1279:24:13;;;;;:::i;:::-;;:::i;6643:166::-;6736:17;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6736:17:13;6772:30;6787:14;6772;:30::i;:::-;6765:37;6643:166;-1:-1:-1;;6643:166:13:o;6313:157::-;6426:15;;;6403:4;6426:15;;;:6;:15;;;;;;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6403:4;;6426:33;;:31;:33::i;:::-;:37;;6313:157;-1:-1:-1;;6313:157:13:o;3779:138::-;1355:13:0;:11;:13::i;:::-;3879:31:13::1;3896:13;3879:16;:31::i;:::-;3779:138:::0;:::o;11057:836::-;11157:10;11119:28;11150:18;;;:6;:18;;;;;11187:11;11179:49;;;;;;;8286:2:21;11179:49:13;;;8268:21:21;8325:2;8305:18;;;8298:30;8364:27;8344:18;;;8337:55;8409:18;;11179:49:13;;;;;;;;;11259:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11287:7;;11259:24;;:22;:24::i;:::-;:35;;11238:112;;;;;;;8640:2:21;11238:112:13;;;8622:21:21;8679:2;8659:18;;;8652:30;8718:32;8698:18;;;8691:60;8768:18;;11238:112:13;8438:354:21;11238:112:13;11361:16;11380:39;11411:7;11380:26;:6;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:26::i;:::-;:30;;:39::i;:::-;11361:58;-1:-1:-1;11450:13:13;;;:41;;;11479:12;;11467:8;:24;;11450:41;11429:130;;;;;;;8999:2:21;11429:130:13;;;8981:21:21;9038:2;9018:18;;;9011:30;9077:34;9057:18;;;9050:62;9148:12;9128:18;;;9121:40;9178:19;;11429:130:13;8797:406:21;11429:130:13;11597:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11570:24;;11597:27;;:25;:27::i;:::-;11570:54;-1:-1:-1;11638:20:13;;11634:72;;11674:21;11684:10;11674:9;:21::i;:::-;11743:10;;11716:38;;:6;;11734:7;;11743:10;;;;;11716:17;:38;:::i;:::-;11819:19;;;;11852:24;;;;11770:116;;11795:10;;11770:116;;;;9382:25:21;;;9438:2;9423:18;;9416:34;9370:2;9355:18;;9208:248;11770:116:13;;;;;;;;11109:784;;;11057:836;:::o;3408:195:6:-;1755:4;1747:23;1764:6;1747:23;;;1739:80;;;;;;;9663:2:21;1739:80:6;;;9645:21:21;9702:2;9682:18;;;9675:30;9741:34;9721:18;;;9714:62;9812:14;9792:18;;;9785:42;9844:19;;1739:80:6;9461:408:21;1739:80:6;1861:6;1837:30;;:20;1180:66:3;1557:65;;;;1478:151;1837:20:6;:30;;;1829:87;;;;;;;10076:2:21;1829:87:6;;;10058:21:21;10115:2;10095:18;;;10088:30;10154:34;10134:18;;;10127:62;10225:14;10205:18;;;10198:42;10257:19;;1829:87:6;9874:408:21;1829:87:6;3489:36:::1;3507:17;3489;:36::i;:::-;3576:12;::::0;;3586:1:::1;3576:12:::0;;;::::1;::::0;::::1;::::0;;;3535:61:::1;::::0;3557:17;;3576:12;3535:21:::1;:61::i;12803:977:13:-:0;1355:13:0;:11;:13::i;:::-;12978:28:13::1;::::0;::::1;12970:64;;;::::0;::::1;::::0;;10489:2:21;12970:64:13::1;::::0;::::1;10471:21:21::0;10528:2;10508:18;;;10501:30;10567:25;10547:18;;;10540:53;10610:18;;12970:64:13::1;10287:347:21::0;12970:64:13::1;13076:15;::::0;;::::1;13045:28;13076:15:::0;;;:6:::1;:15;::::0;;;;;;;13134:27;;::::1;::::0;;:11:::1;:27:::0;;;;;13180:11;13172:49:::1;;;::::0;::::1;::::0;;8286:2:21;13172:49:13::1;::::0;::::1;8268:21:21::0;8325:2;8305:18;;;8298:30;8364:27;8344:18;;;8337:55;8409:18;;13172:49:13::1;8084:349:21::0;13172:49:13::1;13264:10;:17;;;13253:7;:28;;13232:109;;;::::0;::::1;::::0;;10841:2:21;13232:109:13::1;::::0;::::1;10823:21:21::0;10880:2;10860:18;;;10853:30;10919:34;10899:18;;;10892:62;10990:4;10970:18;;;10963:32;11012:19;;13232:109:13::1;10639:398:21::0;13232:109:13::1;13352:26;:6:::0;13370:7;13352:17:::1;:26::i;:::-;13408:17;::::0;::::1;::::0;:30:::1;::::0;13430:7;13408:21:::1;:30::i;:::-;13388:17;::::0;::::1;:50:::0;13449:23:::1;:6:::0;13464:7;13449:14:::1;:23::i;:::-;13497:10;::::0;13483:34:::1;::::0;13497:10:::1;;13509:7:::0;13483:13:::1;:34::i;:::-;13578:10;::::0;13566:135:::1;::::0;;;;13578:10:::1;11352:15:21::0;;;13566:135:13::1;::::0;::::1;11334:34:21::0;11404:15;;;11384:18;;;11377:43;11456:15;;;11436:18;;;11429:43;11488:18;;;11481:34;;;13578:10:13;;::::1;::::0;13566:33:::1;::::0;11245:19:21;;13566:135:13::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;13717:56:13::1;::::0;;11700:25:21;;;13717:56:13::1;11761:55:21::0;;;11756:2;11741:18;;11734:83;13717:56:13;;::::1;::::0;-1:-1:-1;13717:56:13;::::1;::::0;-1:-1:-1;13717:56:13::1;::::0;11673:18:21;13717:56:13::1;;;;;;;12960:820;;12803:977:::0;;;;:::o;11979:76::-;12027:21;12037:10;12027:9;:21::i;:::-;11979:76::o;3922:220:6:-;1755:4;1747:23;1764:6;1747:23;;;1739:80;;;;;;;9663:2:21;1739:80:6;;;9645:21:21;9702:2;9682:18;;;9675:30;9741:34;9721:18;;;9714:62;9812:14;9792:18;;;9785:42;9844:19;;1739:80:6;9461:408:21;1739:80:6;1861:6;1837:30;;:20;1180:66:3;1557:65;;;;1478:151;1837:20:6;:30;;;1829:87;;;;;;;10076:2:21;1829:87:6;;;10058:21:21;10115:2;10095:18;;;10088:30;10154:34;10134:18;;;10127:62;10225:14;10205:18;;;10198:42;10257:19;;1829:87:6;9874:408:21;1829:87:6;4037:36:::1;4055:17;4037;:36::i;:::-;4083:52;4105:17;4124:4;4130;4083:21;:52::i;:::-;3922:220:::0;;:::o;3027:131::-;3105:7;2190:4;2182:23;2199:6;2182:23;;2174:92;;;;;;;12030:2:21;2174:92:6;;;12012:21:21;12069:2;12049:18;;;12042:30;12108:34;12088:18;;;12081:62;12179:26;12159:18;;;12152:54;12223:19;;2174:92:6;11828:420:21;2174:92:6;-1:-1:-1;1180:66:3::1;3027:131:6::0;:::o;15652:191:13:-;15737:28;;;15729:64;;;;;;;10489:2:21;15729:64:13;;;10471:21:21;10528:2;10508:18;;;10501:30;10567:25;10547:18;;;10540:53;10610:18;;15729:64:13;10287:347:21;15729:64:13;15804:32;15821:14;15804:16;:32::i;3149:260::-;3279:19:5;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:5;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:5;1713:19:10;:23;;;3387:66:5;;-1:-1:-1;3436:12:5;;;;;:17;3387:66;3325:201;;;;;;;12455:2:21;3325:201:5;;;12437:21:21;12494:2;12474:18;;;12467:30;12533:34;12513:18;;;12506:62;12604:16;12584:18;;;12577:44;12638:19;;3325:201:5;12253:410:21;3325:201:5;3536:12;:16;;;;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;;;;;;;3562:65;3305:26:13::1;:24;:26::i;:::-;3342:60;3367:6;3375:13;3390:11;3342:24;:60::i;:::-;3651:14:5::0;3647:99;;;3697:5;3681:21;;;;;;3721:14;;-1:-1:-1;12820:36:21;;3721:14:5;;12808:2:21;12793:18;3721:14:5;;;;;;;3647:99;3269:483;3149:260:13;;;:::o;9499:613::-;9591:16;9609:22;9647:33;9683:7;9647:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9724:23:13;;9647:43;;-1:-1:-1;;;9762:18:13;;9758:98;;-1:-1:-1;9758:98:13;;9804:16;;;9818:1;9804:16;;;;;;9822:22;;;;;;;;;9804:16;;;9822:22;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9822:22:13;;;;;;;;;;;;;;;;;9796:49;;;;;;9499:613;;:::o;9758:98::-;9866:31;9920:13;9900:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9900:34:13;;;;;;;;;;;;;;;;;9866:68;;9950:10;9945:115;9971:13;9966:2;:18;9945:115;;;10021:6;:28;10028:16;10045:2;10028:20;;;;;;;;:::i;:::-;;;;;;;10021:28;;;;;;;;;;;;;;;10006:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:8;10015:2;10006:12;;;;;;;;:::i;:::-;;;;;;:43;;;;9986:4;;;;;:::i;:::-;;;;9945:115;;;-1:-1:-1;10078:16:13;;10096:8;;-1:-1:-1;9499:613:13;;-1:-1:-1;;9499:613:13:o;2085:101:0:-;1355:13;:11;:13::i;:::-;2149:30:::1;2176:1;2149:18;:30::i;4979:116:13:-:0;1355:13:0;:11;:13::i;:::-;5061:27:13::1;5076:11;5061:14;:27::i;7307:174::-:0;7405:15;7439:35;7459:14;7439:19;:35::i;9244:143::-;9326:20;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9326:20:13;-1:-1:-1;9365:15:13;;;;;;:6;:15;;;;;;;;;9358:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9244:143::o;10230:668::-;10308:1;10298:7;:11;10290:49;;;;;;;8286:2:21;10290:49:13;;;8268:21:21;8325:2;8305:18;;;8298:30;8364:27;8344:18;;;8337:55;8409:18;;10290:49:13;8084:349:21;10290:49:13;10387:10;10350:27;10380:18;;;:6;:18;;;;;;;;;10350:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10472:12;;10429:39;10460:7;10429:26;10350:48;10429:24;:26::i;:::-;:30;;:39::i;:::-;:55;;10408:144;;;;;;;8999:2:21;10408:144:13;;;8981:21:21;9038:2;9018:18;;;9011:30;9077:34;9057:18;;;9050:62;9148:12;9128:18;;;9121:40;9178:19;;10408:144:13;8797:406:21;10408:144:13;10567:19;;10563:168;;-1:-1:-1;10616:25:13;;;;;;;;-1:-1:-1;10616:25:13;;;;;;;;;;;;;;;;;;;;;;10662:10;10655:18;;;:6;:18;;;;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;10696:7;:24;;;;;;;;;;;;;;;;;;;;;;;;10563:168;10741:53;10759:10;10779:4;10786:7;10741:17;:53::i;:::-;10812:10;10805:18;;;;:6;:18;;;;;:35;;10832:7;10805:26;:35::i;:::-;10856;;4302:25:21;;;10871:10:13;;10856:35;;4290:2:21;4275:18;10856:35:13;;;;;;;;10280:618;10230:668;:::o;14016:162::-;14125:46;14135:10;14147:14;14163:7;14125:9;:46::i;5635:181::-;5727:4;;5750:35;5770:14;5750:19;:35::i;:::-;:59;;;;;;;;:::i;:::-;;;;5635:181;-1:-1:-1;;5635:181:13:o;2335:198:0:-;1355:13;:11;:13::i;:::-;2423:22:::1;::::0;::::1;2415:73;;;::::0;::::1;::::0;;13647:2:21;2415:73:0::1;::::0;::::1;13629:21:21::0;13686:2;13666:18;;;13659:30;13725:34;13705:18;;;13698:62;13796:8;13776:18;;;13769:36;13822:19;;2415:73:0::1;13445:402:21::0;2415:73:0::1;2498:28;2517:8;2498:18;:28::i;4392:115:13:-:0;1355:13:0;:11;:13::i;:::-;4473:27:13::1;4488:11;4473:14;:27::i;1279:24::-:0;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1279:24:13;:::o;6974:154::-;7058:17;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7058:17:13;-1:-1:-1;7094:27:13;;;;;;;;:11;:27;;;;;;;;;7087:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6974:154::o;3672:165:18:-;3762:7;3788:42;3811:18;:5;:16;:18::i;:::-;3788;;;:22;:42::i;1620:130:0:-;1534:6;;1683:23;1534:6;965:10:11;1683:23:0;1675:68;;;;;;;14054:2:21;1675:68:0;;;14036:21:21;;;14073:18;;;14066:30;14132:34;14112:18;;;14105:62;14184:18;;1675:68:0;13852:356:21;4023:211:13;4114:1;4098:13;:17;4090:55;;;;;;;8286:2:21;4090:55:13;;;8268:21:21;8325:2;8305:18;;;8298:30;8364:27;8344:18;;;8337:55;8409:18;;4090:55:13;8084:349:21;4090:55:13;4155:12;:28;;;4198:29;;4170:13;;4198:29;;;;;4023:211;:::o;4314:167:18:-;4455:18;;;;4432;;4406:7;;4432:42;;:18;1322:134:20;1380:7;1406:43;1410:1;1413;1406:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1399:50;1322:134;-1:-1:-1;;;1322:134:20:o;4628:296:18:-;4721:7;4757:5;:23;;;4784:1;4757:28;:82;;;;4816:5;:23;;;4801:12;:38;4757:82;4740:143;;;-1:-1:-1;4871:1:18;;4628:296;-1:-1:-1;4628:296:18:o;4740:143::-;-1:-1:-1;4899:18:18;;;;4628:296::o;12208:349:13:-;12289:15;;;12262:24;12289:15;;;:6;:15;;;;;:32;;:30;:32::i;:::-;12262:59;;12371:1;12352:16;:20;12331:111;;;;;;;14415:2:21;12331:111:13;;;14397:21:21;14454:2;14434:18;;;14427:30;14493:34;14473:18;;;14466:62;14564:14;14544:18;;;14537:42;14596:19;;12331:111:13;14213:408:21;12331:111:13;12453:40;12467:7;12476:16;12453:13;:40::i;:::-;12524:7;12509:41;;;12533:16;12509:41;;;;4302:25:21;;4290:2;4275:18;;4156:177;2043:596:18;2221:18;;;;2199:7;;2221:22;2217:286;;2275:217;2313:54;2329:5;:23;;;2354:12;2313:15;:54::i;:::-;2410:5;:18;;;2446:7;2471;2275:20;:217::i;:::-;2259:233;;2217:286;2534:18;;;;:31;;2557:7;2534:22;:31::i;:::-;2513:18;;;:52;2601:31;:12;2618:13;2601:16;:31::i;:::-;2575:5;:23;;:57;;;;2165:474;2043:596;;;:::o;17467:66:13:-;1355:13:0;:11;:13::i;2841:944:3:-;839:66;3257:59;;;3253:526;;;3332:37;3351:17;3332:18;:37::i;:::-;2841:944;;;:::o;3253:526::-;3433:17;3404:61;;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3404:63:3;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3400:302;;3631:56;;;;;15017:2:21;3631:56:3;;;14999:21:21;15056:2;15036:18;;;15029:30;15095:34;15075:18;;;15068:62;15166:16;15146:18;;;15139:44;15200:19;;3631:56:3;14815:410:21;3400:302:3;1180:66;3517:28;;3509:82;;;;;;;15432:2:21;3509:82:3;;;15414:21:21;15471:2;15451:18;;;15444:30;15510:34;15490:18;;;15483:62;15581:11;15561:18;;;15554:39;15610:19;;3509:82:3;15230:405:21;3509:82:3;3468:138;3715:53;3733:17;3752:4;3758:9;3715:17;:53::i;1662:150:18:-;1771:21;;;;:34;;1797:7;1771:25;:34::i;:::-;1747:5;:21;;:58;;;;1662:150;;:::o;1019:141::-;1122:18;;:31;;1145:7;1122:22;:31::i;:::-;1101:52;;;-1:-1:-1;1019:141:18:o;16998:146:13:-;17119:5;;17067:70;;17119:5;;17127:2;17131:5;17067:33;:70::i;15980:1012::-;16080:27;;;;16048:29;16080:27;;;:11;:27;;;;;16138:17;;;;16080:27;;16138:17;16159:10;16138:31;16117:121;;;;;;;15842:2:21;16117:121:13;;;15824:21:21;15881:2;15861:18;;;15854:30;15920:34;15900:18;;;15893:62;15991:13;15971:18;;;15964:41;16022:19;;16117:121:13;15640:407:21;16117:121:13;16249:31;16283:35;16303:14;16283:19;:35::i;:::-;16249:69;-1:-1:-1;16368:25:13;16349:15;:44;;;;;;;;:::i;:::-;;16328:124;;;;;;;16254:2:21;16328:124:13;;;16236:21:21;16293:2;16273:18;;;16266:30;16332:34;16312:18;;;16305:62;16403:3;16383:18;;;16376:31;16424:19;;16328:124:13;16052:397:21;16328:124:13;16485:12;16463:19;;;:34;;;16592:20;;;;16507;;16530:92;;:15;:92::i;:::-;16507:115;;16655:1;16640:12;:16;16632:65;;;;;;;16656:2:21;16632:65:13;;;16638:21:21;16695:2;16675:18;;;16668:30;16734:34;16714:18;;;16707:62;16805:6;16785:18;;;16778:34;16829:19;;16632:65:13;16454:400:21;16632:65:13;16726:17;;;;16761;;;;;;16708:15;16754:25;;;:6;:25;;;;;:45;;16726:17;16754:36;:45::i;:::-;16829:1;16809:17;;;:21;16876:17;;;;16956:19;;;;16846:139;;;;;;;16876:17;;16846:139;;;;16907:7;9382:25:21;;9438:2;9423:18;;9416:34;9370:2;9355:18;;9208:248;16846:139:13;;;;;;;;16038:954;;;;15980:1012;:::o;1125:111:0:-;5374:13:5;;;;;;;5366:69;;;;;;;17061:2:21;5366:69:5;;;17043:21:21;17100:2;17080:18;;;17073:30;17139:34;17119:18;;;17112:62;17210:13;17190:18;;;17183:41;17241:19;;5366:69:5;16859:407:21;5366:69:5;1197:32:0::1;965:10:11::0;1197:18:0::1;:32::i;3415:258:13:-:0;5374:13:5;;;;;;;5366:69;;;;;;;17061:2:21;5366:69:5;;;17043:21:21;17100:2;17080:18;;;17073:30;17139:34;17119:18;;;17112:62;17210:13;17190:18;;;17183:41;17241:19;;5366:69:5;16859:407:21;5366:69:5;3574:5:13::1;:14:::0;;;::::1;;::::0;::::1;;::::0;;3598:31:::1;3615:13:::0;3598:16:::1;:31::i;:::-;3639:27;3654:11;3639:14;:27::i;2687:187:0:-:0;2779:6;;;;2795:17;;;;;;;;;;;2827:40;;2779:6;;;2795:17;2779:6;;2827:40;;2760:16;;2827:40;2750:124;2687:187;:::o;5213:206:13:-;5284:25;;;5276:61;;;;;;;10489:2:21;5276:61:13;;;10471:21:21;10528:2;10508:18;;;10501:30;10567:25;10547:18;;;10540:53;10610:18;;5276:61:13;10287:347:21;5276:61:13;5347:10;:24;;;;;;;;;;;;;5386:26;;;;-1:-1:-1;;5386:26:13;5213:206;:::o;7682:1083::-;7830:27;;;;7771:15;7830:27;;;:11;:27;;;;;7872:17;;;;7771:15;;7830:27;;7872:17;7868:89;;-1:-1:-1;7926:20:13;;7682:1083;-1:-1:-1;;7682:1083:13:o;7868:89::-;7967:14;7992;7967:40;;8017:35;8055:6;:13;;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8017:53;;8098:10;:20;;;8122:1;8098:25;;:62;;;;;8159:1;8139:10;:17;;;:21;8098:62;:124;;;;-1:-1:-1;8192:30:13;8176:12;:46;;;;;;;;:::i;:::-;;8098:124;8081:207;;;-1:-1:-1;8254:23:13;;7682:1083;-1:-1:-1;;;;7682:1083:13:o;8081:207::-;8315:19;;;;:24;:87;;;;-1:-1:-1;8371:31:13;8355:12;:47;;;;;;;;:::i;:::-;;8315:87;8298:169;;;-1:-1:-1;8434:22:13;;7682:1083;-1:-1:-1;;;;7682:1083:13:o;8298:169::-;8494:19;;;;:24;:157;;;;-1:-1:-1;8551:31:13;8535:12;:47;;;;;;;;:::i;:::-;;:115;;;-1:-1:-1;8618:32:13;8602:12;:48;;;;;;;;:::i;:::-;;8535:115;8477:242;;;-1:-1:-1;8683:25:13;;7682:1083;-1:-1:-1;;;;7682:1083:13:o;8477:242::-;-1:-1:-1;8736:22:13;;7682:1083;-1:-1:-1;;;;7682:1083:13:o;875:176:20:-;933:7;;964:5;968:1;964;:5;:::i;:::-;952:17;;992:1;987;:6;;979:46;;;;;;;17890:2:21;979:46:20;;;17872:21:21;17929:2;17909:18;;;17902:30;17968:29;17948:18;;;17941:57;18015:18;;979:46:20;17688:351:21;17150:262:13;17336:5;;17267:138;;17336:5;;17356:4;17374:2;17390:5;17267:37;:138::i;722:141:18:-;825:18;;:31;;848:7;825:22;:31::i;14461:1054:13:-;14594:28;;;14586:64;;;;;;;10489:2:21;14586:64:13;;;10471:21:21;10528:2;10508:18;;;10501:30;10567:25;10547:18;;;10540:53;10610:18;;14586:64:13;10287:347:21;14586:64:13;14721:7;14681:36;:6;:18;14688:10;14681:18;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:36::i;:::-;:47;;14660:136;;;;;;;18246:2:21;14660:136:13;;;18228:21:21;18285:2;18265:18;;;18258:30;18324:34;18304:18;;;18297:62;18395:12;18375:18;;;18368:40;18425:19;;14660:136:13;18044:406:21;14660:136:13;14824:1;14814:7;:11;14806:49;;;;;;;8286:2:21;14806:49:13;;;8268:21:21;8325:2;8305:18;;;8298:30;8364:27;8344:18;;;8337:55;8409:18;;14806:49:13;8084:349:21;14806:49:13;14925:20;14886:35;14906:14;14886:19;:35::i;:::-;:59;;;;;;;;:::i;:::-;;14865:131;;;;;;;18657:2:21;14865:131:13;;;18639:21:21;18696:2;18676:18;;;18669:30;18735:27;18715:18;;;18708:55;18780:18;;14865:131:13;18455:349:21;14865:131:13;15038:212;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15188:12;15038:212;;;;;;15007:28;15038:212;;;;;;15261:27;;;:11;:27;;;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15311:15;;;:6;:15;;;;;15038:212;;15311:43;;:15;:24;:43::i;:::-;15450:14;15370:138;;15398:7;15370:138;;;15419:10;:17;;;15478:10;:20;;;15370:138;;;;;;9382:25:21;;;9438:2;9423:18;;9416:34;9370:2;9355:18;;9208:248;15370:138:13;;;;;;;;14576:939;14461:1054;;;:::o;4665:196::-;4749:1;4735:11;:15;;;4727:53;;;;;;;8286:2:21;4727:53:13;;;8268:21:21;8325:2;8305:18;;;8298:30;8364:27;8344:18;;;8337:55;8409:18;;4727:53:13;8084:349:21;4727:53:13;4790:10;:24;;;;;;;;;;;;;4829:25;;;;-1:-1:-1;;4829:25:13;4665:196;:::o;3998:163:18:-;4083:7;4109:45;4135:5;:18;;;4109:5;:21;;;:25;;:45;;;;:::i;1747:217:20:-;1863:7;1898:12;1890:6;;;;1882:29;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1921:9:20;1933:5;1937:1;1933;:5;:::i;:::-;1921:17;1747:217;-1:-1:-1;;;;;1747:217:20:o;3198:340:18:-;3283:7;3302:24;3329:26;:5;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:26::i;:::-;3302:53;-1:-1:-1;3370:20:18;;3366:132;;3406:36;:5;3425:16;3406:18;:36::i;:::-;3456:31;:5;3470:16;3456:13;:31::i;1775:120:19:-;1840:7;1871:1;1867;:5;1866:22;;1887:1;1866:22;;;1876:8;:1;1882;1876:5;:8::i;1380:297::-;1532:7;1570:100;1636:20;:7;1648;1636:11;:20::i;:::-;1570:44;1594:19;:6;1605:7;1594:10;:19::i;:::-;1570;:6;1581:7;1570:10;:19::i;:44::-;:48;;:100::i;:::-;1551:119;;1380:297;;;;;;;:::o;1720:281:3:-;1713:19:10;;;;1793:106:3;;;;;;;19851:2:21;1793:106:3;;;19833:21:21;19890:2;19870:18;;;19863:30;19929:34;19909:18;;;19902:62;20000:15;19980:18;;;19973:43;20033:19;;1793:106:3;19649:409:21;1793:106:3;1180:66;1909:85;;;;;;;;;;;;;;;1720:281::o;2393:276::-;2501:29;2512:17;2501:10;:29::i;:::-;2558:1;2544:4;:11;:15;:28;;;;2563:9;2544:28;2540:123;;;2588:64;2628:17;2647:4;2588:39;:64::i;996:186:9:-;1116:58;;20267:42:21;20255:55;;1116:58:9;;;20237:74:21;20327:18;;;20320:34;;;1089:86:9;;1109:5;;1139:23;;20210:18:21;;1116:58:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1089:19;:86::i;1421:214::-;1559:68;;20577:42:21;20646:15;;;1559:68:9;;;20628:34:21;20698:15;;20678:18;;;20671:43;20730:18;;;20723:34;;;1532:96:9;;1552:5;;1582:27;;20540:18:21;;1559:68:9;20365:398:21;1330:148:18;1437:21;;;;:34;;1463:7;1437:25;:34::i;2771:258::-;2901:18;;;;:31;;2924:7;2901:22;:31::i;:::-;2880:18;;;:52;;;2942:81;;3011:1;2985:23;;;:27;2771:258;;:::o;2211:459:20:-;2269:7;2510:6;2506:45;;-1:-1:-1;2539:1:20;2532:8;;2506:45;2561:9;2573:5;2577:1;2573;:5;:::i;:::-;2561:17;-1:-1:-1;2605:1:20;2596:5;2600:1;2561:17;2596:5;:::i;:::-;:10;2588:56;;;;;;;21482:2:21;2588:56:20;;;21464:21:21;21521:2;21501:18;;;21494:30;21560:34;21540:18;;;21533:62;21631:3;21611:18;;;21604:31;21652:19;;2588:56:20;21280:397:21;3132:130:20;3190:7;3216:39;3220:1;3223;3216:39;;;;;;;;;;;;;;;;;:3;:39::i;2107:152:3:-;2173:37;2192:17;2173:18;:37::i;:::-;2225:27;;;;;;;;;;;2107:152;:::o;6685:198:10:-;6768:12;6799:77;6820:6;6828:4;6799:77;;;;;;;;;;;;;;;;;:20;:77::i;5328:653:9:-;5758:23;5784:69;5812:4;5784:69;;;;;;;;;;;;;;;;;5792:5;5784:27;;;;:69;;;;;:::i;:::-;5758:95;;5871:10;:17;5892:1;5871:22;:56;;;;5908:10;5897:30;;;;;;;;;;;;:::i;:::-;5863:111;;;;;;;22166:2:21;5863:111:9;;;22148:21:21;22205:2;22185:18;;;22178:30;22244:34;22224:18;;;22217:62;22315:12;22295:18;;;22288:40;22345:19;;5863:111:9;21964:406:21;3744:302:20;3860:7;3894:12;3887:5;3879:28;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3917:9:20;3929:5;3933:1;3929;:5;:::i;7069:325:10:-;7210:12;7235;7249:23;7276:6;:19;;7296:4;7276:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:67;;;;7318:69;7345:6;7353:7;7362:10;7374:12;7318:26;:69::i;:::-;7311:76;7069:325;-1:-1:-1;;;;;;7069:325:10:o;4119:223::-;4252:12;4283:52;4305:6;4313:4;4319:1;4322:12;4283:21;:52::i;7682:628::-;7862:12;7890:7;7886:418;;;7917:17;;7913:286;;1713:19;;;;8124:60;;;;;;;22856:2:21;8124:60:10;;;22838:21:21;22895:2;22875:18;;;22868:30;22934:31;22914:18;;;22907:59;22983:18;;8124:60:10;22654:353:21;8124:60:10;-1:-1:-1;8219:10:10;8212:17;;7886:418;8260:33;8268:10;8280:12;8260:7;:33::i;5176:446::-;5341:12;5398:5;5373:21;:30;;5365:81;;;;;;;23214:2:21;5365:81:10;;;23196:21:21;23253:2;23233:18;;;23226:30;23292:34;23272:18;;;23265:62;23363:8;23343:18;;;23336:36;23389:19;;5365:81:10;23012:402:21;5365:81:10;5457:12;5471:23;5498:6;:11;;5517:5;5524:4;5498:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5456:73;;;;5546:69;5573:6;5581:7;5590:10;5602:12;5546:26;:69::i;:::-;5539:76;5176:446;-1:-1:-1;;;;;;;5176:446:10:o;8832:540::-;8991:17;;:21;8987:379;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;;;;;;;;;;:::i;14:196:21:-;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:186::-;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;366:29;385:9;366:29;:::i;1571:180::-;1630:6;1683:2;1671:9;1662:7;1658:23;1654:32;1651:52;;;1699:1;1696;1689:12;1651:52;-1:-1:-1;1722:23:21;;1571:180;-1:-1:-1;1571:180:21:o;1756:403::-;1842:6;1850;1858;1866;1919:3;1907:9;1898:7;1894:23;1890:33;1887:53;;;1936:1;1933;1926:12;1887:53;1959:29;1978:9;1959:29;:::i;:::-;1949:39;;2007:38;2041:2;2030:9;2026:18;2007:38;:::i;:::-;1997:48;;2064:38;2098:2;2087:9;2083:18;2064:38;:::i;:::-;1756:403;;;;-1:-1:-1;2054:48:21;;2149:2;2134:18;2121:32;;-1:-1:-1;;1756:403:21:o;2361:184::-;2413:77;2410:1;2403:88;2510:4;2507:1;2500:15;2534:4;2531:1;2524:15;2550:1054;2627:6;2635;2688:2;2676:9;2667:7;2663:23;2659:32;2656:52;;;2704:1;2701;2694:12;2656:52;2727:29;2746:9;2727:29;:::i;:::-;2717:39;;2807:2;2796:9;2792:18;2779:32;2830:18;2871:2;2863:6;2860:14;2857:34;;;2887:1;2884;2877:12;2857:34;2925:6;2914:9;2910:22;2900:32;;2970:7;2963:4;2959:2;2955:13;2951:27;2941:55;;2992:1;2989;2982:12;2941:55;3028:2;3015:16;3050:2;3046;3043:10;3040:36;;;3056:18;;:::i;:::-;3190:2;3184:9;3252:4;3244:13;;3095:66;3240:22;;;3264:2;3236:31;3232:40;3220:53;;;3288:18;;;3308:22;;;3285:46;3282:72;;;3334:18;;:::i;:::-;3374:10;3370:2;3363:22;3409:2;3401:6;3394:18;3449:7;3444:2;3439;3435;3431:11;3427:20;3424:33;3421:53;;;3470:1;3467;3460:12;3421:53;3526:2;3521;3517;3513:11;3508:2;3500:6;3496:15;3483:46;3571:1;3566:2;3561;3553:6;3549:15;3545:24;3538:35;3592:6;3582:16;;;;;;;2550:1054;;;;;:::o;4751:163::-;4818:20;;4878:10;4867:22;;4857:33;;4847:61;;4904:1;4901;4894:12;4919:326;4995:6;5003;5011;5064:2;5052:9;5043:7;5039:23;5035:32;5032:52;;;5080:1;5077;5070:12;5032:52;5103:29;5122:9;5103:29;:::i;:::-;5093:39;;5179:2;5168:9;5164:18;5151:32;5141:42;;5202:37;5235:2;5224:9;5220:18;5202:37;:::i;:::-;5192:47;;4919:326;;;;;:::o;5514:1269::-;5830:2;5842:21;;;5912:13;;5815:18;;;5934:22;;;5782:4;;6009;;5987:2;5972:18;;;6036:15;;;5782:4;6079:218;6093:6;6090:1;6087:13;6079:218;;;6158:13;;6173:42;6154:62;6142:75;;6237:12;;;;6272:15;;;;6115:1;6108:9;6079:218;;;-1:-1:-1;;;6333:19:21;;;6313:18;;;6306:47;6403:13;;6425:21;;;6501:15;;;;6464:12;;;6536:1;6546:209;6562:8;6557:3;6554:17;6546:209;;;6617:48;6659:5;6648:8;6642:15;5328:5;5322:12;5317:3;5310:25;5384:4;5377:5;5373:16;5367:23;5360:4;5355:3;5351:14;5344:47;5440:4;5433:5;5429:16;5423:23;5416:4;5411:3;5407:14;5400:47;5496:4;5489:5;5485:16;5479:23;5472:4;5467:3;5463:14;5456:47;;;5250:259;6617:48;6728:17;;;;6698:4;6687:16;;;;;6590:1;6581:11;6546:209;;;-1:-1:-1;6772:5:21;;5514:1269;-1:-1:-1;;;;;;;5514:1269:21:o;6788:184::-;6840:77;6837:1;6830:88;6937:4;6934:1;6927:15;6961:4;6958:1;6951:15;6977:405;7129:2;7114:18;;7162:1;7151:13;;7141:201;;7198:77;7195:1;7188:88;7299:4;7296:1;7289:15;7327:4;7324:1;7317:15;7141:201;7351:25;;;6977:405;:::o;7387:244::-;5322:12;;5310:25;;5384:4;5373:16;;;5367:23;5351:14;;;5344:47;5440:4;5429:16;;;5423:23;5407:14;;;5400:47;5496:4;5485:16;;;5479:23;5463:14;;;5456:47;7569:3;7554:19;;7582:43;5250:259;7636:254;7704:6;7712;7765:2;7753:9;7744:7;7740:23;7736:32;7733:52;;;7781:1;7778;7771:12;7733:52;7804:29;7823:9;7804:29;:::i;:::-;7794:39;7880:2;7865:18;;;;7852:32;;-1:-1:-1;;;7636:254:21:o;7895:184::-;7953:6;8006:2;7994:9;7985:7;7981:23;7977:32;7974:52;;;8022:1;8019;8012:12;7974:52;8045:28;8063:9;8045:28;:::i;12867:184::-;12919:77;12916:1;12909:88;13016:4;13013:1;13006:15;13040:4;13037:1;13030:15;13056:184;13108:77;13105:1;13098:88;13205:4;13202:1;13195:15;13229:4;13226:1;13219:15;13245:195;13284:3;13315:66;13308:5;13305:77;13302:103;;;13385:18;;:::i;:::-;-1:-1:-1;13432:1:21;13421:13;;13245:195::o;14626:184::-;14696:6;14749:2;14737:9;14728:7;14724:23;14720:32;14717:52;;;14765:1;14762;14755:12;14717:52;-1:-1:-1;14788:16:21;;14626:184;-1:-1:-1;14626:184:21:o;17271:279::-;17360:6;17413:2;17401:9;17392:7;17388:23;17384:32;17381:52;;;17429:1;17426;17419:12;17381:52;17461:9;17455:16;17500:1;17493:5;17490:12;17480:40;;17516:1;17513;17506:12;17555:128;17595:3;17626:1;17622:6;17619:1;17616:13;17613:39;;;17632:18;;:::i;:::-;-1:-1:-1;17668:9:21;;17555:128::o;18809:258::-;18881:1;18891:113;18905:6;18902:1;18899:13;18891:113;;;18981:11;;;18975:18;18962:11;;;18955:39;18927:2;18920:10;18891:113;;;19022:6;19019:1;19016:13;19013:48;;;-1:-1:-1;;19057:1:21;19039:16;;19032:27;18809:258::o;19072:442::-;19221:2;19210:9;19203:21;19184:4;19253:6;19247:13;19296:6;19291:2;19280:9;19276:18;19269:34;19312:66;19371:6;19366:2;19355:9;19351:18;19346:2;19338:6;19334:15;19312:66;:::i;:::-;19430:2;19418:15;19435:66;19414:88;19399:104;;;;19505:2;19395:113;;19072:442;-1:-1:-1;;19072:442:21:o;19519:125::-;19559:4;19587:1;19584;19581:8;19578:34;;;19592:18;;:::i;:::-;-1:-1:-1;19629:9:21;;19519:125::o;20768:228::-;20808:7;20934:1;20866:66;20862:74;20859:1;20856:81;20851:1;20844:9;20837:17;20833:105;20830:131;;;20941:18;;:::i;:::-;-1:-1:-1;20981:9:21;;20768:228::o;21001:274::-;21041:1;21067;21057:189;;21102:77;21099:1;21092:88;21203:4;21200:1;21193:15;21231:4;21228:1;21221:15;21057:189;-1:-1:-1;21260:9:21;;21001:274::o;21682:277::-;21749:6;21802:2;21790:9;21781:7;21777:23;21773:32;21770:52;;;21818:1;21815;21808:12;21770:52;21850:9;21844:16;21903:5;21896:13;21889:21;21882:5;21879:32;21869:60;;21925:1;21922;21915:12;22375:274;22504:3;22542:6;22536:13;22558:53;22604:6;22599:3;22592:4;22584:6;22580:17;22558:53;:::i;:::-;22627:16;;;;;22375:274;-1:-1:-1;;22375:274:21:o"},"methodIdentifiers":{"allocate(address,uint256)":"b78b52df","allocations(address)":"52a9039c","closeAllocation(address)":"68f39a07","getAllocation(address)":"0e022923","getAllocationState(address)":"98c657dc","getListOfStakers()":"70b97cb5","getStakedTokens(address)":"63c28db1","getStaker(address)":"a23c44b1","hasAvailableStake(address)":"1af963aa","hasStake(address)":"e73e14bf","initialize(address,uint256,uint32)":"6c5ac81e","isAllocation(address)":"f1d60d66","lockPeriod()":"3fd8b02f","minimumStake()":"ec5ffac2","owner()":"8da5cb5b","proxiableUUID()":"52d1902d","renounceOwnership()":"715018a6","rewardPool()":"66666aa9","setLockPeriod(uint32)":"f489f23b","setMinimumStake(uint256)":"233e9903","setRewardPool(address)":"78238c37","slash(address,address,address,uint256)":"3aa63c61","stake(uint256)":"a694fc3a","stakers(uint256)":"fd5e6dd1","stakes(address)":"16934fc4","token()":"fc0c546a","transferOwnership(address)":"f2fde38b","unstake(uint256)":"2e17de78","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286","withdraw()":"3ccfd60b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"escrowAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"closedAt\",\"type\":\"uint256\"}],\"name\":\"AllocationClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"lockPeriod\",\"type\":\"uint32\"}],\"name\":\"SetLockPeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"minimumStake\",\"type\":\"uint256\"}],\"name\":\"SetMinumumStake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardPool\",\"type\":\"address\"}],\"name\":\"SetRewardPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"escrowAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"name\":\"StakeAllocated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"StakeDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"until\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"escrowAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"slasher\",\"type\":\"address\"}],\"name\":\"StakeSlashed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_escrowAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"allocate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allocations\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"escrowAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closedAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_escrowAddress\",\"type\":\"address\"}],\"name\":\"closeAllocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_escrowAddress\",\"type\":\"address\"}],\"name\":\"getAllocation\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"escrowAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct IStaking.Allocation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_escrowAddress\",\"type\":\"address\"}],\"name\":\"getAllocationState\",\"outputs\":[{\"internalType\":\"enum IStaking.AllocationState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListOfStakers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokensStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensAllocated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensLocked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensLockedUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct Stakes.Staker[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getStakedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getStaker\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokensStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensAllocated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensLocked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensLockedUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct Stakes.Staker\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"hasAvailableStake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"hasStake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minimumStake\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_lockPeriod\",\"type\":\"uint32\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_escrowAddress\",\"type\":\"address\"}],\"name\":\"isAllocation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockPeriod\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_lockPeriod\",\"type\":\"uint32\"}],\"name\":\"setLockPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minimumStake\",\"type\":\"uint256\"}],\"name\":\"setMinimumStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardPool\",\"type\":\"address\"}],\"name\":\"setRewardPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_slasher\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_escrowAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"slash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokensStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensAllocated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensLocked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensLockedUntil\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The Staking contract allows Operator, Exchange Oracle, Recording Oracle and Reputation Oracle to stake to Escrow.\",\"events\":{\"AllocationClosed(address,uint256,address,uint256)\":{\"details\":\"Emitted when `staker` close an allocation `escrowAddress`.\"},\"SetLockPeriod(uint32)\":{\"details\":\"Emitted when `owner` set new value for `lockPeriod`.\"},\"SetMinumumStake(uint256)\":{\"details\":\"Emitted when `owner` set new value for `minimumStake`.\"},\"SetRewardPool(address)\":{\"details\":\"Emitted when `owner` set new value for `rewardPool`.\"},\"StakeAllocated(address,uint256,address,uint256)\":{\"details\":\"Emitted when `staker` allocated `tokens` amount to `escrowAddress`.\"},\"StakeDeposited(address,uint256)\":{\"details\":\"Emitted when `staker` stake `tokens` amount.\"},\"StakeLocked(address,uint256,uint256)\":{\"details\":\"Emitted when `staker` unstaked and locked `tokens` amount `until` block.\"},\"StakeSlashed(address,uint256,address,address)\":{\"details\":\"Emitted when `staker` was slashed for a total of `tokens` amount.\"},\"StakeWithdrawn(address,uint256)\":{\"details\":\"Emitted when `staker` withdraws `tokens` staked.\"}},\"kind\":\"dev\",\"methods\":{\"allocate(address,uint256)\":{\"details\":\"Allocate available tokens to an escrow.\",\"params\":{\"_escrowAddress\":\"The allocationID will work to identify collected funds related to this allocation\",\"_tokens\":\"Amount of tokens to allocate\"}},\"closeAllocation(address)\":{\"details\":\"Close an allocation and free the staked tokens.\",\"params\":{\"_escrowAddress\":\"The allocation identifier\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"getAllocation(address)\":{\"details\":\"Return the allocation by escrow address.\",\"params\":{\"_escrowAddress\":\"Address used as allocation identifier\"},\"returns\":{\"_0\":\"Allocation data\"}},\"getAllocationState(address)\":{\"details\":\"Return the current state of an allocation.\",\"params\":{\"_escrowAddress\":\"Address used as the allocation identifier\"},\"returns\":{\"_0\":\"AllocationState\"}},\"getListOfStakers()\":{\"details\":\"Get list of stakers\",\"returns\":{\"_0\":\"List of staker's addresses, and stake data\"}},\"getStakedTokens(address)\":{\"details\":\"Get the total amount of tokens staked by the staker.\",\"params\":{\"_staker\":\"Address of the staker\"},\"returns\":{\"_0\":\"Amount of tokens staked by the staker\"}},\"getStaker(address)\":{\"details\":\"Get staker data by the staker address.\",\"params\":{\"_staker\":\"Address of the staker\"},\"returns\":{\"_0\":\"Staker's data\"}},\"hasAvailableStake(address)\":{\"details\":\"Getter that returns if an staker has any available stake.\",\"params\":{\"_staker\":\"Address of the staker\"},\"returns\":{\"_0\":\"True if staker has available tokens staked\"}},\"hasStake(address)\":{\"details\":\"Getter that returns if an staker has any stake.\",\"params\":{\"_staker\":\"Address of the staker\"},\"returns\":{\"_0\":\"True if staker has staked tokens\"}},\"isAllocation(address)\":{\"details\":\"Return if escrowAddress is use for allocation.\",\"params\":{\"_escrowAddress\":\"Address used as signer by the staker for an allocation\"},\"returns\":{\"_0\":\"True if _escrowAddress already used\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setLockPeriod(uint32)\":{\"details\":\"Set the lock period for unstaking.\",\"params\":{\"_lockPeriod\":\"Period in blocks to wait for token withdrawals after unstaking\"}},\"setMinimumStake(uint256)\":{\"details\":\"Set the minimum stake amount.\",\"params\":{\"_minimumStake\":\"Minimum stake\"}},\"setRewardPool(address)\":{\"details\":\"Set the destionations of the rewards.\",\"params\":{\"_rewardPool\":\"Reward pool address\"}},\"slash(address,address,address,uint256)\":{\"details\":\"Slash the staker stake allocated to the escrow.\",\"params\":{\"_escrowAddress\":\"Escrow address\",\"_staker\":\"Address of staker to slash\",\"_tokens\":\"Amount of tokens to slash from the indexer stake\"}},\"stake(uint256)\":{\"details\":\"Deposit tokens on the staker stake.\",\"params\":{\"_tokens\":\"Amount of tokens to stake\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unstake(uint256)\":{\"details\":\"Unstake tokens from the staker stake, lock them until lock period expires.\",\"params\":{\"_tokens\":\"Amount of tokens to unstake\"}},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"withdraw()\":{\"details\":\"Withdraw staker tokens based on the locking period.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"title\":\"Staking contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"Staking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e89863421b4014b96a4b62be76eb3b9f0a8afe9684664a6f389124c0964bfe5c\",\"dweb:/ipfs/Qmbk7xr1irpDuU1WdxXgxELBXxs61rHhCgod7heVcvFx16\"]},\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x7795808e3899c805254e3ae58074b20f799b466e3f43e057e47bedee5fb771f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://319853a2a682f3f72411507242669ef5e76e0ad3457be53102439709ee8948f0\",\"dweb:/ipfs/QmRtm4Ese9u4jfxXyuWPXLwzenwFotuQjAWV7rXtZTB1E9\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xefb41f5c1a00249b7a99f0782f8c557865605426a3fb6e5fe9ae334293ae4f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90def55e5782595aabc13f57780c02d3613e5226f20ce6c1709503a63fdeb58f\",\"dweb:/ipfs/Qmb5vcymmNEZUJMaHmYxnhvGJDEsGMae4YjcHwkA74jy99\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x07e881de3b9f6d2c07909f193f24b96c7fe4ea60013260f3f25aecd8bab3c2f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fed09b97ccb0ff9ba9b6a94224f1d489026bf6b4b7279bfe64fb6e8749dee4d\",\"dweb:/ipfs/QmcRAzaSP1UnGr4vrGkfJmB2L9aiTYoXfV1Lg9gqrVRWn8\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x23b997be73d3dd46885262704f0f8cfc7273fdadfe303d37969a9561373972b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d03ebe5406134f0c4a017dee625ff615031194493bd1e88504e5c8fae55bc166\",\"dweb:/ipfs/QmUZV5bMbgk2PAkV3coouSeSainHN2jhqaQDJaA7hQRyu2\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"contracts/Staking.sol\":{\"keccak256\":\"0x709f3544e16b1f0de354f1d632f2d8a5a2bd979de2dc17390fa1f03293e1d664\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://306f1a680d1d540b7fe0915ec7facfa20c863008ce559bee1c7fe26d0a03e326\",\"dweb:/ipfs/QmenaVyL1uYP89QWuyWnH7eh6mxdfvtu8r6SCoatPFLp9y\"]},\"contracts/interfaces/IEscrow.sol\":{\"keccak256\":\"0xae9cbcde5204d7d4634edcb9e176ee58373c8fdc5e5c5bacb196c29dffb348e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6de951e4a826013754c9789dc0d3e3463487646e7daa574b9e3f82234a060739\",\"dweb:/ipfs/QmXoSr4rTyQDoiRLZ8iV7KhG3SMGfQEH6sHjLsdRaiwFST\"]},\"contracts/interfaces/IRewardPool.sol\":{\"keccak256\":\"0xf09a4a411929403bdc66d80fcf36c5128ca9ee826fd61ffc0b577d7a66dd9415\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://288b2daa023d5caeff6c131fdbba8d5e379824b033aa627837c1893e7c16bb78\",\"dweb:/ipfs/QmYPzBBpqhGg8iNoiL68YBrHaozjn6R5oLrovsoCP2WvJj\"]},\"contracts/interfaces/IStaking.sol\":{\"keccak256\":\"0x9a168e4145e386b4776ac1c9f2944d1a95c75d589ae8b517e9b1e30ab230d90f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d56eebbc549bda0efc57d19734f18bf1fb835678b5992ca2fd59d48352c8ca16\",\"dweb:/ipfs/QmUBniZT3BoupJeEEb5AEER3pLtBAsGpNUse4Ca7HT4LBF\"]},\"contracts/interfaces/THXCTokenInterface.sol\":{\"keccak256\":\"0xa348a71fd89bb3b32748372802c41f348e641602a4093b478c6c85af0f46c5aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f602aaefea22e5c316ea6db272fffc4e19266946d21609cfbb217186f32f1b6\",\"dweb:/ipfs/QmRimCTGeXhMn7aWBkmJqaeyEDbLomRmjYyxvScGQydaF4\"]},\"contracts/libs/Stakes.sol\":{\"keccak256\":\"0x9cbff02f2f5b0bf848223da3f4589976de11939d7d8995f035cc75ff815f3ea4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fcf0959bd49c5f6e6ce22cd61bbe9ccd8811b78bfd6e7a595f0ff7ebcef6a35\",\"dweb:/ipfs/QmdtY1v3aFD7svij96reHfVoMq1nHQyxnzggyNpnVQT3HV\"]},\"contracts/utils/Math.sol\":{\"keccak256\":\"0x3f7160d9532f649f92ea606aa2758ce1cd8a7878ac613fe3c171a164bae13f50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79cd7ac03188d292654c5ad61b3d3652296408808a88cc87e8b4463eddf4622a\",\"dweb:/ipfs/Qmf2oQtBtyY9nYM3V78cN31sSiqXFWDDiMsvd4GjLuwS2A\"]},\"contracts/utils/SafeMath.sol\":{\"keccak256\":\"0xb93e3401bd7d427ce856810e5300e9f69090dfdbd82fe2c9627e7239b0956436\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec4800381138548bc4ab15e83801741c63deeceb29182406c8e2b2dd926a1f15\",\"dweb:/ipfs/QmREWyN8PScUTeXuWSRzZP4iJNWJHoAd738gWiPeZkXsvn\"]}},\"version\":1}"}},"contracts/interfaces/IEscrow.sol":{"IEscrow":{"abi":[{"inputs":[],"name":"abort","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_handlers","type":"address[]"}],"name":"addTrustedHandlers","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_recipients","type":"address[]"},{"internalType":"uint256[]","name":"_amounts","type":"uint256[]"},{"internalType":"string","name":"_url","type":"string"},{"internalType":"string","name":"_hash","type":"string"},{"internalType":"uint256","name":"_txId","type":"uint256"}],"name":"bulkPayOut","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"cancel","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"complete","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_reputationOracle","type":"address"},{"internalType":"address","name":"_recordingOracle","type":"address"},{"internalType":"address","name":"_exchangeOracle","type":"address"},{"internalType":"uint8","name":"_reputationOracleFeePercentage","type":"uint8"},{"internalType":"uint8","name":"_recordingOracleFeePercentage","type":"uint8"},{"internalType":"uint8","name":"_exchangeOracleFeePercentage","type":"uint8"},{"internalType":"string","name":"_url","type":"string"},{"internalType":"string","name":"_hash","type":"string"}],"name":"setup","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"status","outputs":[{"internalType":"enum IEscrow.EscrowStatuses","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_url","type":"string"},{"internalType":"string","name":"_hash","type":"string"}],"name":"storeResults","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"abort()":"35a063b4","addTrustedHandlers(address[])":"9eb262f3","bulkPayOut(address[],uint256[],string,string,uint256)":"b63d1a00","cancel()":"ea8a1af0","complete()":"522e1177","setup(address,address,address,uint8,uint8,uint8,string,string)":"f56679cf","status()":"200d2ed2","storeResults(string,string)":"697e4b87"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"abort\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_handlers\",\"type\":\"address[]\"}],\"name\":\"addTrustedHandlers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"_url\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_txId\",\"type\":\"uint256\"}],\"name\":\"bulkPayOut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancel\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"complete\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reputationOracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recordingOracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_exchangeOracle\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_reputationOracleFeePercentage\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_recordingOracleFeePercentage\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_exchangeOracleFeePercentage\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_url\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"setup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"internalType\":\"enum IEscrow.EscrowStatuses\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_url\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"storeResults\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IEscrow.sol\":\"IEscrow\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IEscrow.sol\":{\"keccak256\":\"0xae9cbcde5204d7d4634edcb9e176ee58373c8fdc5e5c5bacb196c29dffb348e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6de951e4a826013754c9789dc0d3e3463487646e7daa574b9e3f82234a060739\",\"dweb:/ipfs/QmXoSr4rTyQDoiRLZ8iV7KhG3SMGfQEH6sHjLsdRaiwFST\"]}},\"version\":1}"}},"contracts/interfaces/IRewardPool.sol":{"IRewardPool":{"abi":[{"inputs":[{"internalType":"address","name":"_escrowAddress","type":"address"},{"internalType":"address","name":"_staker","type":"address"},{"internalType":"address","name":"_slasher","type":"address"},{"internalType":"uint256","name":"_tokens","type":"uint256"}],"name":"addReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_escrowAddress","type":"address"}],"name":"distributeReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_escrowAddress","type":"address"}],"name":"getRewards","outputs":[{"components":[{"internalType":"address","name":"escrowAddress","type":"address"},{"internalType":"address","name":"slasher","type":"address"},{"internalType":"uint256","name":"tokens","type":"uint256"}],"internalType":"struct IRewardPool.Reward[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addReward(address,address,address,uint256)":"e2ff99ef","distributeReward(address)":"092193ab","getRewards(address)":"79ee54f7","withdraw(address)":"51cff8d9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_escrowAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_slasher\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"addReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_escrowAddress\",\"type\":\"address\"}],\"name\":\"distributeReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_escrowAddress\",\"type\":\"address\"}],\"name\":\"getRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"escrowAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"slasher\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardPool.Reward[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IRewardPool.sol\":\"IRewardPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IRewardPool.sol\":{\"keccak256\":\"0xf09a4a411929403bdc66d80fcf36c5128ca9ee826fd61ffc0b577d7a66dd9415\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://288b2daa023d5caeff6c131fdbba8d5e379824b033aa627837c1893e7c16bb78\",\"dweb:/ipfs/QmYPzBBpqhGg8iNoiL68YBrHaozjn6R5oLrovsoCP2WvJj\"]}},\"version\":1}"}},"contracts/interfaces/IStaking.sol":{"IStaking":{"abi":[{"inputs":[{"internalType":"address","name":"escrowAddress","type":"address"},{"internalType":"uint256","name":"_tokens","type":"uint256"}],"name":"allocate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_escrowAddress","type":"address"}],"name":"closeAllocation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_escrowAddress","type":"address"}],"name":"getAllocation","outputs":[{"components":[{"internalType":"address","name":"escrowAddress","type":"address"},{"internalType":"address","name":"staker","type":"address"},{"internalType":"uint256","name":"tokens","type":"uint256"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"closedAt","type":"uint256"}],"internalType":"struct IStaking.Allocation","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_escrowAddress","type":"address"}],"name":"getAllocationState","outputs":[{"internalType":"enum IStaking.AllocationState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getListOfStakers","outputs":[{"internalType":"address[]","name":"","type":"address[]"},{"components":[{"internalType":"uint256","name":"tokensStaked","type":"uint256"},{"internalType":"uint256","name":"tokensAllocated","type":"uint256"},{"internalType":"uint256","name":"tokensLocked","type":"uint256"},{"internalType":"uint256","name":"tokensLockedUntil","type":"uint256"}],"internalType":"struct Stakes.Staker[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_staker","type":"address"}],"name":"getStakedTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_staker","type":"address"}],"name":"getStaker","outputs":[{"components":[{"internalType":"uint256","name":"tokensStaked","type":"uint256"},{"internalType":"uint256","name":"tokensAllocated","type":"uint256"},{"internalType":"uint256","name":"tokensLocked","type":"uint256"},{"internalType":"uint256","name":"tokensLockedUntil","type":"uint256"}],"internalType":"struct Stakes.Staker","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_indexer","type":"address"}],"name":"hasAvailableStake","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_indexer","type":"address"}],"name":"hasStake","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_escrowAddress","type":"address"}],"name":"isAllocation","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rewardPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_lockPeriod","type":"uint32"}],"name":"setLockPeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_minimumStake","type":"uint256"}],"name":"setMinimumStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_rewardPool","type":"address"}],"name":"setRewardPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_slasher","type":"address"},{"internalType":"address","name":"_staker","type":"address"},{"internalType":"address","name":"_escrowAddress","type":"address"},{"internalType":"uint256","name":"_tokens","type":"uint256"}],"name":"slash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokens","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokens","type":"uint256"}],"name":"unstake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allocate(address,uint256)":"b78b52df","closeAllocation(address)":"68f39a07","getAllocation(address)":"0e022923","getAllocationState(address)":"98c657dc","getListOfStakers()":"70b97cb5","getStakedTokens(address)":"63c28db1","getStaker(address)":"a23c44b1","hasAvailableStake(address)":"1af963aa","hasStake(address)":"e73e14bf","isAllocation(address)":"f1d60d66","rewardPool()":"66666aa9","setLockPeriod(uint32)":"f489f23b","setMinimumStake(uint256)":"233e9903","setRewardPool(address)":"78238c37","slash(address,address,address,uint256)":"3aa63c61","stake(uint256)":"a694fc3a","unstake(uint256)":"2e17de78","withdraw()":"3ccfd60b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"escrowAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"allocate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_escrowAddress\",\"type\":\"address\"}],\"name\":\"closeAllocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_escrowAddress\",\"type\":\"address\"}],\"name\":\"getAllocation\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"escrowAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct IStaking.Allocation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_escrowAddress\",\"type\":\"address\"}],\"name\":\"getAllocationState\",\"outputs\":[{\"internalType\":\"enum IStaking.AllocationState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListOfStakers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokensStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensAllocated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensLocked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensLockedUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct Stakes.Staker[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getStakedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getStaker\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokensStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensAllocated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensLocked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensLockedUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct Stakes.Staker\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_indexer\",\"type\":\"address\"}],\"name\":\"hasAvailableStake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_indexer\",\"type\":\"address\"}],\"name\":\"hasStake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_escrowAddress\",\"type\":\"address\"}],\"name\":\"isAllocation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_lockPeriod\",\"type\":\"uint32\"}],\"name\":\"setLockPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minimumStake\",\"type\":\"uint256\"}],\"name\":\"setMinimumStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardPool\",\"type\":\"address\"}],\"name\":\"setRewardPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_slasher\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_escrowAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"slash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IStaking.sol\":\"IStaking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IStaking.sol\":{\"keccak256\":\"0x9a168e4145e386b4776ac1c9f2944d1a95c75d589ae8b517e9b1e30ab230d90f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d56eebbc549bda0efc57d19734f18bf1fb835678b5992ca2fd59d48352c8ca16\",\"dweb:/ipfs/QmUBniZT3BoupJeEEb5AEER3pLtBAsGpNUse4Ca7HT4LBF\"]},\"contracts/libs/Stakes.sol\":{\"keccak256\":\"0x9cbff02f2f5b0bf848223da3f4589976de11939d7d8995f035cc75ff815f3ea4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fcf0959bd49c5f6e6ce22cd61bbe9ccd8811b78bfd6e7a595f0ff7ebcef6a35\",\"dweb:/ipfs/QmdtY1v3aFD7svij96reHfVoMq1nHQyxnzggyNpnVQT3HV\"]},\"contracts/utils/Math.sol\":{\"keccak256\":\"0x3f7160d9532f649f92ea606aa2758ce1cd8a7878ac613fe3c171a164bae13f50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79cd7ac03188d292654c5ad61b3d3652296408808a88cc87e8b4463eddf4622a\",\"dweb:/ipfs/Qmf2oQtBtyY9nYM3V78cN31sSiqXFWDDiMsvd4GjLuwS2A\"]},\"contracts/utils/SafeMath.sol\":{\"keccak256\":\"0xb93e3401bd7d427ce856810e5300e9f69090dfdbd82fe2c9627e7239b0956436\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec4800381138548bc4ab15e83801741c63deeceb29182406c8e2b2dd926a1f15\",\"dweb:/ipfs/QmREWyN8PScUTeXuWSRzZP4iJNWJHoAd738gWiPeZkXsvn\"]}},\"version\":1}"}},"contracts/interfaces/THXCTokenInterface.sol":{"THXCTokenInterface":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_owner","type":"address"},{"indexed":true,"internalType":"address","name":"_spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"_value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_from","type":"address"},{"indexed":true,"internalType":"address","name":"_to","type":"address"},{"indexed":false,"internalType":"uint256","name":"_value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_tos","type":"address[]"},{"internalType":"uint256[]","name":"_values","type":"uint256[]"},{"internalType":"uint256","name":"_txId","type":"uint256"}],"name":"transferBulk","outputs":[{"internalType":"uint256","name":"_bulkCount","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","transfer(address,uint256)":"a9059cbb","transferBulk(address[],uint256[],uint256)":"e816d8d8","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tos\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_txId\",\"type\":\"uint256\"}],\"name\":\"transferBulk\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_bulkCount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"_owner\":\"The address of the account owning tokens\",\"_spender\":\"The address of the account able to transfer the tokens\"},\"returns\":{\"remaining\":\"Amount of remaining tokens allowed to spent\"}},\"approve(address,uint256)\":{\"params\":{\"_spender\":\"The address of the account able to transfer the tokens\",\"_value\":\"The amount of tokens to be approved for transfer\"},\"returns\":{\"success\":\"Whether the approval was successful or not\"}},\"balanceOf(address)\":{\"params\":{\"_owner\":\"The address from which the balance will be retrieved\"},\"returns\":{\"balance\":\"The balance\"}},\"transfer(address,uint256)\":{\"params\":{\"_to\":\"The address of the recipient\",\"_value\":\"The amount of token to be transferred\"},\"returns\":{\"success\":\"Whether the transfer was successful or not\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"_from\":\"The address of the sender\",\"_to\":\"The address of the recipient\",\"_value\":\"The amount of token to be transferred\"},\"returns\":{\"success\":\"Whether the transfer was successful or not\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"`msg.sender` approves `_spender` to spend `_value` tokens\"},\"transfer(address,uint256)\":{\"notice\":\"send `_value` token to `_to` from `msg.sender`\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/THXCTokenInterface.sol\":\"THXCTokenInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/THXCTokenInterface.sol\":{\"keccak256\":\"0xa348a71fd89bb3b32748372802c41f348e641602a4093b478c6c85af0f46c5aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f602aaefea22e5c316ea6db272fffc4e19266946d21609cfbb217186f32f1b6\",\"dweb:/ipfs/QmRimCTGeXhMn7aWBkmJqaeyEDbLomRmjYyxvScGQydaF4\"]}},\"version\":1}"}},"contracts/libs/Stakes.sol":{"Stakes":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a118ef555931552d24230d2ba1c241f1fc39ecbbc9c125b5e0adac8ae764ae5664736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 XOR 0xEF SSTORE MSIZE BALANCE SSTORE 0x2D 0x24 0x23 0xD 0x2B LOG1 0xC2 COINBASE CALL 0xFC CODECOPY 0xEC 0xBB 0xC9 0xC1 0x25 0xB5 0xE0 0xAD 0xAC DUP11 0xE7 PUSH5 0xAE5664736F PUSH13 0x63430008090033000000000000 ","sourceMap":"209:4717:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;209:4717:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a118ef555931552d24230d2ba1c241f1fc39ecbbc9c125b5e0adac8ae764ae5664736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 XOR 0xEF SSTORE MSIZE BALANCE SSTORE 0x2D 0x24 0x23 0xD 0x2B LOG1 0xC2 COINBASE CALL 0xFC CODECOPY 0xEC 0xBB 0xC9 0xC1 0x25 0xB5 0xE0 0xAD 0xAC DUP11 0xE7 PUSH5 0xAE5664736F PUSH13 0x63430008090033000000000000 ","sourceMap":"209:4717:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Structures, methods and data are available to manage the staker state.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/Stakes.sol\":\"Stakes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/libs/Stakes.sol\":{\"keccak256\":\"0x9cbff02f2f5b0bf848223da3f4589976de11939d7d8995f035cc75ff815f3ea4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fcf0959bd49c5f6e6ce22cd61bbe9ccd8811b78bfd6e7a595f0ff7ebcef6a35\",\"dweb:/ipfs/QmdtY1v3aFD7svij96reHfVoMq1nHQyxnzggyNpnVQT3HV\"]},\"contracts/utils/Math.sol\":{\"keccak256\":\"0x3f7160d9532f649f92ea606aa2758ce1cd8a7878ac613fe3c171a164bae13f50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79cd7ac03188d292654c5ad61b3d3652296408808a88cc87e8b4463eddf4622a\",\"dweb:/ipfs/Qmf2oQtBtyY9nYM3V78cN31sSiqXFWDDiMsvd4GjLuwS2A\"]},\"contracts/utils/SafeMath.sol\":{\"keccak256\":\"0xb93e3401bd7d427ce856810e5300e9f69090dfdbd82fe2c9627e7239b0956436\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec4800381138548bc4ab15e83801741c63deeceb29182406c8e2b2dd926a1f15\",\"dweb:/ipfs/QmREWyN8PScUTeXuWSRzZP4iJNWJHoAd738gWiPeZkXsvn\"]}},\"version\":1}"}},"contracts/utils/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d5b3cdde3716e43ad4570783def6190ba86d3105d32330ee7738dfc8e47c607864736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xB3 0xCD 0xDE CALLDATACOPY AND 0xE4 GASPRICE 0xD4 JUMPI SMOD DUP4 0xDE 0xF6 NOT SIGNEXTEND 0xA8 PUSH14 0x3105D32330EE7738DFC8E47C6078 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"180:4984:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;180:4984:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d5b3cdde3716e43ad4570783def6190ba86d3105d32330ee7738dfc8e47c607864736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xB3 0xCD 0xDE CALLDATACOPY AND 0xE4 GASPRICE 0xD4 JUMPI SMOD DUP4 0xDE 0xF6 NOT SIGNEXTEND 0xA8 PUSH14 0x3105D32330EE7738DFC8E47C6078 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"180:4984:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Math Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A collection of functions to perform math operations\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/utils/Math.sol\":{\"keccak256\":\"0x3f7160d9532f649f92ea606aa2758ce1cd8a7878ac613fe3c171a164bae13f50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79cd7ac03188d292654c5ad61b3d3652296408808a88cc87e8b4463eddf4622a\",\"dweb:/ipfs/Qmf2oQtBtyY9nYM3V78cN31sSiqXFWDDiMsvd4GjLuwS2A\"]},\"contracts/utils/SafeMath.sol\":{\"keccak256\":\"0xb93e3401bd7d427ce856810e5300e9f69090dfdbd82fe2c9627e7239b0956436\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec4800381138548bc4ab15e83801741c63deeceb29182406c8e2b2dd926a1f15\",\"dweb:/ipfs/QmREWyN8PScUTeXuWSRzZP4iJNWJHoAd738gWiPeZkXsvn\"]}},\"version\":1}"}},"contracts/utils/SafeMath.sol":{"SafeMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122058e472c9b3f06f90414e9bed9f33f83c27ce1a176c6b4be791adbf05e9a47b6b64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0xE4 PUSH19 0xC9B3F06F90414E9BED9F33F83C27CE1A176C6B 0x4B 0xE7 SWAP2 0xAD 0xBF SDIV 0xE9 LOG4 PUSH28 0x6B64736F6C6343000809003300000000000000000000000000000000 ","sourceMap":"623:4668:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;623:4668:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122058e472c9b3f06f90414e9bed9f33f83c27ce1a176c6b4be791adbf05e9a47b6b64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0xE4 PUSH19 0xC9B3F06F90414E9BED9F33F83C27CE1A176C6B 0x4B 0xE7 SWAP2 0xAD 0xBF SDIV 0xE9 LOG4 PUSH28 0x6B64736F6C6343000809003300000000000000000000000000000000 ","sourceMap":"623:4668:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/utils/SafeMath.sol\":{\"keccak256\":\"0xb93e3401bd7d427ce856810e5300e9f69090dfdbd82fe2c9627e7239b0956436\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec4800381138548bc4ab15e83801741c63deeceb29182406c8e2b2dd926a1f15\",\"dweb:/ipfs/QmREWyN8PScUTeXuWSRzZP4iJNWJHoAd738gWiPeZkXsvn\"]}},\"version\":1}"}}}}}